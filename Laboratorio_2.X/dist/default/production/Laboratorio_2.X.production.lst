

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Feb 01 19:30:29 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.10
    17                           ; Generated 31/07/2019 GMT
    18                           ; 
    19                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206                           
   207                           	psect	idataBANK0
   208  0123                     __pidataBANK0:	
   209                           
   210                           ;initializer for _array
   211  0123  3400               	retlw	0
   212  0124  3400               	retlw	0
   213  0125  3401               	retlw	1
   214  0126  3400               	retlw	0
   215  0127  3403               	retlw	3
   216  0128  3400               	retlw	0
   217  0129  3407               	retlw	7
   218  012A  3400               	retlw	0
   219  012B  340F               	retlw	15
   220  012C  3400               	retlw	0
   221  012D  341F               	retlw	31
   222  012E  3400               	retlw	0
   223  012F  343F               	retlw	63
   224  0130  3400               	retlw	0
   225  0131  347F               	retlw	127
   226  0132  3400               	retlw	0
   227  0133  34FF               	retlw	255
   228  0134  3400               	retlw	0
   229  001E                     _ADRESH	set	30
   230  0006                     _PORTBbits	set	6
   231  001F                     _ADCON0bits	set	31
   232  0006                     _PORTB	set	6
   233  0005                     _PORTA	set	5
   234  0008                     _PORTD	set	8
   235  0001                     _TMR0	set	1
   236  000B                     _INTCONbits	set	11
   237  005A                     _TMR0IF	set	90
   238  009F                     _ADCON1bits	set	159
   239  0086                     _TRISB	set	134
   240  0088                     _TRISD	set	136
   241  0085                     _TRISA	set	133
   242  0081                     _OPTION_REGbits	set	129
   243  008F                     _OSCCONbits	set	143
   244  0189                     _ANSELH	set	393
   245  0188                     _ANSEL	set	392
   246                           
   247                           ; #config settings
   248  0000                     
   249                           	psect	cinit
   250  000F                     start_initialization:	
   251  000F                     __initialization:	
   252                           
   253                           ; Initialize objects allocated to BANK0
   254  000F  1383               	bcf	3,7	;select IRP bank0
   255  0010  3032               	movlw	low (__pdataBANK0+18)
   256  0011  00FD               	movwf	btemp+-1
   257  0012  3001               	movlw	high __pidataBANK0
   258  0013  00FE               	movwf	btemp
   259  0014  3023               	movlw	low __pidataBANK0
   260  0015  00FF               	movwf	btemp+1
   261  0016  3020               	movlw	low __pdataBANK0
   262  0017  0084               	movwf	4
   263  0018  120A  118A  2114  120A  118A  	fcall	init_ram0
   264                           
   265                           ; Clear objects allocated to COMMON
   266  001D  01F0               	clrf	__pbssCOMMON& (0+127)
   267  001E  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   268  001F  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   269  0020  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   270  0021  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   271  0022  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   272  0023  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   273  0024                     end_of_initialization:	
   274                           ;End of C runtime variable initialization code
   275                           
   276  0024                     __end_of__initialization:	
   277  0024  0183               	clrf	3
   278  0025  120A  118A  2828   	ljmp	_main	;jump to C main() function
   279                           
   280                           	psect	bssCOMMON
   281  0070                     __pbssCOMMON:	
   282  0070                     _variable:	
   283  0070                     	ds	2
   284  0072                     _antirebote:	
   285  0072                     	ds	2
   286  0074                     _contador:	
   287  0074                     	ds	2
   288  0076                     _valana:	
   289  0076                     	ds	1
   290                           
   291                           	psect	dataBANK0
   292  0020                     __pdataBANK0:	
   293  0020                     _array:	
   294  0020                     	ds	18
   295                           
   296                           	psect	inittext
   297  0110                     init_fetch0:	
   298                           ;	Called with low address in FSR and high address in W
   299                           
   300  0110  087E               	movf	btemp,w
   301  0111  008A               	movwf	10
   302  0112  087F               	movf	btemp+1,w
   303  0113  0082               	movwf	2
   304  0114                     init_ram0:	
   305                           ;Called with:
   306                           ;	high address of idata address in btemp 
   307                           ;	low address of idata address in btemp+1 
   308                           ;	low address of data in FSR
   309                           ;	high address + 1 of data in btemp-1
   310                           
   311  0114  120A  118A  2110  120A  118A  	fcall	init_fetch0
   312  0119  0080               	movwf	0
   313  011A  0A84               	incf	4,f
   314  011B  0804               	movf	4,w
   315  011C  067D               	xorwf	btemp+-1,w
   316  011D  1903               	btfsc	3,2
   317  011E  3400               	retlw	0
   318  011F  0AFF               	incf	btemp+1,f
   319  0120  1903               	btfsc	3,2
   320  0121  0AFE               	incf	btemp,f
   321  0122  2914               	goto	init_ram0
   322                           
   323                           	psect	cstackCOMMON
   324  0077                     __pcstackCOMMON:	
   325  0077                     ?_pot:	
   326  0077                     ?_ISR:	
   327                           ; 1 bytes @ 0x0
   328                           
   329  0077                     ??_ISR:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0077                     ?_main:	
   333                           ; 1 bytes @ 0x0
   334                           
   335                           
   336                           ; 1 bytes @ 0x0
   337  0077                     	ds	2
   338  0079                     ??_pot:	
   339                           
   340                           ; 1 bytes @ 0x2
   341  0079                     	ds	1
   342  007A                     ??_main:	
   343                           
   344                           ; 1 bytes @ 0x3
   345  007A                     	ds	3
   346                           
   347                           	psect	maintext
   348  0028                     __pmaintext:	
   349 ;;
   350 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   351 ;;
   352 ;; *************** function _main *****************
   353 ;; Defined at:
   354 ;;		line 51 in file "Laboratorio_2.c"
   355 ;; Parameters:    Size  Location     Type
   356 ;;		None
   357 ;; Auto vars:     Size  Location     Type
   358 ;;		None
   359 ;; Return value:  Size  Location     Type
   360 ;;                  1    wreg      void 
   361 ;; Registers used:
   362 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   363 ;; Tracked objects:
   364 ;;		On entry : B00/0
   365 ;;		On exit  : 0/0
   366 ;;		Unchanged: 0/0
   367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   368 ;;      Params:         0       0       0       0       0
   369 ;;      Locals:         0       0       0       0       0
   370 ;;      Temps:          3       0       0       0       0
   371 ;;      Totals:         3       0       0       0       0
   372 ;;Total ram usage:        3 bytes
   373 ;; Hardware stack levels required when called:    2
   374 ;; This function calls:
   375 ;;		_pot
   376 ;; This function is called by:
   377 ;;		Startup code after reset
   378 ;; This function uses a non-reentrant model
   379 ;;
   380                           
   381                           
   382                           ;psect for function _main
   383  0028                     _main:	
   384  0028                     l686:	
   385                           ;incstack = 0
   386                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   387                           
   388                           
   389                           ;Laboratorio_2.c: 52:     OSCCONbits.IRCF =0b110;
   390  0028  1683               	bsf	3,5	;RP0=1, select bank1
   391  0029  1303               	bcf	3,6	;RP1=0, select bank1
   392  002A  080F               	movf	15,w	;volatile
   393  002B  398F               	andlw	-113
   394  002C  3860               	iorlw	96
   395  002D  008F               	movwf	15	;volatile
   396  002E                     l688:	
   397                           
   398                           ;Laboratorio_2.c: 53:     INTCONbits.GIE = 1;
   399  002E  178B               	bsf	11,7	;volatile
   400  002F                     l690:	
   401                           
   402                           ;Laboratorio_2.c: 54:     INTCONbits.PEIE = 1;
   403  002F  170B               	bsf	11,6	;volatile
   404  0030                     l692:	
   405                           
   406                           ;Laboratorio_2.c: 55:     INTCONbits.TMR0IE = 1;
   407  0030  168B               	bsf	11,5	;volatile
   408  0031                     l694:	
   409                           
   410                           ;Laboratorio_2.c: 56:     INTCONbits.TMR0IF = 0;
   411  0031  110B               	bcf	11,2	;volatile
   412  0032                     l696:	
   413                           
   414                           ;Laboratorio_2.c: 57:     OPTION_REGbits.T0CS = 0;
   415  0032  1281               	bcf	1,5	;volatile
   416  0033                     l698:	
   417                           
   418                           ;Laboratorio_2.c: 58:     OPTION_REGbits.T0SE = 0;
   419  0033  1201               	bcf	1,4	;volatile
   420  0034                     l700:	
   421                           
   422                           ;Laboratorio_2.c: 59:     OPTION_REGbits.PSA = 0;
   423  0034  1181               	bcf	1,3	;volatile
   424  0035                     l702:	
   425                           
   426                           ;Laboratorio_2.c: 60:     OPTION_REGbits.PS0 = 1;
   427  0035  1401               	bsf	1,0	;volatile
   428  0036                     l704:	
   429                           
   430                           ;Laboratorio_2.c: 61:     OPTION_REGbits.PS1 = 1;
   431  0036  1481               	bsf	1,1	;volatile
   432  0037                     l706:	
   433                           
   434                           ;Laboratorio_2.c: 62:     OPTION_REGbits.PS2 = 1;
   435  0037  1501               	bsf	1,2	;volatile
   436  0038                     l708:	
   437                           
   438                           ;Laboratorio_2.c: 63:     TRISA = 0b00000000;
   439  0038  0185               	clrf	5	;volatile
   440  0039                     l710:	
   441                           
   442                           ;Laboratorio_2.c: 64:     TRISD = 0b00000000;
   443  0039  0188               	clrf	8	;volatile
   444  003A                     l712:	
   445                           
   446                           ;Laboratorio_2.c: 65:     ANSEL = 0b00000000;
   447  003A  1683               	bsf	3,5	;RP0=1, select bank3
   448  003B  1703               	bsf	3,6	;RP1=1, select bank3
   449  003C  0188               	clrf	8	;volatile
   450  003D                     l714:	
   451                           
   452                           ;Laboratorio_2.c: 66:     ANSELH = 0b00100000;
   453  003D  3020               	movlw	32
   454  003E  0089               	movwf	9	;volatile
   455  003F                     l716:	
   456                           
   457                           ;Laboratorio_2.c: 67:     PORTD = 0b00000000;
   458  003F  1283               	bcf	3,5	;RP0=0, select bank0
   459  0040  1303               	bcf	3,6	;RP1=0, select bank0
   460  0041  0188               	clrf	8	;volatile
   461  0042                     l718:	
   462                           
   463                           ;Laboratorio_2.c: 68:     PORTA = 0b00000000;
   464  0042  0185               	clrf	5	;volatile
   465  0043                     l720:	
   466                           
   467                           ;Laboratorio_2.c: 69:     PORTB = 0b00100011;
   468  0043  3023               	movlw	35
   469  0044  0086               	movwf	6	;volatile
   470  0045                     l722:	
   471                           
   472                           ;Laboratorio_2.c: 70:     TRISB = 0b00100011;
   473  0045  3023               	movlw	35
   474  0046  1683               	bsf	3,5	;RP0=1, select bank1
   475  0047  1303               	bcf	3,6	;RP1=0, select bank1
   476  0048  0086               	movwf	6	;volatile
   477  0049                     l724:	
   478                           
   479                           ;Laboratorio_2.c: 71:     ADCON0bits.ADCS0 =1;
   480  0049  1283               	bcf	3,5	;RP0=0, select bank0
   481  004A  1303               	bcf	3,6	;RP1=0, select bank0
   482  004B  171F               	bsf	31,6	;volatile
   483  004C                     l726:	
   484                           
   485                           ;Laboratorio_2.c: 72:     ADCON0bits.ADCS1 =0;
   486  004C  139F               	bcf	31,7	;volatile
   487  004D                     l728:	
   488                           
   489                           ;Laboratorio_2.c: 73:     ADCON0bits.CHS0 =1;
   490  004D  151F               	bsf	31,2	;volatile
   491  004E                     l730:	
   492                           
   493                           ;Laboratorio_2.c: 74:     ADCON0bits.CHS1 =0;
   494  004E  119F               	bcf	31,3	;volatile
   495  004F                     l732:	
   496                           
   497                           ;Laboratorio_2.c: 75:     ADCON0bits.CHS2 =1;
   498  004F  161F               	bsf	31,4	;volatile
   499  0050                     l734:	
   500                           
   501                           ;Laboratorio_2.c: 76:     ADCON0bits.CHS3 =1;
   502  0050  169F               	bsf	31,5	;volatile
   503  0051                     l736:	
   504                           
   505                           ;Laboratorio_2.c: 77:     ADCON1bits.ADFM =0;
   506  0051  1683               	bsf	3,5	;RP0=1, select bank1
   507  0052  1303               	bcf	3,6	;RP1=0, select bank1
   508  0053  139F               	bcf	31,7	;volatile
   509  0054                     l738:	
   510                           
   511                           ;Laboratorio_2.c: 78:     ADCON1bits.VCFG0 =0;
   512  0054  121F               	bcf	31,4	;volatile
   513  0055                     l740:	
   514                           
   515                           ;Laboratorio_2.c: 79:     ADCON1bits.VCFG1 =0;
   516  0055  129F               	bcf	31,5	;volatile
   517  0056                     l742:	
   518                           
   519                           ;Laboratorio_2.c: 83:         pot();
   520  0056  120A  118A  20FC  120A  118A  	fcall	_pot
   521  005B                     l744:	
   522                           
   523                           ;Laboratorio_2.c: 84:         if (PORTBbits.RB1 == 0 && PORTBbits.RB0 == 0){
   524  005B  1283               	bcf	3,5	;RP0=0, select bank0
   525  005C  1303               	bcf	3,6	;RP1=0, select bank0
   526  005D  1886               	btfsc	6,1	;volatile
   527  005E  2860               	goto	u31
   528  005F  2861               	goto	u30
   529  0060                     u31:	
   530  0060  2870               	goto	l750
   531  0061                     u30:	
   532  0061                     l746:	
   533  0061  1806               	btfsc	6,0	;volatile
   534  0062  2864               	goto	u41
   535  0063  2865               	goto	u40
   536  0064                     u41:	
   537  0064  2870               	goto	l750
   538  0065                     u40:	
   539  0065                     l748:	
   540                           
   541                           ;Laboratorio_2.c: 85:             antirebote = 1;
   542  0065  3001               	movlw	1
   543  0066  00F2               	movwf	_antirebote
   544  0067  3000               	movlw	0
   545  0068  00F3               	movwf	_antirebote+1
   546                           
   547                           ;Laboratorio_2.c: 86:             _delay((unsigned long)((1)*(4000000/4000.0)));
   548  0069  30C7               	movlw	199
   549  006A  00FA               	movwf	??_main
   550  006B                     u167:	
   551  006B  286C               	nop2
   552  006C  0BFA               	decfsz	??_main,f
   553  006D  286B               	goto	u167
   554  006E  286F               	nop2
   555  006F  2870               	nop2
   556  0070                     l750:	
   557                           
   558                           ;Laboratorio_2.c: 88:         if(PORTBbits.RB0 == 1 && antirebote ==1 && contador<=8 && 
      +                          contador >=0){
   559  0070  1283               	bcf	3,5	;RP0=0, select bank0
   560  0071  1303               	bcf	3,6	;RP1=0, select bank0
   561  0072  1C06               	btfss	6,0	;volatile
   562  0073  2875               	goto	u51
   563  0074  2876               	goto	u50
   564  0075                     u51:	
   565  0075  28A5               	goto	l768
   566  0076                     u50:	
   567  0076                     l752:	
   568  0076  0372               	decf	_antirebote,w
   569  0077  0473               	iorwf	_antirebote+1,w
   570  0078  1D03               	btfss	3,2
   571  0079  287B               	goto	u61
   572  007A  287C               	goto	u60
   573  007B                     u61:	
   574  007B  28A5               	goto	l768
   575  007C                     u60:	
   576  007C                     l754:	
   577  007C  3000               	movlw	0
   578  007D  0275               	subwf	_contador+1,w
   579  007E  3009               	movlw	9
   580  007F  1903               	skipnz
   581  0080  0274               	subwf	_contador,w
   582  0081  1803               	skipnc
   583  0082  2884               	goto	u71
   584  0083  2885               	goto	u70
   585  0084                     u71:	
   586  0084  28A5               	goto	l768
   587  0085                     u70:	
   588  0085                     l756:	
   589                           
   590                           ;Laboratorio_2.c: 89:             antirebote=0;
   591  0085  01F2               	clrf	_antirebote
   592  0086  01F3               	clrf	_antirebote+1
   593  0087                     l758:	
   594                           
   595                           ;Laboratorio_2.c: 90:             contador++;
   596  0087  3001               	movlw	1
   597  0088  07F4               	addwf	_contador,f
   598  0089  1803               	skipnc
   599  008A  0AF5               	incf	_contador+1,f
   600  008B  3000               	movlw	0
   601  008C  07F5               	addwf	_contador+1,f
   602  008D                     l760:	
   603                           
   604                           ;Laboratorio_2.c: 91:             if(contador == 9){
   605  008D  3009               	movlw	9
   606  008E  0674               	xorwf	_contador,w
   607  008F  0475               	iorwf	_contador+1,w
   608  0090  1D03               	btfss	3,2
   609  0091  2893               	goto	u81
   610  0092  2894               	goto	u80
   611  0093                     u81:	
   612  0093  2898               	goto	l764
   613  0094                     u80:	
   614  0094                     l762:	
   615                           
   616                           ;Laboratorio_2.c: 92:                 contador = 8;
   617  0094  3008               	movlw	8
   618  0095  00F4               	movwf	_contador
   619  0096  3000               	movlw	0
   620  0097  00F5               	movwf	_contador+1
   621  0098                     l764:	
   622                           
   623                           ;Laboratorio_2.c: 94:             variable = array[contador];
   624  0098  0874               	movf	_contador,w
   625  0099  00FA               	movwf	??_main
   626  009A  077A               	addwf	??_main,w
   627  009B  3E20               	addlw	(low (_array| 0))& (0+255)
   628  009C  0084               	movwf	4
   629  009D  1383               	bcf	3,7	;select IRP bank0
   630  009E  0800               	movf	0,w
   631  009F  00F0               	movwf	_variable
   632  00A0  0A84               	incf	4,f
   633  00A1  0800               	movf	0,w
   634  00A2  00F1               	movwf	_variable+1
   635  00A3                     l766:	
   636                           
   637                           ;Laboratorio_2.c: 95:             PORTA = variable;
   638  00A3  0870               	movf	_variable,w
   639  00A4  0085               	movwf	5	;volatile
   640  00A5                     l768:	
   641                           
   642                           ;Laboratorio_2.c: 97:         if(PORTBbits.RB1 == 1 && antirebote ==1 && contador>= 0 &&
      +                           contador<=8){
   643  00A5  1C86               	btfss	6,1	;volatile
   644  00A6  28A8               	goto	u91
   645  00A7  28A9               	goto	u90
   646  00A8                     u91:	
   647  00A8  28D7               	goto	l786
   648  00A9                     u90:	
   649  00A9                     l770:	
   650  00A9  0372               	decf	_antirebote,w
   651  00AA  0473               	iorwf	_antirebote+1,w
   652  00AB  1D03               	btfss	3,2
   653  00AC  28AE               	goto	u101
   654  00AD  28AF               	goto	u100
   655  00AE                     u101:	
   656  00AE  28D7               	goto	l786
   657  00AF                     u100:	
   658  00AF                     l772:	
   659  00AF  3000               	movlw	0
   660  00B0  0275               	subwf	_contador+1,w
   661  00B1  3009               	movlw	9
   662  00B2  1903               	skipnz
   663  00B3  0274               	subwf	_contador,w
   664  00B4  1803               	skipnc
   665  00B5  28B7               	goto	u111
   666  00B6  28B8               	goto	u110
   667  00B7                     u111:	
   668  00B7  28D7               	goto	l786
   669  00B8                     u110:	
   670  00B8                     l774:	
   671                           
   672                           ;Laboratorio_2.c: 98:             antirebote= 0;
   673  00B8  01F2               	clrf	_antirebote
   674  00B9  01F3               	clrf	_antirebote+1
   675  00BA                     l776:	
   676                           
   677                           ;Laboratorio_2.c: 99:             contador--;
   678  00BA  3001               	movlw	1
   679  00BB  02F4               	subwf	_contador,f
   680  00BC  3000               	movlw	0
   681  00BD  1C03               	skipc
   682  00BE  03F5               	decf	_contador+1,f
   683  00BF  02F5               	subwf	_contador+1,f
   684  00C0                     l778:	
   685                           
   686                           ;Laboratorio_2.c: 100:             if(contador ==(-1)){
   687  00C0  0A74               	incf	_contador,w
   688  00C1  1D03               	skipz
   689  00C2  28C7               	goto	u121
   690  00C3  0A75               	incf	_contador+1,w
   691  00C4  1D03               	btfss	3,2
   692  00C5  28C7               	goto	u121
   693  00C6  28C8               	goto	u120
   694  00C7                     u121:	
   695  00C7  28CA               	goto	l782
   696  00C8                     u120:	
   697  00C8                     l780:	
   698                           
   699                           ;Laboratorio_2.c: 101:                 contador = 0;
   700  00C8  01F4               	clrf	_contador
   701  00C9  01F5               	clrf	_contador+1
   702  00CA                     l782:	
   703                           
   704                           ;Laboratorio_2.c: 103:             variable = array[contador];
   705  00CA  0874               	movf	_contador,w
   706  00CB  00FA               	movwf	??_main
   707  00CC  077A               	addwf	??_main,w
   708  00CD  3E20               	addlw	(low (_array| 0))& (0+255)
   709  00CE  0084               	movwf	4
   710  00CF  1383               	bcf	3,7	;select IRP bank0
   711  00D0  0800               	movf	0,w
   712  00D1  00F0               	movwf	_variable
   713  00D2  0A84               	incf	4,f
   714  00D3  0800               	movf	0,w
   715  00D4  00F1               	movwf	_variable+1
   716  00D5                     l784:	
   717                           
   718                           ;Laboratorio_2.c: 104:             PORTA = variable;
   719  00D5  0870               	movf	_variable,w
   720  00D6  0085               	movwf	5	;volatile
   721  00D7                     l786:	
   722                           
   723                           ;Laboratorio_2.c: 107:         if(ADRESH >= contador){
   724  00D7  081E               	movf	30,w	;volatile
   725  00D8  00FA               	movwf	??_main
   726  00D9  01FB               	clrf	??_main+1
   727  00DA  0875               	movf	_contador+1,w
   728  00DB  027B               	subwf	??_main+1,w
   729  00DC  1D03               	skipz
   730  00DD  28E0               	goto	u135
   731  00DE  0874               	movf	_contador,w
   732  00DF  027A               	subwf	??_main,w
   733  00E0                     u135:	
   734  00E0  1C03               	skipc
   735  00E1  28E3               	goto	u131
   736  00E2  28E4               	goto	u130
   737  00E3                     u131:	
   738  00E3  2856               	goto	l742
   739  00E4                     u130:	
   740  00E4                     l788:	
   741                           
   742                           ;Laboratorio_2.c: 108:             PORTD = 0b10000000;
   743  00E4  3080               	movlw	128
   744  00E5  0088               	movwf	8	;volatile
   745  00E6                     l790:	
   746                           
   747                           ;Laboratorio_2.c: 109:             if (ADRESH << contador){
   748  00E6  0A74               	incf	_contador,w
   749  00E7  00FA               	movwf	??_main
   750  00E8  081E               	movf	30,w	;volatile
   751  00E9  00FB               	movwf	??_main+1
   752  00EA  01FC               	clrf	??_main+2
   753  00EB  28EF               	goto	u144
   754  00EC                     u145:	
   755  00EC  1003               	clrc
   756  00ED  0DFB               	rlf	??_main+1,f
   757  00EE  0DFC               	rlf	??_main+2,f
   758  00EF                     u144:	
   759  00EF  0BFA               	decfsz	??_main,f
   760  00F0  28EC               	goto	u145
   761  00F1  087B               	movf	??_main+1,w
   762  00F2  047C               	iorwf	??_main+2,w
   763  00F3  1903               	btfsc	3,2
   764  00F4  28F6               	goto	u151
   765  00F5  28F7               	goto	u150
   766  00F6                     u151:	
   767  00F6  2856               	goto	l742
   768  00F7                     u150:	
   769  00F7                     l792:	
   770                           
   771                           ;Laboratorio_2.c: 110:                 PORTD = 0b00000000;
   772  00F7  0188               	clrf	8	;volatile
   773  00F8  2856               	goto	l742
   774  00F9  120A  118A  280C   	ljmp	start
   775  00FC                     __end_of_main:	
   776                           
   777                           	psect	text1
   778  00FC                     __ptext1:	
   779 ;; *************** function _pot *****************
   780 ;; Defined at:
   781 ;;		line 126 in file "Laboratorio_2.c"
   782 ;; Parameters:    Size  Location     Type
   783 ;;		None
   784 ;; Auto vars:     Size  Location     Type
   785 ;;		None
   786 ;; Return value:  Size  Location     Type
   787 ;;                  1    wreg      void 
   788 ;; Registers used:
   789 ;;		wreg
   790 ;; Tracked objects:
   791 ;;		On entry : 0/0
   792 ;;		On exit  : 0/0
   793 ;;		Unchanged: 0/0
   794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   795 ;;      Params:         0       0       0       0       0
   796 ;;      Locals:         0       0       0       0       0
   797 ;;      Temps:          1       0       0       0       0
   798 ;;      Totals:         1       0       0       0       0
   799 ;;Total ram usage:        1 bytes
   800 ;; Hardware stack levels used:    1
   801 ;; Hardware stack levels required when called:    1
   802 ;; This function calls:
   803 ;;		Nothing
   804 ;; This function is called by:
   805 ;;		_main
   806 ;; This function uses a non-reentrant model
   807 ;;
   808                           
   809                           
   810                           ;psect for function _pot
   811  00FC                     _pot:	
   812  00FC                     l72:	
   813                           ;incstack = 0
   814                           ; Regs used in _pot: [wreg]
   815                           ;Laboratorio_2.c: 127:     while(1){
   816                           
   817  00FC                     l668:	
   818                           
   819                           ;Laboratorio_2.c: 128:         _delay((unsigned long)((1)*(4000000/4000.0)));
   820  00FC  30C7               	movlw	199
   821  00FD  00F9               	movwf	??_pot
   822  00FE                     u177:	
   823  00FE  28FF               	nop2
   824  00FF  0BF9               	decfsz	??_pot,f
   825  0100  28FE               	goto	u177
   826  0101  2902               	nop2
   827  0102  2903               	nop2
   828  0103                     l670:	
   829                           
   830                           ;Laboratorio_2.c: 129:         ADCON0bits.ADON =1;
   831  0103  1283               	bcf	3,5	;RP0=0, select bank0
   832  0104  1303               	bcf	3,6	;RP1=0, select bank0
   833  0105  141F               	bsf	31,0	;volatile
   834  0106                     l672:	
   835                           
   836                           ;Laboratorio_2.c: 130:         if (ADCON0bits.GO_DONE ==0){
   837  0106  189F               	btfsc	31,1	;volatile
   838  0107  2909               	goto	u11
   839  0108  290A               	goto	u10
   840  0109                     u11:	
   841  0109  290B               	goto	l676
   842  010A                     u10:	
   843  010A                     l674:	
   844                           
   845                           ;Laboratorio_2.c: 131:             ADCON0bits.GO_DONE = 1;
   846  010A  149F               	bsf	31,1	;volatile
   847  010B                     l676:	
   848                           
   849                           ;Laboratorio_2.c: 133:             valana = ADRESH;
   850  010B  081E               	movf	30,w	;volatile
   851  010C  00F9               	movwf	??_pot
   852  010D  0879               	movf	??_pot,w
   853  010E  00F6               	movwf	_valana
   854  010F                     l74:	
   855  010F  0008               	return
   856  0110                     __end_of_pot:	
   857                           
   858                           	psect	text2
   859  0135                     __ptext2:	
   860 ;; *************** function _ISR *****************
   861 ;; Defined at:
   862 ;;		line 31 in file "Laboratorio_2.c"
   863 ;; Parameters:    Size  Location     Type
   864 ;;		None
   865 ;; Auto vars:     Size  Location     Type
   866 ;;		None
   867 ;; Return value:  Size  Location     Type
   868 ;;                  1    wreg      void 
   869 ;; Registers used:
   870 ;;		wreg
   871 ;; Tracked objects:
   872 ;;		On entry : 0/0
   873 ;;		On exit  : 0/0
   874 ;;		Unchanged: 0/0
   875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   876 ;;      Params:         0       0       0       0       0
   877 ;;      Locals:         0       0       0       0       0
   878 ;;      Temps:          2       0       0       0       0
   879 ;;      Totals:         2       0       0       0       0
   880 ;;Total ram usage:        2 bytes
   881 ;; Hardware stack levels used:    1
   882 ;; This function calls:
   883 ;;		Nothing
   884 ;; This function is called by:
   885 ;;		Interrupt level 1
   886 ;; This function uses a non-reentrant model
   887 ;;
   888                           
   889                           
   890                           ;psect for function _ISR
   891  0135                     _ISR:	
   892  0135                     i1l680:	
   893                           
   894                           ;Laboratorio_2.c: 32:     if (INTCONbits.TMR0IF) {
   895  0135  1D0B               	btfss	11,2	;volatile
   896  0136  2938               	goto	u2_21
   897  0137  2939               	goto	u2_20
   898  0138                     u2_21:	
   899  0138  293F               	goto	i1l44
   900  0139                     u2_20:	
   901  0139                     i1l682:	
   902                           
   903                           ;Laboratorio_2.c: 33:         INTCONbits.TMR0IF = 0;
   904  0139  110B               	bcf	11,2	;volatile
   905                           
   906                           ;Laboratorio_2.c: 35:         TMR0IF = 0;
   907  013A  110B               	bcf	11,2	;volatile
   908  013B                     i1l684:	
   909                           
   910                           ;Laboratorio_2.c: 36:         TMR0 = 4;
   911  013B  3004               	movlw	4
   912  013C  1283               	bcf	3,5	;RP0=0, select bank0
   913  013D  1303               	bcf	3,6	;RP1=0, select bank0
   914  013E  0081               	movwf	1	;volatile
   915  013F                     i1l44:	
   916  013F  0878               	movf	??_ISR+1,w
   917  0140  008A               	movwf	10
   918  0141  0E77               	swapf	??_ISR^(0+4294967168),w
   919  0142  0083               	movwf	3
   920  0143  0EFE               	swapf	btemp,f
   921  0144  0E7E               	swapf	btemp,w
   922  0145  0009               	retfie
   923  0146                     __end_of_ISR:	
   924  007E                     btemp	set	126	;btemp
   925  007E                     wtemp0	set	126
   926                           
   927                           	psect	intentry
   928  0004                     __pintentry:	
   929                           ;incstack = 0
   930                           ; Regs used in _ISR: [wreg]
   931                           
   932  0004                     interrupt_function:	
   933  007E                     saved_w	set	btemp
   934  0004  00FE               	movwf	btemp
   935  0005  0E03               	swapf	3,w
   936  0006  00F7               	movwf	??_ISR
   937  0007  080A               	movf	10,w
   938  0008  00F8               	movwf	??_ISR+1
   939  0009  120A  118A  2935   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        18
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      13
    BANK0            80      0      18
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_pot

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              3 COMMON     3     3      0
                                _pot
 ---------------------------------------------------------------------------------
 (1) _pot                                                  1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _pot

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      12       5       22.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1F      12        0.0%
ABS                  0      0      1F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Feb 01 19:30:29 2020

                       pc 0002               __CFG_CP$OFF 0000                        l72 00FC  
                      l74 010F                        u10 010A                        u11 0109  
                      u30 0061                        u31 0060                        u40 0065  
                      u41 0064                        u50 0076                        u51 0075  
                      u60 007C                        u61 007B                        u70 0085  
                      u71 0084                        u80 0094                        u81 0093  
                      u90 00A9                        u91 00A8                        fsr 0004  
                     l700 0034                       l710 0039                       l702 0035  
                     l720 0043                       l712 003A                       l704 0036  
                     l730 004E                       l722 0045                       l714 003D  
                     l706 0037                       l740 0055                       l732 004F  
                     l724 0049                       l716 003F                       l708 0038  
                     l670 0103                       l750 0070                       l742 0056  
                     l734 0050                       l726 004C                       l718 0042  
                     l672 0106                       l760 008D                       l752 0076  
                     l744 005B                       l736 0051                       l728 004D  
                     l674 010A                       l770 00A9                       l762 0094  
                     l754 007C                       l746 0061                       l738 0054  
                     l690 002F                       l676 010B                       l668 00FC  
                     l780 00C8                       l772 00AF                       l764 0098  
                     l756 0085                       l748 0065                       l692 0030  
                     l790 00E6                       l782 00CA                       l774 00B8  
                     l766 00A3                       l758 0087                       l694 0031  
                     l686 0028                       l792 00F7                       l784 00D5  
                     l776 00BA                       l768 00A5                       l696 0032  
                     l688 002E                       l778 00C0                       l786 00D7  
                     l698 0033                       l788 00E4                       u100 00AF  
                     u101 00AE                       u110 00B8                       u111 00B7  
                     u120 00C8                       u121 00C7                       u130 00E4  
                     u131 00E3                       u150 00F7                       u151 00F6  
                     u135 00E0                       u144 00EF                       u145 00EC  
                     u167 006B                       u177 00FE              __CFG_CPD$OFF 0000  
                     _ISR 0135                       _pot 00FC                       fsr0 0004  
                     indf 0000              __CFG_LVP$OFF 0000                      ?_ISR 0077  
                    ?_pot 0077                      i1l44 013F                      _TMR0 0001  
                    u2_20 0139                      u2_21 0138              __CFG_WRT$OFF 0000  
                    _main 0028                      btemp 007E                      start 000C  
           __CFG_IESO$OFF 0000                     ??_ISR 0077                     ??_pot 0079  
                   ?_main 0077             __CFG_WDTE$OFF 0000                     _ANSEL 0188  
                   i1l680 0135                     i1l682 0139                     i1l684 013B  
                   _PORTA 0005                     _PORTB 0006                     _PORTD 0008  
                   _TRISA 0085                     _TRISB 0086                     _TRISD 0088  
          __CFG_FCMEN$OFF 0000                     _array 0020            __CFG_BOREN$OFF 0000  
                   pclath 000A                     status 0003                     wtemp0 007E  
          __CFG_MCLRE$OFF 0000           __initialization 000F              __end_of_main 00FC  
                  ??_main 007A                    _ADRESH 001E                    _ANSELH 0189  
                  _TMR0IF 005A            __CFG_PWRTE$OFF 0000                    _valana 0076  
                  saved_w 007E   __end_of__initialization 0024            __pcstackCOMMON 0077  
            __pidataBANK0 0123            _OPTION_REGbits 0081                __pmaintext 0028  
              __pintentry 0004                _antirebote 0072                   __ptext1 00FC  
                 __ptext2 0135              __size_of_ISR 0011              __size_of_pot 0014  
    end_of_initialization 0024                 _PORTBbits 0006       start_initialization 000F  
             __end_of_ISR 0146               __end_of_pot 0110  __CFG_FOSC$INTRC_NOCLKOUT 0000  
              init_fetch0 0110               __pdataBANK0 0020               __pbssCOMMON 0070  
               ___latbits 0002         interrupt_function 0004                _ADCON0bits 001F  
              _ADCON1bits 009F         __CFG_BOR4V$BOR40V 0000                  _contador 0074  
           __size_of_main 00D4                  _variable 0070                _INTCONbits 000B  
                init_ram0 0114                  intlevel1 0000                _OSCCONbits 008F  
