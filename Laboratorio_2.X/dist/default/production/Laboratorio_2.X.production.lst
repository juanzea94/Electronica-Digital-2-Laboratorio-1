

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Feb 03 13:42:15 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.10
    21                           ; Generated 31/07/2019 GMT
    22                           ; 
    23                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0088                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  008F                     	;# 
   255  0090                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  0105                     	;# 
   274  0107                     	;# 
   275  0108                     	;# 
   276  0109                     	;# 
   277  010C                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0187                     	;# 
   284  0188                     	;# 
   285  0189                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288                           
   289                           	psect	idataBANK0
   290  0109                     __pidataBANK0:	
   291                           
   292                           ;initializer for _array2
   293  0109  3477               	retlw	119
   294  010A  3441               	retlw	65
   295  010B  343B               	retlw	59
   296  010C  346B               	retlw	107
   297  010D  344D               	retlw	77
   298  010E  346E               	retlw	110
   299  010F  347E               	retlw	126
   300  0110  3447               	retlw	71
   301  0111  347F               	retlw	127
   302  0112  346F               	retlw	111
   303  0113  345F               	retlw	95
   304  0114  347C               	retlw	124
   305  0115  3438               	retlw	56
   306  0116  3479               	retlw	121
   307  0117  343E               	retlw	62
   308  0118  341E               	retlw	30
   309                           
   310                           ;initializer for _array
   311  0119  3400               	retlw	0
   312  011A  3401               	retlw	1
   313  011B  3403               	retlw	3
   314  011C  3407               	retlw	7
   315  011D  340F               	retlw	15
   316  011E  341F               	retlw	31
   317  011F  343F               	retlw	63
   318  0120  347F               	retlw	127
   319  0121  34FF               	retlw	255
   320  001E                     _ADRESH	set	30
   321  0006                     _PORTBbits	set	6
   322  0007                     _PORTC	set	7
   323  0008                     _PORTDbits	set	8
   324  0006                     _PORTB	set	6
   325  0005                     _PORTA	set	5
   326  0008                     _PORTD	set	8
   327  001F                     _ADCON0bits	set	31
   328  000B                     _INTCONbits	set	11
   329  0001                     _TMR0	set	1
   330  005A                     _TMR0IF	set	90
   331  0089                     _TRISE	set	137
   332  0088                     _TRISD	set	136
   333  0087                     _TRISC	set	135
   334  0086                     _TRISB	set	134
   335  0085                     _TRISA	set	133
   336  009F                     _ADCON1bits	set	159
   337  0081                     _OPTION_REGbits	set	129
   338  008F                     _OSCCONbits	set	143
   339  0189                     _ANSELH	set	393
   340  0188                     _ANSEL	set	392
   341                           
   342                           ; #config settings
   343  0000                     
   344                           	psect	cinit
   345  000F                     start_initialization:	
   346  000F                     __initialization:	
   347                           
   348                           ; Initialize objects allocated to BANK0
   349  000F  1383               	bcf	3,7	;select IRP bank0
   350  0010  3039               	movlw	low (__pdataBANK0+25)
   351  0011  00FD               	movwf	btemp+-1
   352  0012  3001               	movlw	high __pidataBANK0
   353  0013  00FE               	movwf	btemp
   354  0014  3009               	movlw	low __pidataBANK0
   355  0015  00FF               	movwf	btemp+1
   356  0016  3020               	movlw	low __pdataBANK0
   357  0017  0084               	movwf	4
   358  0018  120A  118A  213B  120A  118A  	fcall	init_ram0
   359                           
   360                           ; Clear objects allocated to COMMON
   361  001D  01F0               	clrf	__pbssCOMMON& (0+127)
   362  001E  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   363  001F  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   364  0020  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   365  0021  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   366  0022  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   367  0023  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   368  0024                     end_of_initialization:	
   369                           ;End of C runtime variable initialization code
   370                           
   371  0024                     __end_of__initialization:	
   372  0024  0183               	clrf	3
   373  0025  120A  118A  28A8   	ljmp	_main	;jump to C main() function
   374                           
   375                           	psect	bssCOMMON
   376  0070                     __pbssCOMMON:	
   377  0070                     _numero2:	
   378  0070                     	ds	1
   379  0071                     _numero1:	
   380  0071                     	ds	1
   381  0072                     _sino:	
   382  0072                     	ds	1
   383  0073                     _variable:	
   384  0073                     	ds	1
   385  0074                     _antirebote:	
   386  0074                     	ds	1
   387  0075                     _valana:	
   388  0075                     	ds	1
   389  0076                     _contador:	
   390  0076                     	ds	1
   391                           
   392                           	psect	dataBANK0
   393  0020                     __pdataBANK0:	
   394  0020                     _array2:	
   395  0020                     	ds	16
   396  0030                     _array:	
   397  0030                     	ds	9
   398                           
   399                           	psect	inittext
   400  0137                     init_fetch0:	
   401                           ;	Called with low address in FSR and high address in W
   402                           
   403  0137  087E               	movf	btemp,w
   404  0138  008A               	movwf	10
   405  0139  087F               	movf	btemp+1,w
   406  013A  0082               	movwf	2
   407  013B                     init_ram0:	
   408                           ;Called with:
   409                           ;	high address of idata address in btemp 
   410                           ;	low address of idata address in btemp+1 
   411                           ;	low address of data in FSR
   412                           ;	high address + 1 of data in btemp-1
   413                           
   414  013B  120A  118A  2137  120A  118A  	fcall	init_fetch0
   415  0140  0080               	movwf	0
   416  0141  0A84               	incf	4,f
   417  0142  0804               	movf	4,w
   418  0143  067D               	xorwf	btemp+-1,w
   419  0144  1903               	btfsc	3,2
   420  0145  3400               	retlw	0
   421  0146  0AFF               	incf	btemp+1,f
   422  0147  1903               	btfsc	3,2
   423  0148  0AFE               	incf	btemp,f
   424  0149  293B               	goto	init_ram0
   425                           
   426                           	psect	cstackCOMMON
   427  0077                     __pcstackCOMMON:	
   428  0077                     ?_change:	
   429  0077                     ??_change:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0077                     ?_loop:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0077                     ?_conec:	
   436                           ; 1 bytes @ 0x0
   437                           
   438  0077                     ?_split:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  0077                     ?_ISR:	
   442                           ; 1 bytes @ 0x0
   443                           
   444  0077                     ??_ISR:	
   445                           ; 1 bytes @ 0x0
   446                           
   447  0077                     ?_main:	
   448                           ; 1 bytes @ 0x0
   449                           
   450  0077                     ?_segme:	
   451                           ; 1 bytes @ 0x0
   452                           
   453                           
   454                           ; 1 bytes @ 0x0
   455  0077                     	ds	2
   456  0079                     ??_conec:	
   457  0079                     ??_split:	
   458                           ; 1 bytes @ 0x2
   459                           
   460  0079                     ??_segme:	
   461                           ; 1 bytes @ 0x2
   462                           
   463                           
   464                           ; 1 bytes @ 0x2
   465  0079                     	ds	2
   466  007B                     ??_loop:	
   467                           
   468                           ; 1 bytes @ 0x4
   469  007B                     	ds	1
   470  007C                     ??_main:	
   471                           
   472                           	psect	maintext
   473  00A8                     __pmaintext:	
   474                           ; 1 bytes @ 0x5
   475 ;;
   476 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   477 ;;
   478 ;; *************** function _main *****************
   479 ;; Defined at:
   480 ;;		line 57 in file "Laboratorio_2.c"
   481 ;; Parameters:    Size  Location     Type
   482 ;;		None
   483 ;; Auto vars:     Size  Location     Type
   484 ;;		None
   485 ;; Return value:  Size  Location     Type
   486 ;;                  1    wreg      void 
   487 ;; Registers used:
   488 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   489 ;; Tracked objects:
   490 ;;		On entry : B00/0
   491 ;;		On exit  : 0/0
   492 ;;		Unchanged: 0/0
   493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   494 ;;      Params:         0       0       0       0       0
   495 ;;      Locals:         0       0       0       0       0
   496 ;;      Temps:          0       0       0       0       0
   497 ;;      Totals:         0       0       0       0       0
   498 ;;Total ram usage:        0 bytes
   499 ;; Hardware stack levels required when called:    4
   500 ;; This function calls:
   501 ;;		_loop
   502 ;; This function is called by:
   503 ;;		Startup code after reset
   504 ;; This function uses a non-reentrant model
   505 ;;
   506                           
   507                           
   508                           ;psect for function _main
   509  00A8                     _main:	
   510  00A8                     l994:	
   511                           ;incstack = 0
   512                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   513                           
   514                           
   515                           ;Laboratorio_2.c: 58:     OSCCONbits.IRCF =0b110;
   516  00A8  1683               	bsf	3,5	;RP0=1, select bank1
   517  00A9  1303               	bcf	3,6	;RP1=0, select bank1
   518  00AA  080F               	movf	15,w	;volatile
   519  00AB  398F               	andlw	-113
   520  00AC  3860               	iorlw	96
   521  00AD  008F               	movwf	15	;volatile
   522  00AE                     l996:	
   523                           
   524                           ;Laboratorio_2.c: 59:     OSCCONbits.OSTS= 0;
   525  00AE  118F               	bcf	15,3	;volatile
   526  00AF                     l998:	
   527                           
   528                           ;Laboratorio_2.c: 60:     OSCCONbits.HTS = 0;
   529  00AF  110F               	bcf	15,2	;volatile
   530  00B0                     l1000:	
   531                           
   532                           ;Laboratorio_2.c: 61:     OSCCONbits.LTS = 0;
   533  00B0  108F               	bcf	15,1	;volatile
   534  00B1                     l1002:	
   535                           
   536                           ;Laboratorio_2.c: 62:     OSCCONbits.SCS = 1;
   537  00B1  140F               	bsf	15,0	;volatile
   538  00B2                     l1004:	
   539                           
   540                           ;Laboratorio_2.c: 64:     INTCONbits.GIE = 1;
   541  00B2  178B               	bsf	11,7	;volatile
   542  00B3                     l1006:	
   543                           
   544                           ;Laboratorio_2.c: 65:     INTCONbits.T0IE = 1;
   545  00B3  168B               	bsf	11,5	;volatile
   546  00B4                     l1008:	
   547                           
   548                           ;Laboratorio_2.c: 66:     INTCONbits.T0IF = 1;
   549  00B4  150B               	bsf	11,2	;volatile
   550  00B5                     l1010:	
   551                           
   552                           ;Laboratorio_2.c: 68:     OPTION_REGbits.T0CS = 0;
   553  00B5  1281               	bcf	1,5	;volatile
   554  00B6                     l1012:	
   555                           
   556                           ;Laboratorio_2.c: 69:     OPTION_REGbits.T0SE = 0;
   557  00B6  1201               	bcf	1,4	;volatile
   558  00B7                     l1014:	
   559                           
   560                           ;Laboratorio_2.c: 70:     OPTION_REGbits.PSA = 0;
   561  00B7  1181               	bcf	1,3	;volatile
   562                           
   563                           ;Laboratorio_2.c: 71:     OPTION_REGbits.PS = 0b000;
   564  00B8  30F8               	movlw	-8
   565  00B9  0581               	andwf	1,f	;volatile
   566  00BA                     l1016:	
   567                           
   568                           ;Laboratorio_2.c: 72:     TMR0 = 4;
   569  00BA  3004               	movlw	4
   570  00BB  1283               	bcf	3,5	;RP0=0, select bank0
   571  00BC  1303               	bcf	3,6	;RP1=0, select bank0
   572  00BD  0081               	movwf	1	;volatile
   573  00BE                     l1018:	
   574                           
   575                           ;Laboratorio_2.c: 73:     OPTION_REGbits.nRBPU =1;
   576  00BE  1683               	bsf	3,5	;RP0=1, select bank1
   577  00BF  1303               	bcf	3,6	;RP1=0, select bank1
   578  00C0  1781               	bsf	1,7	;volatile
   579  00C1                     l1020:	
   580                           
   581                           ;Laboratorio_2.c: 74:     OPTION_REGbits.INTEDG = 0;
   582  00C1  1301               	bcf	1,6	;volatile
   583  00C2                     l1022:	
   584                           
   585                           ;Laboratorio_2.c: 76:     ADCON0bits.ADCS0 =1;
   586  00C2  1283               	bcf	3,5	;RP0=0, select bank0
   587  00C3  1303               	bcf	3,6	;RP1=0, select bank0
   588  00C4  171F               	bsf	31,6	;volatile
   589  00C5                     l1024:	
   590                           
   591                           ;Laboratorio_2.c: 77:     ADCON0bits.ADCS1 =0;
   592  00C5  139F               	bcf	31,7	;volatile
   593  00C6                     l1026:	
   594                           
   595                           ;Laboratorio_2.c: 78:     ADCON0bits.CHS0 =1;
   596  00C6  151F               	bsf	31,2	;volatile
   597  00C7                     l1028:	
   598                           
   599                           ;Laboratorio_2.c: 79:     ADCON0bits.CHS1 =0;
   600  00C7  119F               	bcf	31,3	;volatile
   601  00C8                     l1030:	
   602                           
   603                           ;Laboratorio_2.c: 80:     ADCON0bits.CHS2 =1;
   604  00C8  161F               	bsf	31,4	;volatile
   605  00C9                     l1032:	
   606                           
   607                           ;Laboratorio_2.c: 81:     ADCON0bits.CHS3 =1;
   608  00C9  169F               	bsf	31,5	;volatile
   609  00CA                     l1034:	
   610                           
   611                           ;Laboratorio_2.c: 82:     ADCON0bits.ADON = 1;
   612  00CA  141F               	bsf	31,0	;volatile
   613  00CB                     l1036:	
   614                           
   615                           ;Laboratorio_2.c: 83:     ADCON1bits.ADFM =0;
   616  00CB  1683               	bsf	3,5	;RP0=1, select bank1
   617  00CC  1303               	bcf	3,6	;RP1=0, select bank1
   618  00CD  139F               	bcf	31,7	;volatile
   619  00CE                     l1038:	
   620                           
   621                           ;Laboratorio_2.c: 84:     ADCON1bits.VCFG0 =0;
   622  00CE  121F               	bcf	31,4	;volatile
   623  00CF                     l1040:	
   624                           
   625                           ;Laboratorio_2.c: 85:     ADCON1bits.VCFG1 =0;
   626  00CF  129F               	bcf	31,5	;volatile
   627  00D0                     l1042:	
   628                           
   629                           ;Laboratorio_2.c: 87:     TRISA = 0b00000000;
   630  00D0  0185               	clrf	5	;volatile
   631  00D1                     l1044:	
   632                           
   633                           ;Laboratorio_2.c: 88:     TRISB = 0b00100011;
   634  00D1  3023               	movlw	35
   635  00D2  0086               	movwf	6	;volatile
   636  00D3                     l1046:	
   637                           
   638                           ;Laboratorio_2.c: 89:     TRISC = 0b00000000;
   639  00D3  0187               	clrf	7	;volatile
   640  00D4                     l1048:	
   641                           
   642                           ;Laboratorio_2.c: 90:     TRISD = 0b00000000;
   643  00D4  0188               	clrf	8	;volatile
   644  00D5                     l1050:	
   645                           
   646                           ;Laboratorio_2.c: 91:     TRISE = 0b00000000;
   647  00D5  0189               	clrf	9	;volatile
   648  00D6                     l1052:	
   649                           
   650                           ;Laboratorio_2.c: 92:     ANSEL = 0b00000000;
   651  00D6  1683               	bsf	3,5	;RP0=1, select bank3
   652  00D7  1703               	bsf	3,6	;RP1=1, select bank3
   653  00D8  0188               	clrf	8	;volatile
   654  00D9                     l1054:	
   655                           
   656                           ;Laboratorio_2.c: 93:     ANSELH = 0b00100000;
   657  00D9  3020               	movlw	32
   658  00DA  0089               	movwf	9	;volatile
   659  00DB                     l1056:	
   660                           
   661                           ;Laboratorio_2.c: 94:     PORTD = 0b00000000;
   662  00DB  1283               	bcf	3,5	;RP0=0, select bank0
   663  00DC  1303               	bcf	3,6	;RP1=0, select bank0
   664  00DD  0188               	clrf	8	;volatile
   665  00DE                     l1058:	
   666                           
   667                           ;Laboratorio_2.c: 95:     PORTA = 0;
   668  00DE  0185               	clrf	5	;volatile
   669  00DF                     l1060:	
   670                           
   671                           ;Laboratorio_2.c: 96:     PORTB = 0;
   672  00DF  0186               	clrf	6	;volatile
   673  00E0                     l1062:	
   674                           
   675                           ;Laboratorio_2.c: 97:     PORTD = 0;
   676  00E0  0188               	clrf	8	;volatile
   677  00E1                     l1064:	
   678                           
   679                           ;Laboratorio_2.c: 98:     loop();
   680  00E1  120A  118A  2028  120A  118A  	fcall	_loop
   681  00E6                     l67:	
   682  00E6  120A  118A  280C   	ljmp	start
   683  00E9                     __end_of_main:	
   684                           
   685                           	psect	text1
   686  0028                     __ptext1:	
   687 ;; *************** function _loop *****************
   688 ;; Defined at:
   689 ;;		line 22 in file "Labor2.c"
   690 ;; Parameters:    Size  Location     Type
   691 ;;		None
   692 ;; Auto vars:     Size  Location     Type
   693 ;;		None
   694 ;; Return value:  Size  Location     Type
   695 ;;                  1    wreg      void 
   696 ;; Registers used:
   697 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   698 ;; Tracked objects:
   699 ;;		On entry : 0/0
   700 ;;		On exit  : 0/0
   701 ;;		Unchanged: 0/0
   702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   703 ;;      Params:         0       0       0       0       0
   704 ;;      Locals:         0       0       0       0       0
   705 ;;      Temps:          1       0       0       0       0
   706 ;;      Totals:         1       0       0       0       0
   707 ;;Total ram usage:        1 bytes
   708 ;; Hardware stack levels used:    1
   709 ;; Hardware stack levels required when called:    3
   710 ;; This function calls:
   711 ;;		_conec
   712 ;;		_segme
   713 ;;		_split
   714 ;; This function is called by:
   715 ;;		_main
   716 ;; This function uses a non-reentrant model
   717 ;;
   718                           
   719                           
   720                           ;psect for function _loop
   721  0028                     _loop:	
   722  0028                     l111:	
   723                           ;incstack = 0
   724                           ; Regs used in _loop: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   725                           ;Labor2.c: 23:    while (1){
   726                           
   727                           
   728                           ;Labor2.c: 25:         if (PORTBbits.RB1 == 0 && PORTBbits.RB0 == 0){
   729  0028  1283               	bcf	3,5	;RP0=0, select bank0
   730  0029  1303               	bcf	3,6	;RP1=0, select bank0
   731  002A  1886               	btfsc	6,1	;volatile
   732  002B  282D               	goto	u241
   733  002C  282E               	goto	u240
   734  002D                     u241:	
   735  002D  283B               	goto	l944
   736  002E                     u240:	
   737  002E                     l938:	
   738  002E  1806               	btfsc	6,0	;volatile
   739  002F  2831               	goto	u251
   740  0030  2832               	goto	u250
   741  0031                     u251:	
   742  0031  283B               	goto	l944
   743  0032                     u250:	
   744  0032                     l940:	
   745                           
   746                           ;Labor2.c: 26:             antirebote = 1;
   747  0032  01F4               	clrf	_antirebote
   748  0033  0AF4               	incf	_antirebote,f
   749  0034                     l942:	
   750                           
   751                           ;Labor2.c: 27:             _delay((unsigned long)((1)*(4000000/4000.0)));
   752  0034  30C7               	movlw	199
   753  0035  00FB               	movwf	??_loop
   754  0036                     u357:	
   755  0036  2837               	nop2
   756  0037  0BFB               	decfsz	??_loop,f
   757  0038  2836               	goto	u357
   758  0039  283A               	nop2
   759  003A  283B               	nop2
   760  003B                     l944:	
   761                           
   762                           ;Labor2.c: 29:         if(PORTBbits.RB0 == 1 && antirebote ==1 && contador<=8){
   763  003B  1283               	bcf	3,5	;RP0=0, select bank0
   764  003C  1303               	bcf	3,6	;RP1=0, select bank0
   765  003D  1C06               	btfss	6,0	;volatile
   766  003E  2840               	goto	u261
   767  003F  2841               	goto	u260
   768  0040                     u261:	
   769  0040  285B               	goto	l958
   770  0041                     u260:	
   771  0041                     l946:	
   772  0041  0374               	decf	_antirebote,w
   773  0042  1D03               	btfss	3,2
   774  0043  2845               	goto	u271
   775  0044  2846               	goto	u270
   776  0045                     u271:	
   777  0045  285B               	goto	l958
   778  0046                     u270:	
   779  0046                     l948:	
   780  0046  3009               	movlw	9
   781  0047  0276               	subwf	_contador,w
   782  0048  1803               	skipnc
   783  0049  284B               	goto	u281
   784  004A  284C               	goto	u280
   785  004B                     u281:	
   786  004B  285B               	goto	l958
   787  004C                     u280:	
   788  004C                     l950:	
   789                           
   790                           ;Labor2.c: 30:             antirebote=0;
   791  004C  01F4               	clrf	_antirebote
   792  004D                     l952:	
   793                           
   794                           ;Labor2.c: 31:             contador++;
   795  004D  3001               	movlw	1
   796  004E  00FB               	movwf	??_loop
   797  004F  087B               	movf	??_loop,w
   798  0050  07F6               	addwf	_contador,f
   799  0051                     l954:	
   800                           
   801                           ;Labor2.c: 32:             if(contador == 9){
   802  0051  3009               	movlw	9
   803  0052  0676               	xorwf	_contador,w
   804  0053  1D03               	btfss	3,2
   805  0054  2856               	goto	u291
   806  0055  2857               	goto	u290
   807  0056                     u291:	
   808  0056  285B               	goto	l958
   809  0057                     u290:	
   810  0057                     l956:	
   811                           
   812                           ;Labor2.c: 33:                 contador = 8;
   813  0057  3008               	movlw	8
   814  0058  00FB               	movwf	??_loop
   815  0059  087B               	movf	??_loop,w
   816  005A  00F6               	movwf	_contador
   817  005B                     l958:	
   818                           
   819                           ;Labor2.c: 36:         if(PORTBbits.RB1 == 1 && antirebote ==1 && contador<=8){
   820  005B  1C86               	btfss	6,1	;volatile
   821  005C  285E               	goto	u301
   822  005D  285F               	goto	u300
   823  005E                     u301:	
   824  005E  2873               	goto	l972
   825  005F                     u300:	
   826  005F                     l960:	
   827  005F  0374               	decf	_antirebote,w
   828  0060  1D03               	btfss	3,2
   829  0061  2863               	goto	u311
   830  0062  2864               	goto	u310
   831  0063                     u311:	
   832  0063  2873               	goto	l972
   833  0064                     u310:	
   834  0064                     l962:	
   835  0064  3009               	movlw	9
   836  0065  0276               	subwf	_contador,w
   837  0066  1803               	skipnc
   838  0067  2869               	goto	u321
   839  0068  286A               	goto	u320
   840  0069                     u321:	
   841  0069  2873               	goto	l972
   842  006A                     u320:	
   843  006A                     l964:	
   844                           
   845                           ;Labor2.c: 37:             antirebote= 0;
   846  006A  01F4               	clrf	_antirebote
   847  006B                     l966:	
   848                           
   849                           ;Labor2.c: 38:             contador--;
   850  006B  3001               	movlw	1
   851  006C  02F6               	subwf	_contador,f
   852  006D                     l968:	
   853                           
   854                           ;Labor2.c: 39:             if(contador <=0){
   855  006D  0876               	movf	_contador,w
   856  006E  1D03               	btfss	3,2
   857  006F  2871               	goto	u331
   858  0070  2872               	goto	u330
   859  0071                     u331:	
   860  0071  2873               	goto	l972
   861  0072                     u330:	
   862  0072                     l970:	
   863                           
   864                           ;Labor2.c: 40:                 contador = 0;
   865  0072  01F6               	clrf	_contador
   866  0073                     l972:	
   867                           
   868                           ;Labor2.c: 43:         _delay((unsigned long)((1)*(4000000/4000.0)));
   869  0073  30C7               	movlw	199
   870  0074  00FB               	movwf	??_loop
   871  0075                     u367:	
   872  0075  2876               	nop2
   873  0076  0BFB               	decfsz	??_loop,f
   874  0077  2875               	goto	u367
   875  0078  2879               	nop2
   876  0079  287A               	nop2
   877  007A                     l974:	
   878                           
   879                           ;Labor2.c: 44:         if (ADCON0bits.GO_DONE ==0){
   880  007A  1283               	bcf	3,5	;RP0=0, select bank0
   881  007B  1303               	bcf	3,6	;RP1=0, select bank0
   882  007C  189F               	btfsc	31,1	;volatile
   883  007D  287F               	goto	u341
   884  007E  2880               	goto	u340
   885  007F                     u341:	
   886  007F  2881               	goto	l978
   887  0080                     u340:	
   888  0080                     l976:	
   889                           
   890                           ;Labor2.c: 45:             ADCON0bits.GO_DONE = 1;
   891  0080  149F               	bsf	31,1	;volatile
   892  0081                     l978:	
   893                           
   894                           ;Labor2.c: 47:         valana = ADRESH;
   895  0081  081E               	movf	30,w	;volatile
   896  0082  00FB               	movwf	??_loop
   897  0083  087B               	movf	??_loop,w
   898  0084  00F5               	movwf	_valana
   899  0085                     l980:	
   900                           
   901                           ;Labor2.c: 48:         variable = array[contador];
   902  0085  0876               	movf	_contador,w
   903  0086  3E30               	addlw	(low (_array| 0))& (0+255)
   904  0087  0084               	movwf	4
   905  0088  1383               	bcf	3,7	;select IRP bank0
   906  0089  0800               	movf	0,w
   907  008A  00FB               	movwf	??_loop
   908  008B  087B               	movf	??_loop,w
   909  008C  00F3               	movwf	_variable
   910  008D                     l982:	
   911                           
   912                           ;Labor2.c: 49:         PORTA = variable;
   913  008D  0873               	movf	_variable,w
   914  008E  0085               	movwf	5	;volatile
   915  008F                     l984:	
   916                           
   917                           ;Labor2.c: 50:         numero1 =valana;
   918  008F  0875               	movf	_valana,w
   919  0090  00FB               	movwf	??_loop
   920  0091  087B               	movf	??_loop,w
   921  0092  00F1               	movwf	_numero1
   922  0093                     l986:	
   923                           
   924                           ;Labor2.c: 51:         numero2 =valana;
   925  0093  0875               	movf	_valana,w
   926  0094  00FB               	movwf	??_loop
   927  0095  087B               	movf	??_loop,w
   928  0096  00F0               	movwf	_numero2
   929  0097                     l988:	
   930                           
   931                           ;Labor2.c: 52:         conec();
   932  0097  120A  118A  215D  120A  118A  	fcall	_conec
   933  009C                     l990:	
   934                           
   935                           ;Labor2.c: 53:         split();
   936  009C  120A  118A  214A  120A  118A  	fcall	_split
   937  00A1                     l992:	
   938                           
   939                           ;Labor2.c: 54:         segme();
   940  00A1  120A  118A  20E9  120A  118A  	fcall	_segme
   941  00A6  2828               	goto	l111
   942  00A7  0008               	return
   943  00A8                     __end_of_loop:	
   944                           
   945                           	psect	text2
   946  014A                     __ptext2:	
   947 ;; *************** function _split *****************
   948 ;; Defined at:
   949 ;;		line 70 in file "Labor2.c"
   950 ;; Parameters:    Size  Location     Type
   951 ;;		None
   952 ;; Auto vars:     Size  Location     Type
   953 ;;		None
   954 ;; Return value:  Size  Location     Type
   955 ;;                  1    wreg      void 
   956 ;; Registers used:
   957 ;;		wreg, status,2, status,0
   958 ;; Tracked objects:
   959 ;;		On entry : 0/0
   960 ;;		On exit  : 0/0
   961 ;;		Unchanged: 0/0
   962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   963 ;;      Params:         0       0       0       0       0
   964 ;;      Locals:         0       0       0       0       0
   965 ;;      Temps:          2       0       0       0       0
   966 ;;      Totals:         2       0       0       0       0
   967 ;;Total ram usage:        2 bytes
   968 ;; Hardware stack levels used:    1
   969 ;; Hardware stack levels required when called:    2
   970 ;; This function calls:
   971 ;;		Nothing
   972 ;; This function is called by:
   973 ;;		_loop
   974 ;; This function uses a non-reentrant model
   975 ;;
   976                           
   977                           
   978                           ;psect for function _split
   979  014A                     _split:	
   980  014A                     l932:	
   981                           ;incstack = 0
   982                           ; Regs used in _split: [wreg+status,2+status,0]
   983                           
   984                           
   985                           ;Labor2.c: 71:     numero1 = ((valana & 0x0F));
   986  014A  0875               	movf	_valana,w
   987  014B  390F               	andlw	15
   988  014C  00F9               	movwf	??_split
   989  014D  0879               	movf	??_split,w
   990  014E  00F1               	movwf	_numero1
   991  014F                     l934:	
   992                           
   993                           ;Labor2.c: 72:     numero2 = ((valana & 0xF0)>>4 );
   994  014F  0875               	movf	_valana,w
   995  0150  00F9               	movwf	??_split
   996  0151  3004               	movlw	4
   997  0152                     u235:	
   998  0152  1003               	clrc
   999  0153  0CF9               	rrf	??_split,f
  1000  0154  3EFF               	addlw	-1
  1001  0155  1D03               	skipz
  1002  0156  2952               	goto	u235
  1003  0157  0879               	movf	??_split,w
  1004  0158  390F               	andlw	15
  1005  0159  00FA               	movwf	??_split+1
  1006  015A  087A               	movf	??_split+1,w
  1007  015B  00F0               	movwf	_numero2
  1008  015C                     l131:	
  1009  015C  0008               	return
  1010  015D                     __end_of_split:	
  1011                           
  1012                           	psect	text3
  1013  00E9                     __ptext3:	
  1014 ;; *************** function _segme *****************
  1015 ;; Defined at:
  1016 ;;		line 7 in file "Labor2.c"
  1017 ;; Parameters:    Size  Location     Type
  1018 ;;		None
  1019 ;; Auto vars:     Size  Location     Type
  1020 ;;		None
  1021 ;; Return value:  Size  Location     Type
  1022 ;;                  1    wreg      void 
  1023 ;; Registers used:
  1024 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1025 ;; Tracked objects:
  1026 ;;		On entry : 0/0
  1027 ;;		On exit  : 0/0
  1028 ;;		Unchanged: 0/0
  1029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1030 ;;      Params:         0       0       0       0       0
  1031 ;;      Locals:         0       0       0       0       0
  1032 ;;      Temps:          0       0       0       0       0
  1033 ;;      Totals:         0       0       0       0       0
  1034 ;;Total ram usage:        0 bytes
  1035 ;; Hardware stack levels used:    1
  1036 ;; Hardware stack levels required when called:    2
  1037 ;; This function calls:
  1038 ;;		Nothing
  1039 ;; This function is called by:
  1040 ;;		_loop
  1041 ;; This function uses a non-reentrant model
  1042 ;;
  1043                           
  1044                           
  1045                           ;psect for function _segme
  1046  00E9                     _segme:	
  1047  00E9                     l908:	
  1048                           ;incstack = 0
  1049                           ; Regs used in _segme: [wreg-fsr0h+status,2+status,0]
  1050                           
  1051                           
  1052                           ;Labor2.c: 8:     if (sino == 1){
  1053  00E9  0372               	decf	_sino,w
  1054  00EA  1D03               	btfss	3,2
  1055  00EB  28ED               	goto	u191
  1056  00EC  28EE               	goto	u190
  1057  00ED                     u191:	
  1058  00ED  28F9               	goto	l916
  1059  00EE                     u190:	
  1060  00EE                     l910:	
  1061                           
  1062                           ;Labor2.c: 9:         PORTDbits.RD0 = 1;
  1063  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  1064  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  1065  00F0  1408               	bsf	8,0	;volatile
  1066                           
  1067                           ;Labor2.c: 10:         PORTDbits.RD1 = 0;
  1068  00F1  1088               	bcf	8,1	;volatile
  1069  00F2                     l912:	
  1070                           
  1071                           ;Labor2.c: 11:         PORTC = array2[numero1];
  1072  00F2  0871               	movf	_numero1,w
  1073  00F3  3E20               	addlw	(low (_array2| 0))& (0+255)
  1074  00F4  0084               	movwf	4
  1075  00F5  1383               	bcf	3,7	;select IRP bank0
  1076  00F6  0800               	movf	0,w
  1077  00F7  0087               	movwf	7	;volatile
  1078  00F8  2908               	goto	l107
  1079  00F9                     l916:	
  1080                           
  1081                           ;Labor2.c: 14:     if (sino == 0){
  1082  00F9  0872               	movf	_sino,w
  1083  00FA  1D03               	btfss	3,2
  1084  00FB  28FD               	goto	u201
  1085  00FC  28FE               	goto	u200
  1086  00FD                     u201:	
  1087  00FD  2908               	goto	l107
  1088  00FE                     u200:	
  1089  00FE                     l918:	
  1090                           
  1091                           ;Labor2.c: 15:         PORTDbits.RD0 = 0;
  1092  00FE  1283               	bcf	3,5	;RP0=0, select bank0
  1093  00FF  1303               	bcf	3,6	;RP1=0, select bank0
  1094  0100  1008               	bcf	8,0	;volatile
  1095                           
  1096                           ;Labor2.c: 16:         PORTDbits.RD1 = 1;
  1097  0101  1488               	bsf	8,1	;volatile
  1098  0102                     l920:	
  1099                           
  1100                           ;Labor2.c: 17:         PORTC = array2[numero2];
  1101  0102  0870               	movf	_numero2,w
  1102  0103  3E20               	addlw	(low (_array2| 0))& (0+255)
  1103  0104  0084               	movwf	4
  1104  0105  1383               	bcf	3,7	;select IRP bank0
  1105  0106  0800               	movf	0,w
  1106  0107  0087               	movwf	7	;volatile
  1107  0108                     l107:	
  1108  0108  0008               	return
  1109  0109                     __end_of_segme:	
  1110                           
  1111                           	psect	text4
  1112  015D                     __ptext4:	
  1113 ;; *************** function _conec *****************
  1114 ;; Defined at:
  1115 ;;		line 58 in file "Labor2.c"
  1116 ;; Parameters:    Size  Location     Type
  1117 ;;		None
  1118 ;; Auto vars:     Size  Location     Type
  1119 ;;		None
  1120 ;; Return value:  Size  Location     Type
  1121 ;;                  1    wreg      void 
  1122 ;; Registers used:
  1123 ;;		wreg
  1124 ;; Tracked objects:
  1125 ;;		On entry : 0/0
  1126 ;;		On exit  : 0/0
  1127 ;;		Unchanged: 0/0
  1128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1129 ;;      Params:         0       0       0       0       0
  1130 ;;      Locals:         0       0       0       0       0
  1131 ;;      Temps:          0       0       0       0       0
  1132 ;;      Totals:         0       0       0       0       0
  1133 ;;Total ram usage:        0 bytes
  1134 ;; Hardware stack levels used:    1
  1135 ;; Hardware stack levels required when called:    2
  1136 ;; This function calls:
  1137 ;;		Nothing
  1138 ;; This function is called by:
  1139 ;;		_loop
  1140 ;; This function uses a non-reentrant model
  1141 ;;
  1142                           
  1143                           
  1144                           ;psect for function _conec
  1145  015D                     _conec:	
  1146  015D                     l123:	
  1147                           ;incstack = 0
  1148                           ; Regs used in _conec: [wreg]
  1149                           ;Labor2.c: 59:     while(1){
  1150                           
  1151  015D                     l924:	
  1152                           
  1153                           ;Labor2.c: 60:         if((valana) >= (variable)){
  1154  015D  0873               	movf	_variable,w
  1155  015E  0275               	subwf	_valana,w
  1156  015F  1C03               	skipc
  1157  0160  2962               	goto	u211
  1158  0161  2963               	goto	u210
  1159  0162                     u211:	
  1160  0162  2966               	goto	l928
  1161  0163                     u210:	
  1162  0163                     l926:	
  1163                           
  1164                           ;Labor2.c: 61:             PORTDbits.RD7 = 1;
  1165  0163  1283               	bcf	3,5	;RP0=0, select bank0
  1166  0164  1303               	bcf	3,6	;RP1=0, select bank0
  1167  0165  1788               	bsf	8,7	;volatile
  1168  0166                     l928:	
  1169                           
  1170                           ;Labor2.c: 63:        if ((valana) <= (variable)){
  1171  0166  0875               	movf	_valana,w
  1172  0167  0273               	subwf	_variable,w
  1173  0168  1C03               	skipc
  1174  0169  296B               	goto	u221
  1175  016A  296C               	goto	u220
  1176  016B                     u221:	
  1177  016B  296F               	goto	l126
  1178  016C                     u220:	
  1179  016C                     l930:	
  1180                           
  1181                           ;Labor2.c: 64:             PORTDbits.RD7 = 0;
  1182  016C  1283               	bcf	3,5	;RP0=0, select bank0
  1183  016D  1303               	bcf	3,6	;RP1=0, select bank0
  1184  016E  1388               	bcf	8,7	;volatile
  1185  016F                     l126:	
  1186  016F  0008               	return
  1187  0170                     __end_of_conec:	
  1188                           
  1189                           	psect	text5
  1190  0122                     __ptext5:	
  1191 ;; *************** function _ISR *****************
  1192 ;; Defined at:
  1193 ;;		line 47 in file "Laboratorio_2.c"
  1194 ;; Parameters:    Size  Location     Type
  1195 ;;		None
  1196 ;; Auto vars:     Size  Location     Type
  1197 ;;		None
  1198 ;; Return value:  Size  Location     Type
  1199 ;;                  1    wreg      void 
  1200 ;; Registers used:
  1201 ;;		wreg, status,2, status,0, pclath, cstack
  1202 ;; Tracked objects:
  1203 ;;		On entry : 0/0
  1204 ;;		On exit  : 0/0
  1205 ;;		Unchanged: 0/0
  1206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1207 ;;      Params:         0       0       0       0       0
  1208 ;;      Locals:         0       0       0       0       0
  1209 ;;      Temps:          2       0       0       0       0
  1210 ;;      Totals:         2       0       0       0       0
  1211 ;;Total ram usage:        2 bytes
  1212 ;; Hardware stack levels used:    1
  1213 ;; Hardware stack levels required when called:    1
  1214 ;; This function calls:
  1215 ;;		_change
  1216 ;; This function is called by:
  1217 ;;		Interrupt level 1
  1218 ;; This function uses a non-reentrant model
  1219 ;;
  1220                           
  1221                           
  1222                           ;psect for function _ISR
  1223  0122                     _ISR:	
  1224  0122                     i1l824:	
  1225                           
  1226                           ;Laboratorio_2.c: 48:     if (TMR0IF) {
  1227  0122  1D0B               	btfss	11,2	;volatile
  1228  0123  2925               	goto	u18_21
  1229  0124  2926               	goto	u18_20
  1230  0125                     u18_21:	
  1231  0125  2930               	goto	i1l62
  1232  0126                     u18_20:	
  1233  0126                     i1l826:	
  1234                           
  1235                           ;Laboratorio_2.c: 49:         change();
  1236  0126  120A  118A  2170  120A  118A  	fcall	_change
  1237  012B                     i1l828:	
  1238                           
  1239                           ;Laboratorio_2.c: 50:     TMR0IF = 0;
  1240  012B  110B               	bcf	11,2	;volatile
  1241  012C                     i1l830:	
  1242                           
  1243                           ;Laboratorio_2.c: 51:     TMR0 = 4;
  1244  012C  3004               	movlw	4
  1245  012D  1283               	bcf	3,5	;RP0=0, select bank0
  1246  012E  1303               	bcf	3,6	;RP1=0, select bank0
  1247  012F  0081               	movwf	1	;volatile
  1248  0130                     i1l62:	
  1249  0130  0878               	movf	??_ISR+1,w
  1250  0131  008A               	movwf	10
  1251  0132  0E77               	swapf	??_ISR^(0+4294967168),w
  1252  0133  0083               	movwf	3
  1253  0134  0EFE               	swapf	btemp,f
  1254  0135  0E7E               	swapf	btemp,w
  1255  0136  0009               	retfie
  1256  0137                     __end_of_ISR:	
  1257                           
  1258                           	psect	intentry
  1259  0004                     __pintentry:	
  1260                           ;incstack = 0
  1261                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  1262                           
  1263  0004                     interrupt_function:	
  1264  007E                     saved_w	set	btemp
  1265  0004  00FE               	movwf	btemp
  1266  0005  0E03               	swapf	3,w
  1267  0006  00F7               	movwf	??_ISR
  1268  0007  080A               	movf	10,w
  1269  0008  00F8               	movwf	??_ISR+1
  1270  0009  120A  118A  2922   	ljmp	_ISR
  1271                           
  1272                           	psect	text6
  1273  0170                     __ptext6:	
  1274 ;; *************** function _change *****************
  1275 ;; Defined at:
  1276 ;;		line 76 in file "Labor2.c"
  1277 ;; Parameters:    Size  Location     Type
  1278 ;;		None
  1279 ;; Auto vars:     Size  Location     Type
  1280 ;;		None
  1281 ;; Return value:  Size  Location     Type
  1282 ;;                  1    wreg      void 
  1283 ;; Registers used:
  1284 ;;		wreg, status,2, status,0
  1285 ;; Tracked objects:
  1286 ;;		On entry : 0/0
  1287 ;;		On exit  : 0/0
  1288 ;;		Unchanged: 0/0
  1289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1290 ;;      Params:         0       0       0       0       0
  1291 ;;      Locals:         0       0       0       0       0
  1292 ;;      Temps:          0       0       0       0       0
  1293 ;;      Totals:         0       0       0       0       0
  1294 ;;Total ram usage:        0 bytes
  1295 ;; Hardware stack levels used:    1
  1296 ;; This function calls:
  1297 ;;		Nothing
  1298 ;; This function is called by:
  1299 ;;		_ISR
  1300 ;; This function uses a non-reentrant model
  1301 ;;
  1302                           
  1303                           
  1304                           ;psect for function _change
  1305  0170                     _change:	
  1306  0170                     i1l758:	
  1307                           ;incstack = 0
  1308                           ; Regs used in _change: [wreg+status,2+status,0]
  1309                           
  1310                           
  1311                           ;Labor2.c: 77:     if (sino==0){
  1312  0170  0872               	movf	_sino,w
  1313  0171  1D03               	btfss	3,2
  1314  0172  2974               	goto	u6_21
  1315  0173  2975               	goto	u6_20
  1316  0174                     u6_21:	
  1317  0174  2978               	goto	i1l764
  1318  0175                     u6_20:	
  1319  0175                     i1l760:	
  1320                           
  1321                           ;Labor2.c: 78:         sino = 1;
  1322  0175  01F2               	clrf	_sino
  1323  0176  0AF2               	incf	_sino,f
  1324                           
  1325                           ;Labor2.c: 79:         return;
  1326  0177  2979               	goto	i1l135
  1327  0178                     i1l764:	
  1328                           
  1329                           ;Labor2.c: 82:         sino =0;
  1330  0178  01F2               	clrf	_sino
  1331  0179                     i1l135:	
  1332  0179  0008               	return
  1333  017A                     __end_of_change:	
  1334  007E                     btemp	set	126	;btemp
  1335  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        25
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      12
    BANK0            80      0      25
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_loop
    _loop->_split

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                 1     1      0       0
                                              4 COMMON     1     1      0
                              _conec
                              _segme
                              _split
 ---------------------------------------------------------------------------------
 (2) _split                                                2     2      0       0
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _segme                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _conec                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
                             _change
 ---------------------------------------------------------------------------------
 (4) _change                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _loop
     _conec
     _segme
     _split

 _ISR (ROOT)
   _change

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      19       5       31.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      25      12        0.0%
ABS                  0      0      25       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Feb 03 13:42:15 2020

                       pc 0002               __CFG_CP$OFF 0000                        l67 00E6  
                      fsr 0004                       l111 0028                       l123 015D  
                     l107 0108                       l131 015C                       l126 016F  
                     l910 00EE                       l920 0102                       l912 00F2  
                     l930 016C                       l924 015D                       l916 00F9  
                     l908 00E9                       l932 014A                       l940 0032  
                     l926 0163                       l918 00FE                       l934 014F  
                     l950 004C                       l942 0034                       l928 0166  
                     l960 005F                       l952 004D                       l944 003B  
                     l970 0072                       l962 0064                       l954 0051  
                     l946 0041                       l938 002E                       l980 0085  
                     l964 006A                       l972 0073                       l956 0057  
                     l948 0046                       l990 009C                       l982 008D  
                     l974 007A                       l966 006B                       l958 005B  
                     l992 00A1                       l984 008F                       l976 0080  
                     l968 006D                       l986 0093                       l978 0081  
                     l994 00A8                       l988 0097                       l996 00AE  
                     l998 00AF                       u200 00FE                       u201 00FD  
                     u210 0163                       u211 0162                       u220 016C  
                     u300 005F                       u221 016B                       u301 005E  
                     u310 0064                       u311 0063                       u320 006A  
                     u240 002E                       u321 0069                       u241 002D  
                     u330 0072                       u250 0032                       u235 0152  
                     u331 0071                       u251 0031                       u340 0080  
                     u260 0041                       u341 007F                       u261 0040  
                     u190 00EE                       u270 0046                       u191 00ED  
                     u271 0045                       u280 004C                       u281 004B  
                     u290 0057              __CFG_CPD$OFF 0000                       u291 0056  
                     _ISR 0122                       u357 0036                       u367 0075  
                     fsr0 0004                       indf 0000              __CFG_LVP$OFF 0000  
                    ?_ISR 0077                      l1000 00B0                      l1010 00B5  
                    l1002 00B1                      l1020 00C1                      l1012 00B6  
                    l1004 00B2                      l1030 00C8                      l1022 00C2  
                    l1014 00B7                      l1006 00B3                      l1040 00CF  
                    l1032 00C9                      l1024 00C5                      l1016 00BA  
                    l1008 00B4                      l1050 00D5                      l1042 00D0  
                    l1034 00CA                      l1026 00C6                      l1018 00BE  
                    l1060 00DF                      l1052 00D6                      l1044 00D1  
                    l1036 00CB                      l1028 00C7                      l1062 00E0  
                    l1054 00D9                      l1046 00D3                      l1038 00CE  
                    l1064 00E1                      l1056 00DB                      l1048 00D4  
                    l1058 00DE                      i1l62 0130                      _TMR0 0001  
                    u6_20 0175                      u6_21 0174              __CFG_WRT$OFF 0000  
                    _main 00A8                      _loop 0028                      _sino 0072  
                    btemp 007E                      start 000C             __CFG_IESO$OFF 0000  
                   ??_ISR 0077                     ?_main 0077                     ?_loop 0077  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188                     i1l135 0179  
                   i1l830 012C                     i1l760 0175                     i1l824 0122  
                   i1l826 0126                     i1l764 0178                     i1l828 012B  
                   i1l758 0170                     u18_20 0126                     u18_21 0125  
                   _PORTA 0005                     _PORTB 0006                     _PORTC 0007  
                   _PORTD 0008                     _TRISA 0085                     _TRISB 0086  
                   _TRISC 0087                     _TRISD 0088                     _TRISE 0089  
          __CFG_FCMEN$OFF 0000                     _conec 015D                     _array 0030  
                   _segme 00E9                     _split 014A            __CFG_BOREN$OFF 0000  
                   pclath 000A                     status 0003                     wtemp0 007E  
          __CFG_MCLRE$OFF 0000           __initialization 000F              __end_of_main 00E9  
            __end_of_loop 00A8                    ??_main 007C                    ??_loop 007B  
                  ?_conec 0077                    _ADRESH 001E                    ?_segme 0077  
                  ?_split 0077                    _ANSELH 0189                    _TMR0IF 005A  
          __CFG_PWRTE$OFF 0000                    _change 0170                    _array2 0020  
                  _valana 0075                    saved_w 007E   __end_of__initialization 0024  
          __pcstackCOMMON 0077              __pidataBANK0 0109             __end_of_conec 0170  
           __end_of_segme 0109             __end_of_split 015D            _OPTION_REGbits 0081  
                 ??_conec 0079                   ??_segme 0079                   ??_split 0079  
              __pmaintext 00A8                   ?_change 0077                __pintentry 0004  
              _antirebote 0074           __size_of_change 000A                   __ptext1 0028  
                 __ptext2 014A                   __ptext3 00E9                   __ptext4 015D  
                 __ptext5 0122                   __ptext6 0170              __size_of_ISR 0015  
                 _numero1 0071                   _numero2 0070      end_of_initialization 0024  
               _PORTBbits 0006                 _PORTDbits 0008            __end_of_change 017A  
     start_initialization 000F               __end_of_ISR 0137  __CFG_FOSC$INTRC_NOCLKOUT 0000  
                ??_change 0077                init_fetch0 0137               __pdataBANK0 0020  
             __pbssCOMMON 0070                 ___latbits 0002            __size_of_conec 0013  
          __size_of_segme 0020            __size_of_split 0013         interrupt_function 0004  
              _ADCON0bits 001F                _ADCON1bits 009F         __CFG_BOR4V$BOR40V 0000  
                _contador 0076             __size_of_main 0041             __size_of_loop 0080  
                _variable 0073                _INTCONbits 000B                  init_ram0 013B  
                intlevel1 0000                _OSCCONbits 008F  
