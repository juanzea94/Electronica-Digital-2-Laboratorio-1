

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Feb 03 21:59:49 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.10
    21                           ; Generated 31/07/2019 GMT
    22                           ; 
    23                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0088                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  008F                     	;# 
   255  0090                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  0105                     	;# 
   274  0107                     	;# 
   275  0108                     	;# 
   276  0109                     	;# 
   277  010C                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0187                     	;# 
   284  0188                     	;# 
   285  0189                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288                           
   289                           	psect	idataBANK0
   290  0138                     __pidataBANK0:	
   291                           
   292                           ;initializer for _array2
   293  0138  3477               	retlw	119
   294  0139  3441               	retlw	65
   295  013A  343B               	retlw	59
   296  013B  346B               	retlw	107
   297  013C  344D               	retlw	77
   298  013D  346E               	retlw	110
   299  013E  347E               	retlw	126
   300  013F  3447               	retlw	71
   301  0140  347F               	retlw	127
   302  0141  346F               	retlw	111
   303  0142  345F               	retlw	95
   304  0143  347C               	retlw	124
   305  0144  3438               	retlw	56
   306  0145  3479               	retlw	121
   307  0146  343E               	retlw	62
   308  0147  341E               	retlw	30
   309  001E                     _ADRESH	set	30
   310  0006                     _PORTBbits	set	6
   311  0007                     _PORTC	set	7
   312  0008                     _PORTDbits	set	8
   313  0006                     _PORTB	set	6
   314  0005                     _PORTA	set	5
   315  0008                     _PORTD	set	8
   316  001F                     _ADCON0bits	set	31
   317  000B                     _INTCONbits	set	11
   318  0001                     _TMR0	set	1
   319  005A                     _TMR0IF	set	90
   320  0089                     _TRISE	set	137
   321  0088                     _TRISD	set	136
   322  0087                     _TRISC	set	135
   323  0086                     _TRISB	set	134
   324  0085                     _TRISA	set	133
   325  009F                     _ADCON1bits	set	159
   326  0081                     _OPTION_REGbits	set	129
   327  008F                     _OSCCONbits	set	143
   328  0189                     _ANSELH	set	393
   329  0188                     _ANSEL	set	392
   330                           
   331                           ; #config settings
   332  0000                     
   333                           	psect	cinit
   334  000F                     start_initialization:	
   335  000F                     __initialization:	
   336                           
   337                           ; Initialize objects allocated to BANK0
   338  000F  1383               	bcf	3,7	;select IRP bank0
   339  0010  3030               	movlw	low (__pdataBANK0+16)
   340  0011  00FD               	movwf	btemp+-1
   341  0012  3001               	movlw	high __pidataBANK0
   342  0013  00FE               	movwf	btemp
   343  0014  3038               	movlw	low __pidataBANK0
   344  0015  00FF               	movwf	btemp+1
   345  0016  3020               	movlw	low __pdataBANK0
   346  0017  0084               	movwf	4
   347  0018  120A  118A  2103  120A  118A  	fcall	init_ram0
   348                           
   349                           ; Clear objects allocated to COMMON
   350  001D  01F0               	clrf	__pbssCOMMON& (0+127)
   351  001E  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   352  001F  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   353  0020  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   354  0021  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   355  0022  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   356  0023  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   357  0024                     end_of_initialization:	
   358                           ;End of C runtime variable initialization code
   359                           
   360  0024                     __end_of__initialization:	
   361  0024  0183               	clrf	3
   362  0025  120A  118A  2889   	ljmp	_main	;jump to C main() function
   363                           
   364                           	psect	bssCOMMON
   365  0070                     __pbssCOMMON:	
   366  0070                     _numero2:	
   367  0070                     	ds	1
   368  0071                     _numero1:	
   369  0071                     	ds	1
   370  0072                     _sino:	
   371  0072                     	ds	1
   372  0073                     _variable:	
   373  0073                     	ds	1
   374  0074                     _antirebote:	
   375  0074                     	ds	1
   376  0075                     _valana:	
   377  0075                     	ds	1
   378  0076                     _contador:	
   379  0076                     	ds	1
   380                           
   381                           	psect	dataBANK0
   382  0020                     __pdataBANK0:	
   383  0020                     _array2:	
   384  0020                     	ds	16
   385                           
   386                           	psect	inittext
   387  00FF                     init_fetch0:	
   388                           ;	Called with low address in FSR and high address in W
   389                           
   390  00FF  087E               	movf	btemp,w
   391  0100  008A               	movwf	10
   392  0101  087F               	movf	btemp+1,w
   393  0102  0082               	movwf	2
   394  0103                     init_ram0:	
   395                           ;Called with:
   396                           ;	high address of idata address in btemp 
   397                           ;	low address of idata address in btemp+1 
   398                           ;	low address of data in FSR
   399                           ;	high address + 1 of data in btemp-1
   400                           
   401  0103  120A  118A  20FF  120A  118A  	fcall	init_fetch0
   402  0108  0080               	movwf	0
   403  0109  0A84               	incf	4,f
   404  010A  0804               	movf	4,w
   405  010B  067D               	xorwf	btemp+-1,w
   406  010C  1903               	btfsc	3,2
   407  010D  3400               	retlw	0
   408  010E  0AFF               	incf	btemp+1,f
   409  010F  1903               	btfsc	3,2
   410  0110  0AFE               	incf	btemp,f
   411  0111  2903               	goto	init_ram0
   412                           
   413                           	psect	cstackCOMMON
   414  0077                     __pcstackCOMMON:	
   415  0077                     ?_change:	
   416  0077                     ??_change:	
   417                           ; 1 bytes @ 0x0
   418                           
   419  0077                     ?_loop:	
   420                           ; 1 bytes @ 0x0
   421                           
   422  0077                     ?_conec:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0077                     ?_split:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0077                     ?_ISR:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0077                     ??_ISR:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0077                     ?_main:	
   435                           ; 1 bytes @ 0x0
   436                           
   437  0077                     ?_segme:	
   438                           ; 1 bytes @ 0x0
   439                           
   440                           
   441                           ; 1 bytes @ 0x0
   442  0077                     	ds	2
   443  0079                     ??_conec:	
   444  0079                     ??_split:	
   445                           ; 1 bytes @ 0x2
   446                           
   447  0079                     ??_segme:	
   448                           ; 1 bytes @ 0x2
   449                           
   450                           
   451                           ; 1 bytes @ 0x2
   452  0079                     	ds	2
   453  007B                     ??_loop:	
   454                           
   455                           ; 1 bytes @ 0x4
   456  007B                     	ds	1
   457  007C                     ??_main:	
   458                           
   459                           	psect	maintext
   460  0089                     __pmaintext:	
   461                           ; 1 bytes @ 0x5
   462 ;;
   463 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   464 ;;
   465 ;; *************** function _main *****************
   466 ;; Defined at:
   467 ;;		line 38 in file "Laboratorio_2.c"
   468 ;; Parameters:    Size  Location     Type
   469 ;;		None
   470 ;; Auto vars:     Size  Location     Type
   471 ;;		None
   472 ;; Return value:  Size  Location     Type
   473 ;;                  1    wreg      void 
   474 ;; Registers used:
   475 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   476 ;; Tracked objects:
   477 ;;		On entry : B00/0
   478 ;;		On exit  : 0/0
   479 ;;		Unchanged: 0/0
   480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   481 ;;      Params:         0       0       0       0       0
   482 ;;      Locals:         0       0       0       0       0
   483 ;;      Temps:          0       0       0       0       0
   484 ;;      Totals:         0       0       0       0       0
   485 ;;Total ram usage:        0 bytes
   486 ;; Hardware stack levels required when called:    4
   487 ;; This function calls:
   488 ;;		_loop
   489 ;; This function is called by:
   490 ;;		Startup code after reset
   491 ;; This function uses a non-reentrant model
   492 ;;
   493                           
   494                           
   495                           ;psect for function _main
   496  0089                     _main:	
   497  0089                     l810:	
   498                           ;incstack = 0
   499                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   500                           
   501                           
   502                           ;Laboratorio_2.c: 39:     OSCCONbits.IRCF =0b110;
   503  0089  1683               	bsf	3,5	;RP0=1, select bank1
   504  008A  1303               	bcf	3,6	;RP1=0, select bank1
   505  008B  080F               	movf	15,w	;volatile
   506  008C  398F               	andlw	-113
   507  008D  3860               	iorlw	96
   508  008E  008F               	movwf	15	;volatile
   509  008F                     l812:	
   510                           
   511                           ;Laboratorio_2.c: 40:     OSCCONbits.OSTS= 0;
   512  008F  118F               	bcf	15,3	;volatile
   513  0090                     l814:	
   514                           
   515                           ;Laboratorio_2.c: 41:     OSCCONbits.HTS = 0;
   516  0090  110F               	bcf	15,2	;volatile
   517  0091                     l816:	
   518                           
   519                           ;Laboratorio_2.c: 42:     OSCCONbits.LTS = 0;
   520  0091  108F               	bcf	15,1	;volatile
   521  0092                     l818:	
   522                           
   523                           ;Laboratorio_2.c: 43:     OSCCONbits.SCS = 1;
   524  0092  140F               	bsf	15,0	;volatile
   525  0093                     l820:	
   526                           
   527                           ;Laboratorio_2.c: 44:     INTCONbits.GIE = 1;
   528  0093  178B               	bsf	11,7	;volatile
   529  0094                     l822:	
   530                           
   531                           ;Laboratorio_2.c: 45:     INTCONbits.T0IE = 1;
   532  0094  168B               	bsf	11,5	;volatile
   533  0095                     l824:	
   534                           
   535                           ;Laboratorio_2.c: 46:     INTCONbits.T0IF = 1;
   536  0095  150B               	bsf	11,2	;volatile
   537  0096                     l826:	
   538                           
   539                           ;Laboratorio_2.c: 47:     OPTION_REGbits.T0CS = 0;
   540  0096  1281               	bcf	1,5	;volatile
   541  0097                     l828:	
   542                           
   543                           ;Laboratorio_2.c: 48:     OPTION_REGbits.T0SE = 0;
   544  0097  1201               	bcf	1,4	;volatile
   545  0098                     l830:	
   546                           
   547                           ;Laboratorio_2.c: 49:     OPTION_REGbits.PSA = 0;
   548  0098  1181               	bcf	1,3	;volatile
   549                           
   550                           ;Laboratorio_2.c: 50:     OPTION_REGbits.PS = 0b000;
   551  0099  30F8               	movlw	-8
   552  009A  0581               	andwf	1,f	;volatile
   553  009B                     l832:	
   554                           
   555                           ;Laboratorio_2.c: 51:     TMR0 = 4;
   556  009B  3004               	movlw	4
   557  009C  1283               	bcf	3,5	;RP0=0, select bank0
   558  009D  1303               	bcf	3,6	;RP1=0, select bank0
   559  009E  0081               	movwf	1	;volatile
   560  009F                     l834:	
   561                           
   562                           ;Laboratorio_2.c: 52:     OPTION_REGbits.nRBPU =1;
   563  009F  1683               	bsf	3,5	;RP0=1, select bank1
   564  00A0  1303               	bcf	3,6	;RP1=0, select bank1
   565  00A1  1781               	bsf	1,7	;volatile
   566  00A2                     l836:	
   567                           
   568                           ;Laboratorio_2.c: 53:     OPTION_REGbits.INTEDG = 0;
   569  00A2  1301               	bcf	1,6	;volatile
   570  00A3                     l838:	
   571                           
   572                           ;Laboratorio_2.c: 54:     ADCON0bits.ADCS0 =1;
   573  00A3  1283               	bcf	3,5	;RP0=0, select bank0
   574  00A4  1303               	bcf	3,6	;RP1=0, select bank0
   575  00A5  171F               	bsf	31,6	;volatile
   576  00A6                     l840:	
   577                           
   578                           ;Laboratorio_2.c: 55:     ADCON0bits.ADCS1 =0;
   579  00A6  139F               	bcf	31,7	;volatile
   580  00A7                     l842:	
   581                           
   582                           ;Laboratorio_2.c: 56:     ADCON0bits.CHS0 =1;
   583  00A7  151F               	bsf	31,2	;volatile
   584  00A8                     l844:	
   585                           
   586                           ;Laboratorio_2.c: 57:     ADCON0bits.CHS1 =0;
   587  00A8  119F               	bcf	31,3	;volatile
   588  00A9                     l846:	
   589                           
   590                           ;Laboratorio_2.c: 58:     ADCON0bits.CHS2 =1;
   591  00A9  161F               	bsf	31,4	;volatile
   592  00AA                     l848:	
   593                           
   594                           ;Laboratorio_2.c: 59:     ADCON0bits.CHS3 =1;
   595  00AA  169F               	bsf	31,5	;volatile
   596  00AB                     l850:	
   597                           
   598                           ;Laboratorio_2.c: 60:     ADCON0bits.ADON = 1;
   599  00AB  141F               	bsf	31,0	;volatile
   600  00AC                     l852:	
   601                           
   602                           ;Laboratorio_2.c: 61:     ADCON1bits.ADFM =0;
   603  00AC  1683               	bsf	3,5	;RP0=1, select bank1
   604  00AD  1303               	bcf	3,6	;RP1=0, select bank1
   605  00AE  139F               	bcf	31,7	;volatile
   606  00AF                     l854:	
   607                           
   608                           ;Laboratorio_2.c: 62:     ADCON1bits.VCFG0 =0;
   609  00AF  121F               	bcf	31,4	;volatile
   610  00B0                     l856:	
   611                           
   612                           ;Laboratorio_2.c: 63:     ADCON1bits.VCFG1 =0;
   613  00B0  129F               	bcf	31,5	;volatile
   614  00B1                     l858:	
   615                           
   616                           ;Laboratorio_2.c: 66:     TRISA = 0b00000000;
   617  00B1  0185               	clrf	5	;volatile
   618  00B2                     l860:	
   619                           
   620                           ;Laboratorio_2.c: 67:     TRISB = 0b00100011;
   621  00B2  3023               	movlw	35
   622  00B3  0086               	movwf	6	;volatile
   623  00B4                     l862:	
   624                           
   625                           ;Laboratorio_2.c: 68:     TRISC = 0b00000000;
   626  00B4  0187               	clrf	7	;volatile
   627  00B5                     l864:	
   628                           
   629                           ;Laboratorio_2.c: 69:     TRISD = 0b00000000;
   630  00B5  0188               	clrf	8	;volatile
   631  00B6                     l866:	
   632                           
   633                           ;Laboratorio_2.c: 70:     TRISE = 0b00000000;
   634  00B6  0189               	clrf	9	;volatile
   635  00B7                     l868:	
   636                           
   637                           ;Laboratorio_2.c: 71:     ANSEL = 0b00000000;
   638  00B7  1683               	bsf	3,5	;RP0=1, select bank3
   639  00B8  1703               	bsf	3,6	;RP1=1, select bank3
   640  00B9  0188               	clrf	8	;volatile
   641  00BA                     l870:	
   642                           
   643                           ;Laboratorio_2.c: 72:     ANSELH = 0b00100000;
   644  00BA  3020               	movlw	32
   645  00BB  0089               	movwf	9	;volatile
   646  00BC                     l872:	
   647                           
   648                           ;Laboratorio_2.c: 73:     PORTD = 0b00000000;
   649  00BC  1283               	bcf	3,5	;RP0=0, select bank0
   650  00BD  1303               	bcf	3,6	;RP1=0, select bank0
   651  00BE  0188               	clrf	8	;volatile
   652  00BF                     l874:	
   653                           
   654                           ;Laboratorio_2.c: 74:     PORTA = 0;
   655  00BF  0185               	clrf	5	;volatile
   656  00C0                     l876:	
   657                           
   658                           ;Laboratorio_2.c: 75:     PORTB = 0;
   659  00C0  0186               	clrf	6	;volatile
   660  00C1                     l878:	
   661                           
   662                           ;Laboratorio_2.c: 76:     PORTD = 0;
   663  00C1  0188               	clrf	8	;volatile
   664  00C2                     l880:	
   665                           
   666                           ;Laboratorio_2.c: 78:     loop();
   667  00C2  120A  118A  2028  120A  118A  	fcall	_loop
   668  00C7                     l65:	
   669  00C7  120A  118A  280C   	ljmp	start
   670  00CA                     __end_of_main:	
   671                           
   672                           	psect	text1
   673  0028                     __ptext1:	
   674 ;; *************** function _loop *****************
   675 ;; Defined at:
   676 ;;		line 23 in file "Labor2.c"
   677 ;; Parameters:    Size  Location     Type
   678 ;;		None
   679 ;; Auto vars:     Size  Location     Type
   680 ;;		None
   681 ;; Return value:  Size  Location     Type
   682 ;;                  1    wreg      void 
   683 ;; Registers used:
   684 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   685 ;; Tracked objects:
   686 ;;		On entry : 0/0
   687 ;;		On exit  : 0/0
   688 ;;		Unchanged: 0/0
   689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   690 ;;      Params:         0       0       0       0       0
   691 ;;      Locals:         0       0       0       0       0
   692 ;;      Temps:          1       0       0       0       0
   693 ;;      Totals:         1       0       0       0       0
   694 ;;Total ram usage:        1 bytes
   695 ;; Hardware stack levels used:    1
   696 ;; Hardware stack levels required when called:    3
   697 ;; This function calls:
   698 ;;		_conec
   699 ;;		_segme
   700 ;;		_split
   701 ;; This function is called by:
   702 ;;		_main
   703 ;; This function uses a non-reentrant model
   704 ;;
   705                           
   706                           
   707                           ;psect for function _loop
   708  0028                     _loop:	
   709  0028                     l107:	
   710                           ;incstack = 0
   711                           ; Regs used in _loop: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   712                           ;Labor2.c: 24:    while (1){
   713                           
   714                           
   715                           ;Labor2.c: 26:         if (PORTBbits.RB1 == 0 && PORTBbits.RB0 == 0){
   716  0028  1283               	bcf	3,5	;RP0=0, select bank0
   717  0029  1303               	bcf	3,6	;RP1=0, select bank0
   718  002A  1886               	btfsc	6,1	;volatile
   719  002B  282D               	goto	u71
   720  002C  282E               	goto	u70
   721  002D                     u71:	
   722  002D  283B               	goto	l768
   723  002E                     u70:	
   724  002E                     l762:	
   725  002E  1806               	btfsc	6,0	;volatile
   726  002F  2831               	goto	u81
   727  0030  2832               	goto	u80
   728  0031                     u81:	
   729  0031  283B               	goto	l768
   730  0032                     u80:	
   731  0032                     l764:	
   732                           
   733                           ;Labor2.c: 27:             antirebote = 1;
   734  0032  01F4               	clrf	_antirebote
   735  0033  0AF4               	incf	_antirebote,f
   736  0034                     l766:	
   737                           
   738                           ;Labor2.c: 28:             _delay((unsigned long)((1)*(4000000/4000.0)));
   739  0034  30C7               	movlw	199
   740  0035  00FB               	movwf	??_loop
   741  0036                     u167:	
   742  0036  2837               	nop2
   743  0037  0BFB               	decfsz	??_loop,f
   744  0038  2836               	goto	u167
   745  0039  283A               	nop2
   746  003A  283B               	nop2
   747  003B                     l768:	
   748                           
   749                           ;Labor2.c: 30:         if(PORTBbits.RB0 == 1 && antirebote ==1 && contador<=254){
   750  003B  1283               	bcf	3,5	;RP0=0, select bank0
   751  003C  1303               	bcf	3,6	;RP1=0, select bank0
   752  003D  1C06               	btfss	6,0	;volatile
   753  003E  2840               	goto	u91
   754  003F  2841               	goto	u90
   755  0040                     u91:	
   756  0040  2850               	goto	l778
   757  0041                     u90:	
   758  0041                     l770:	
   759  0041  0374               	decf	_antirebote,w
   760  0042  1D03               	btfss	3,2
   761  0043  2845               	goto	u101
   762  0044  2846               	goto	u100
   763  0045                     u101:	
   764  0045  2850               	goto	l778
   765  0046                     u100:	
   766  0046                     l772:	
   767  0046  0A76               	incf	_contador,w
   768  0047  1903               	btfsc	3,2
   769  0048  284A               	goto	u111
   770  0049  284B               	goto	u110
   771  004A                     u111:	
   772  004A  2850               	goto	l778
   773  004B                     u110:	
   774  004B                     l774:	
   775                           
   776                           ;Labor2.c: 31:             antirebote=0;
   777  004B  01F4               	clrf	_antirebote
   778  004C                     l776:	
   779                           
   780                           ;Labor2.c: 32:                contador++;
   781  004C  3001               	movlw	1
   782  004D  00FB               	movwf	??_loop
   783  004E  087B               	movf	??_loop,w
   784  004F  07F6               	addwf	_contador,f
   785  0050                     l778:	
   786                           
   787                           ;Labor2.c: 37:         if(PORTBbits.RB1 == 1 && antirebote ==1 && contador>=0){
   788  0050  1C86               	btfss	6,1	;volatile
   789  0051  2853               	goto	u121
   790  0052  2854               	goto	u120
   791  0053                     u121:	
   792  0053  285C               	goto	l786
   793  0054                     u120:	
   794  0054                     l780:	
   795  0054  0374               	decf	_antirebote,w
   796  0055  1D03               	btfss	3,2
   797  0056  2858               	goto	u131
   798  0057  2859               	goto	u130
   799  0058                     u131:	
   800  0058  285C               	goto	l786
   801  0059                     u130:	
   802  0059                     l782:	
   803                           
   804                           ;Labor2.c: 38:             antirebote= 0;
   805  0059  01F4               	clrf	_antirebote
   806  005A                     l784:	
   807                           
   808                           ;Labor2.c: 39:             contador--;
   809  005A  3001               	movlw	1
   810  005B  02F6               	subwf	_contador,f
   811  005C                     l786:	
   812                           
   813                           ;Labor2.c: 44:         _delay((unsigned long)((1)*(4000000/4000.0)));
   814  005C  30C7               	movlw	199
   815  005D  00FB               	movwf	??_loop
   816  005E                     u177:	
   817  005E  285F               	nop2
   818  005F  0BFB               	decfsz	??_loop,f
   819  0060  285E               	goto	u177
   820  0061  2862               	nop2
   821  0062  2863               	nop2
   822  0063                     l788:	
   823                           
   824                           ;Labor2.c: 45:         if (ADCON0bits.GO_DONE ==0){
   825  0063  1283               	bcf	3,5	;RP0=0, select bank0
   826  0064  1303               	bcf	3,6	;RP1=0, select bank0
   827  0065  189F               	btfsc	31,1	;volatile
   828  0066  2868               	goto	u141
   829  0067  2869               	goto	u140
   830  0068                     u141:	
   831  0068  286A               	goto	l792
   832  0069                     u140:	
   833  0069                     l790:	
   834                           
   835                           ;Labor2.c: 46:             ADCON0bits.GO_DONE = 1;
   836  0069  149F               	bsf	31,1	;volatile
   837  006A                     l792:	
   838                           
   839                           ;Labor2.c: 48:         valana = ADRESH;
   840  006A  081E               	movf	30,w	;volatile
   841  006B  00FB               	movwf	??_loop
   842  006C  087B               	movf	??_loop,w
   843  006D  00F5               	movwf	_valana
   844                           
   845                           ;Labor2.c: 50:         PORTA = contador;
   846  006E  0876               	movf	_contador,w
   847  006F  0085               	movwf	5	;volatile
   848                           
   849                           ;Labor2.c: 52:         numero1 =valana;
   850  0070  0875               	movf	_valana,w
   851  0071  00FB               	movwf	??_loop
   852  0072  087B               	movf	??_loop,w
   853  0073  00F1               	movwf	_numero1
   854                           
   855                           ;Labor2.c: 53:         numero2 =valana;
   856  0074  0875               	movf	_valana,w
   857  0075  00FB               	movwf	??_loop
   858  0076  087B               	movf	??_loop,w
   859  0077  00F0               	movwf	_numero2
   860  0078                     l794:	
   861                           
   862                           ;Labor2.c: 54:         conec();
   863  0078  120A  118A  2125  120A  118A  	fcall	_conec
   864  007D                     l796:	
   865                           
   866                           ;Labor2.c: 55:         split();
   867  007D  120A  118A  2112  120A  118A  	fcall	_split
   868  0082                     l798:	
   869                           
   870                           ;Labor2.c: 56:         segme();
   871  0082  120A  118A  20CA  120A  118A  	fcall	_segme
   872  0087  2828               	goto	l107
   873  0088  0008               	return
   874  0089                     __end_of_loop:	
   875                           
   876                           	psect	text2
   877  0112                     __ptext2:	
   878 ;; *************** function _split *****************
   879 ;; Defined at:
   880 ;;		line 73 in file "Labor2.c"
   881 ;; Parameters:    Size  Location     Type
   882 ;;		None
   883 ;; Auto vars:     Size  Location     Type
   884 ;;		None
   885 ;; Return value:  Size  Location     Type
   886 ;;                  1    wreg      void 
   887 ;; Registers used:
   888 ;;		wreg, status,2, status,0
   889 ;; Tracked objects:
   890 ;;		On entry : 0/0
   891 ;;		On exit  : 0/0
   892 ;;		Unchanged: 0/0
   893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   894 ;;      Params:         0       0       0       0       0
   895 ;;      Locals:         0       0       0       0       0
   896 ;;      Temps:          2       0       0       0       0
   897 ;;      Totals:         2       0       0       0       0
   898 ;;Total ram usage:        2 bytes
   899 ;; Hardware stack levels used:    1
   900 ;; Hardware stack levels required when called:    2
   901 ;; This function calls:
   902 ;;		Nothing
   903 ;; This function is called by:
   904 ;;		_loop
   905 ;; This function uses a non-reentrant model
   906 ;;
   907                           
   908                           
   909                           ;psect for function _split
   910  0112                     _split:	
   911  0112                     l746:	
   912                           ;incstack = 0
   913                           ; Regs used in _split: [wreg+status,2+status,0]
   914                           
   915                           
   916                           ;Labor2.c: 74:     numero1 = ((valana & 0x0F));
   917  0112  0875               	movf	_valana,w
   918  0113  390F               	andlw	15
   919  0114  00F9               	movwf	??_split
   920  0115  0879               	movf	??_split,w
   921  0116  00F1               	movwf	_numero1
   922  0117                     l748:	
   923                           
   924                           ;Labor2.c: 75:     numero2 = ((valana & 0xF0)>>4 );
   925  0117  0875               	movf	_valana,w
   926  0118  00F9               	movwf	??_split
   927  0119  3004               	movlw	4
   928  011A                     u55:	
   929  011A  1003               	clrc
   930  011B  0CF9               	rrf	??_split,f
   931  011C  3EFF               	addlw	-1
   932  011D  1D03               	skipz
   933  011E  291A               	goto	u55
   934  011F  0879               	movf	??_split,w
   935  0120  390F               	andlw	15
   936  0121  00FA               	movwf	??_split+1
   937  0122  087A               	movf	??_split+1,w
   938  0123  00F0               	movwf	_numero2
   939  0124                     l125:	
   940  0124  0008               	return
   941  0125                     __end_of_split:	
   942                           
   943                           	psect	text3
   944  00CA                     __ptext3:	
   945 ;; *************** function _segme *****************
   946 ;; Defined at:
   947 ;;		line 7 in file "Labor2.c"
   948 ;; Parameters:    Size  Location     Type
   949 ;;		None
   950 ;; Auto vars:     Size  Location     Type
   951 ;;		None
   952 ;; Return value:  Size  Location     Type
   953 ;;                  1    wreg      void 
   954 ;; Registers used:
   955 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   956 ;; Tracked objects:
   957 ;;		On entry : 0/0
   958 ;;		On exit  : 0/0
   959 ;;		Unchanged: 0/0
   960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   961 ;;      Params:         0       0       0       0       0
   962 ;;      Locals:         0       0       0       0       0
   963 ;;      Temps:          0       0       0       0       0
   964 ;;      Totals:         0       0       0       0       0
   965 ;;Total ram usage:        0 bytes
   966 ;; Hardware stack levels used:    1
   967 ;; Hardware stack levels required when called:    2
   968 ;; This function calls:
   969 ;;		Nothing
   970 ;; This function is called by:
   971 ;;		_loop
   972 ;; This function uses a non-reentrant model
   973 ;;
   974                           
   975                           
   976                           ;psect for function _segme
   977  00CA                     _segme:	
   978  00CA                     l722:	
   979                           ;incstack = 0
   980                           ; Regs used in _segme: [wreg-fsr0h+status,2+status,0]
   981                           
   982                           
   983                           ;Labor2.c: 8:     if (sino == 1){
   984  00CA  0372               	decf	_sino,w
   985  00CB  1D03               	btfss	3,2
   986  00CC  28CE               	goto	u11
   987  00CD  28CF               	goto	u10
   988  00CE                     u11:	
   989  00CE  28DA               	goto	l730
   990  00CF                     u10:	
   991  00CF                     l724:	
   992                           
   993                           ;Labor2.c: 9:         PORTDbits.RD0 = 1;
   994  00CF  1283               	bcf	3,5	;RP0=0, select bank0
   995  00D0  1303               	bcf	3,6	;RP1=0, select bank0
   996  00D1  1408               	bsf	8,0	;volatile
   997                           
   998                           ;Labor2.c: 10:         PORTDbits.RD1 = 0;
   999  00D2  1088               	bcf	8,1	;volatile
  1000  00D3                     l726:	
  1001                           
  1002                           ;Labor2.c: 11:         PORTC = array2[numero1];
  1003  00D3  0871               	movf	_numero1,w
  1004  00D4  3E20               	addlw	(low (_array2| 0))& (0+255)
  1005  00D5  0084               	movwf	4
  1006  00D6  1383               	bcf	3,7	;select IRP bank0
  1007  00D7  0800               	movf	0,w
  1008  00D8  0087               	movwf	7	;volatile
  1009  00D9  28E9               	goto	l103
  1010  00DA                     l730:	
  1011                           
  1012                           ;Labor2.c: 14:     if (sino == 0){
  1013  00DA  0872               	movf	_sino,w
  1014  00DB  1D03               	btfss	3,2
  1015  00DC  28DE               	goto	u21
  1016  00DD  28DF               	goto	u20
  1017  00DE                     u21:	
  1018  00DE  28E9               	goto	l103
  1019  00DF                     u20:	
  1020  00DF                     l732:	
  1021                           
  1022                           ;Labor2.c: 15:         PORTDbits.RD0 = 0;
  1023  00DF  1283               	bcf	3,5	;RP0=0, select bank0
  1024  00E0  1303               	bcf	3,6	;RP1=0, select bank0
  1025  00E1  1008               	bcf	8,0	;volatile
  1026                           
  1027                           ;Labor2.c: 16:         PORTDbits.RD1 = 1;
  1028  00E2  1488               	bsf	8,1	;volatile
  1029  00E3                     l734:	
  1030                           
  1031                           ;Labor2.c: 17:         PORTC = array2[numero2];
  1032  00E3  0870               	movf	_numero2,w
  1033  00E4  3E20               	addlw	(low (_array2| 0))& (0+255)
  1034  00E5  0084               	movwf	4
  1035  00E6  1383               	bcf	3,7	;select IRP bank0
  1036  00E7  0800               	movf	0,w
  1037  00E8  0087               	movwf	7	;volatile
  1038  00E9                     l103:	
  1039  00E9  0008               	return
  1040  00EA                     __end_of_segme:	
  1041                           
  1042                           	psect	text4
  1043  0125                     __ptext4:	
  1044 ;; *************** function _conec *****************
  1045 ;; Defined at:
  1046 ;;		line 60 in file "Labor2.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;		None
  1049 ;; Auto vars:     Size  Location     Type
  1050 ;;		None
  1051 ;; Return value:  Size  Location     Type
  1052 ;;                  1    wreg      void 
  1053 ;; Registers used:
  1054 ;;		wreg
  1055 ;; Tracked objects:
  1056 ;;		On entry : 0/0
  1057 ;;		On exit  : 0/0
  1058 ;;		Unchanged: 0/0
  1059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1060 ;;      Params:         0       0       0       0       0
  1061 ;;      Locals:         0       0       0       0       0
  1062 ;;      Temps:          0       0       0       0       0
  1063 ;;      Totals:         0       0       0       0       0
  1064 ;;Total ram usage:        0 bytes
  1065 ;; Hardware stack levels used:    1
  1066 ;; Hardware stack levels required when called:    2
  1067 ;; This function calls:
  1068 ;;		Nothing
  1069 ;; This function is called by:
  1070 ;;		_loop
  1071 ;; This function uses a non-reentrant model
  1072 ;;
  1073                           
  1074                           
  1075                           ;psect for function _conec
  1076  0125                     _conec:	
  1077  0125                     l117:	
  1078                           ;incstack = 0
  1079                           ; Regs used in _conec: [wreg]
  1080                           ;Labor2.c: 61:     while(1){
  1081                           
  1082  0125                     l738:	
  1083                           
  1084                           ;Labor2.c: 62:         if((valana) >= (contador)){
  1085  0125  0876               	movf	_contador,w
  1086  0126  0275               	subwf	_valana,w
  1087  0127  1C03               	skipc
  1088  0128  292A               	goto	u31
  1089  0129  292B               	goto	u30
  1090  012A                     u31:	
  1091  012A  292E               	goto	l742
  1092  012B                     u30:	
  1093  012B                     l740:	
  1094                           
  1095                           ;Labor2.c: 63:             PORTDbits.RD7 = 1;
  1096  012B  1283               	bcf	3,5	;RP0=0, select bank0
  1097  012C  1303               	bcf	3,6	;RP1=0, select bank0
  1098  012D  1788               	bsf	8,7	;volatile
  1099  012E                     l742:	
  1100                           
  1101                           ;Labor2.c: 65:        if ((valana) <= (contador)){
  1102  012E  0875               	movf	_valana,w
  1103  012F  0276               	subwf	_contador,w
  1104  0130  1C03               	skipc
  1105  0131  2933               	goto	u41
  1106  0132  2934               	goto	u40
  1107  0133                     u41:	
  1108  0133  2937               	goto	l120
  1109  0134                     u40:	
  1110  0134                     l744:	
  1111                           
  1112                           ;Labor2.c: 66:             PORTDbits.RD7 = 0;
  1113  0134  1283               	bcf	3,5	;RP0=0, select bank0
  1114  0135  1303               	bcf	3,6	;RP1=0, select bank0
  1115  0136  1388               	bcf	8,7	;volatile
  1116  0137                     l120:	
  1117  0137  0008               	return
  1118  0138                     __end_of_conec:	
  1119                           
  1120                           	psect	text5
  1121  00EA                     __ptext5:	
  1122 ;; *************** function _ISR *****************
  1123 ;; Defined at:
  1124 ;;		line 29 in file "Laboratorio_2.c"
  1125 ;; Parameters:    Size  Location     Type
  1126 ;;		None
  1127 ;; Auto vars:     Size  Location     Type
  1128 ;;		None
  1129 ;; Return value:  Size  Location     Type
  1130 ;;                  1    wreg      void 
  1131 ;; Registers used:
  1132 ;;		wreg, status,2, status,0, pclath, cstack
  1133 ;; Tracked objects:
  1134 ;;		On entry : 0/0
  1135 ;;		On exit  : 0/0
  1136 ;;		Unchanged: 0/0
  1137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1138 ;;      Params:         0       0       0       0       0
  1139 ;;      Locals:         0       0       0       0       0
  1140 ;;      Temps:          2       0       0       0       0
  1141 ;;      Totals:         2       0       0       0       0
  1142 ;;Total ram usage:        2 bytes
  1143 ;; Hardware stack levels used:    1
  1144 ;; Hardware stack levels required when called:    1
  1145 ;; This function calls:
  1146 ;;		_change
  1147 ;; This function is called by:
  1148 ;;		Interrupt level 1
  1149 ;; This function uses a non-reentrant model
  1150 ;;
  1151                           
  1152                           
  1153                           ;psect for function _ISR
  1154  00EA                     _ISR:	
  1155  00EA                     i1l800:	
  1156                           
  1157                           ;Laboratorio_2.c: 30:     if (TMR0IF) {
  1158  00EA  1D0B               	btfss	11,2	;volatile
  1159  00EB  28ED               	goto	u15_21
  1160  00EC  28EE               	goto	u15_20
  1161  00ED                     u15_21:	
  1162  00ED  28F8               	goto	i1l60
  1163  00EE                     u15_20:	
  1164  00EE                     i1l802:	
  1165                           
  1166                           ;Laboratorio_2.c: 31:         change();
  1167  00EE  120A  118A  2148  120A  118A  	fcall	_change
  1168  00F3                     i1l804:	
  1169                           
  1170                           ;Laboratorio_2.c: 32:     TMR0IF = 0;
  1171  00F3  110B               	bcf	11,2	;volatile
  1172  00F4                     i1l806:	
  1173                           
  1174                           ;Laboratorio_2.c: 33:     TMR0 = 4;
  1175  00F4  3004               	movlw	4
  1176  00F5  1283               	bcf	3,5	;RP0=0, select bank0
  1177  00F6  1303               	bcf	3,6	;RP1=0, select bank0
  1178  00F7  0081               	movwf	1	;volatile
  1179  00F8                     i1l60:	
  1180  00F8  0878               	movf	??_ISR+1,w
  1181  00F9  008A               	movwf	10
  1182  00FA  0E77               	swapf	??_ISR^(0+4294967168),w
  1183  00FB  0083               	movwf	3
  1184  00FC  0EFE               	swapf	btemp,f
  1185  00FD  0E7E               	swapf	btemp,w
  1186  00FE  0009               	retfie
  1187  00FF                     __end_of_ISR:	
  1188                           
  1189                           	psect	intentry
  1190  0004                     __pintentry:	
  1191                           ;incstack = 0
  1192                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  1193                           
  1194  0004                     interrupt_function:	
  1195  007E                     saved_w	set	btemp
  1196  0004  00FE               	movwf	btemp
  1197  0005  0E03               	swapf	3,w
  1198  0006  00F7               	movwf	??_ISR
  1199  0007  080A               	movf	10,w
  1200  0008  00F8               	movwf	??_ISR+1
  1201  0009  120A  118A  28EA   	ljmp	_ISR
  1202                           
  1203                           	psect	text6
  1204  0148                     __ptext6:	
  1205 ;; *************** function _change *****************
  1206 ;; Defined at:
  1207 ;;		line 80 in file "Labor2.c"
  1208 ;; Parameters:    Size  Location     Type
  1209 ;;		None
  1210 ;; Auto vars:     Size  Location     Type
  1211 ;;		None
  1212 ;; Return value:  Size  Location     Type
  1213 ;;                  1    wreg      void 
  1214 ;; Registers used:
  1215 ;;		wreg, status,2, status,0
  1216 ;; Tracked objects:
  1217 ;;		On entry : 0/0
  1218 ;;		On exit  : 0/0
  1219 ;;		Unchanged: 0/0
  1220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1221 ;;      Params:         0       0       0       0       0
  1222 ;;      Locals:         0       0       0       0       0
  1223 ;;      Temps:          0       0       0       0       0
  1224 ;;      Totals:         0       0       0       0       0
  1225 ;;Total ram usage:        0 bytes
  1226 ;; Hardware stack levels used:    1
  1227 ;; This function calls:
  1228 ;;		Nothing
  1229 ;; This function is called by:
  1230 ;;		_ISR
  1231 ;; This function uses a non-reentrant model
  1232 ;;
  1233                           
  1234                           
  1235                           ;psect for function _change
  1236  0148                     _change:	
  1237  0148                     i1l752:	
  1238                           ;incstack = 0
  1239                           ; Regs used in _change: [wreg+status,2+status,0]
  1240                           
  1241                           
  1242                           ;Labor2.c: 81:     if (sino==0){
  1243  0148  0872               	movf	_sino,w
  1244  0149  1D03               	btfss	3,2
  1245  014A  294C               	goto	u6_21
  1246  014B  294D               	goto	u6_20
  1247  014C                     u6_21:	
  1248  014C  2950               	goto	i1l758
  1249  014D                     u6_20:	
  1250  014D                     i1l754:	
  1251                           
  1252                           ;Labor2.c: 82:         sino = 1;
  1253  014D  01F2               	clrf	_sino
  1254  014E  0AF2               	incf	_sino,f
  1255                           
  1256                           ;Labor2.c: 83:         return;
  1257  014F  2951               	goto	i1l129
  1258  0150                     i1l758:	
  1259                           
  1260                           ;Labor2.c: 86:         sino =0;
  1261  0150  01F2               	clrf	_sino
  1262  0151                     i1l129:	
  1263  0151  0008               	return
  1264  0152                     __end_of_change:	
  1265  007E                     btemp	set	126	;btemp
  1266  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      12
    BANK0            80      0      16
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_loop
    _loop->_split

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                 1     1      0       0
                                              4 COMMON     1     1      0
                              _conec
                              _segme
                              _split
 ---------------------------------------------------------------------------------
 (2) _split                                                2     2      0       0
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _segme                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _conec                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
                             _change
 ---------------------------------------------------------------------------------
 (4) _change                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _loop
     _conec
     _segme
     _split

 _ISR (ROOT)
   _change

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      10       5       20.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1C      12        0.0%
ABS                  0      0      1C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Feb 03 21:59:49 2020

                       pc 0002               __CFG_CP$OFF 0000                        l65 00C7  
                      u10 00CF                        u11 00CE                        u20 00DF  
                      u21 00DE                        u30 012B                        u31 012A  
                      u40 0134                        u41 0133                        u70 002E  
                      u55 011A                        u71 002D                        u80 0032  
                      u81 0031                        u90 0041                        u91 0040  
                      fsr 0004                       l103 00E9                       l120 0137  
                     l107 0028                       l117 0125                       l125 0124  
                     l730 00DA                       l722 00CA                       l810 0089  
                     l740 012B                       l732 00DF                       l724 00CF  
                     l820 0093                       l812 008F                       l742 012E  
                     l734 00E3                       l726 00D3                       l830 0098  
                     l822 0094                       l814 0090                       l744 0134  
                     l840 00A6                       l832 009B                       l824 0095  
                     l816 0091                       l738 0125                       l746 0112  
                     l770 0041                       l762 002E                       l850 00AB  
                     l842 00A7                       l834 009F                       l826 0096  
                     l818 0092                       l748 0117                       l780 0054  
                     l772 0046                       l764 0032                       l860 00B2  
                     l852 00AC                       l844 00A8                       l836 00A2  
                     l828 0097                       l790 0069                       l782 0059  
                     l774 004B                       l766 0034                       l870 00BA  
                     l862 00B4                       l854 00AF                       l846 00A9  
                     l838 00A3                       l792 006A                       l784 005A  
                     l776 004C                       l768 003B                       l880 00C2  
                     l872 00BC                       l864 00B5                       l856 00B0  
                     l848 00AA                       l794 0078                       l786 005C  
                     l778 0050                       l874 00BF                       l866 00B6  
                     l858 00B1                       l796 007D                       l788 0063  
                     l876 00C0                       l868 00B7                       l798 0082  
                     l878 00C1                       u100 0046                       u101 0045  
                     u110 004B                       u111 004A                       u120 0054  
                     u121 0053                       u130 0059                       u131 0058  
                     u140 0069                       u141 0068                       u167 0036  
                     u177 005E              __CFG_CPD$OFF 0000                       _ISR 00EA  
                     fsr0 0004                       indf 0000              __CFG_LVP$OFF 0000  
                    ?_ISR 0077                      i1l60 00F8                      _TMR0 0001  
                    u6_20 014D                      u6_21 014C              __CFG_WRT$OFF 0000  
                    _main 0089                      _loop 0028                      _sino 0072  
                    btemp 007E                      start 000C             __CFG_IESO$OFF 0000  
                   ??_ISR 0077                     ?_main 0077                     ?_loop 0077  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188                     i1l129 0151  
                   i1l800 00EA                     i1l802 00EE                     i1l804 00F3  
                   i1l806 00F4                     i1l752 0148                     i1l754 014D  
                   i1l758 0150                     u15_20 00EE                     u15_21 00ED  
                   _PORTA 0005                     _PORTB 0006                     _PORTC 0007  
                   _PORTD 0008                     _TRISA 0085                     _TRISB 0086  
                   _TRISC 0087                     _TRISD 0088                     _TRISE 0089  
          __CFG_FCMEN$OFF 0000                     _conec 0125                     _segme 00CA  
                   _split 0112            __CFG_BOREN$OFF 0000                     pclath 000A  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
         __initialization 000F              __end_of_main 00CA              __end_of_loop 0089  
                  ??_main 007C                    ??_loop 007B                    ?_conec 0077  
                  _ADRESH 001E                    ?_segme 0077                    ?_split 0077  
                  _ANSELH 0189                    _TMR0IF 005A            __CFG_PWRTE$OFF 0000  
                  _change 0148                    _array2 0020                    _valana 0075  
                  saved_w 007E   __end_of__initialization 0024            __pcstackCOMMON 0077  
            __pidataBANK0 0138             __end_of_conec 0138             __end_of_segme 00EA  
           __end_of_split 0125            _OPTION_REGbits 0081                   ??_conec 0079  
                 ??_segme 0079                   ??_split 0079                __pmaintext 0089  
                 ?_change 0077                __pintentry 0004                _antirebote 0074  
         __size_of_change 000A                   __ptext1 0028                   __ptext2 0112  
                 __ptext3 00CA                   __ptext4 0125                   __ptext5 00EA  
                 __ptext6 0148              __size_of_ISR 0015                   _numero1 0071  
                 _numero2 0070      end_of_initialization 0024                 _PORTBbits 0006  
               _PORTDbits 0008            __end_of_change 0152       start_initialization 000F  
             __end_of_ISR 00FF  __CFG_FOSC$INTRC_NOCLKOUT 0000                  ??_change 0077  
              init_fetch0 00FF               __pdataBANK0 0020               __pbssCOMMON 0070  
               ___latbits 0002            __size_of_conec 0013            __size_of_segme 0020  
          __size_of_split 0013         interrupt_function 0004                _ADCON0bits 001F  
              _ADCON1bits 009F         __CFG_BOR4V$BOR40V 0000                  _contador 0076  
           __size_of_main 0041             __size_of_loop 0061                  _variable 0073  
              _INTCONbits 000B                  init_ram0 0103                  intlevel1 0000  
              _OSCCONbits 008F  
