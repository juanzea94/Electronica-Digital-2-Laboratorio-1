

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Feb 15 21:12:04 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	clrtext,global,class=CODE,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.10
    19                           ; Generated 31/07/2019 GMT
    20                           ; 
    21                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  0000                     	;# 
   209  0001                     	;# 
   210  0002                     	;# 
   211  0003                     	;# 
   212  0004                     	;# 
   213  0005                     	;# 
   214  0006                     	;# 
   215  0007                     	;# 
   216  0008                     	;# 
   217  0009                     	;# 
   218  000A                     	;# 
   219  000B                     	;# 
   220  000C                     	;# 
   221  000D                     	;# 
   222  000E                     	;# 
   223  000E                     	;# 
   224  000F                     	;# 
   225  0010                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0013                     	;# 
   229  0014                     	;# 
   230  0015                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0017                     	;# 
   234  0018                     	;# 
   235  0019                     	;# 
   236  001A                     	;# 
   237  001B                     	;# 
   238  001B                     	;# 
   239  001C                     	;# 
   240  001D                     	;# 
   241  001E                     	;# 
   242  001F                     	;# 
   243  0081                     	;# 
   244  0085                     	;# 
   245  0086                     	;# 
   246  0087                     	;# 
   247  0088                     	;# 
   248  0089                     	;# 
   249  008C                     	;# 
   250  008D                     	;# 
   251  008E                     	;# 
   252  008F                     	;# 
   253  0090                     	;# 
   254  0091                     	;# 
   255  0092                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0094                     	;# 
   260  0095                     	;# 
   261  0096                     	;# 
   262  0097                     	;# 
   263  0098                     	;# 
   264  0099                     	;# 
   265  009A                     	;# 
   266  009B                     	;# 
   267  009C                     	;# 
   268  009D                     	;# 
   269  009E                     	;# 
   270  009F                     	;# 
   271  0105                     	;# 
   272  0107                     	;# 
   273  0108                     	;# 
   274  0109                     	;# 
   275  010C                     	;# 
   276  010C                     	;# 
   277  010D                     	;# 
   278  010E                     	;# 
   279  010F                     	;# 
   280  0185                     	;# 
   281  0187                     	;# 
   282  0188                     	;# 
   283  0189                     	;# 
   284  018C                     	;# 
   285  018D                     	;# 
   286                           
   287 ;; Function _putch is unused but had its address taken
   288  0013                     _SSPBUF	set	19
   289  001E                     _ADRESH	set	30
   290  001F                     _ADCON0bits	set	31
   291  0014                     _SSPCONbits	set	20
   292  009F                     _ADCON1bits	set	159
   293  0087                     _TRISCbits	set	135
   294  0094                     _SSPSTATbits	set	148
   295  0189                     _ANSELH	set	393
   296  0188                     _ANSEL	set	392
   297                           
   298                           ; #config settings
   299  0000                     
   300                           	psect	cinit
   301  07F3                     start_initialization:	
   302  07F3                     __initialization:	
   303                           
   304                           ; Clear objects allocated to BANK0
   305  07F3  1383               	bcf	3,7	;select IRP bank0
   306  07F4  3020               	movlw	low __pbssBANK0
   307  07F5  0084               	movwf	4
   308  07F6  303E               	movlw	low (__pbssBANK0+30)
   309  07F7  120A  118A  2678  120A  118A  	fcall	clear_ram0
   310  07FC                     end_of_initialization:	
   311                           ;End of C runtime variable initialization code
   312                           
   313  07FC                     __end_of__initialization:	
   314  07FC  0183               	clrf	3
   315  07FD  120A  118A  2EA5   	ljmp	_main	;jump to C main() function
   316                           
   317                           	psect	bssBANK0
   318  0020                     __pbssBANK0:	
   319  0020                     _number:	
   320  0020                     	ds	4
   321  0024                     _num3:	
   322  0024                     	ds	1
   323  0025                     _num2:	
   324  0025                     	ds	1
   325  0026                     _num1:	
   326  0026                     	ds	1
   327  0027                     _pot1:	
   328  0027                     	ds	1
   329  0028                     _m:	
   330  0028                     	ds	1
   331  0029                     _valana:	
   332  0029                     	ds	1
   333  002A                     _buffer:	
   334  002A                     	ds	20
   335                           
   336                           	psect	clrtext
   337  0678                     clear_ram0:	
   338                           ;	Called with FSR containing the base address, and
   339                           ;	W with the last address+1
   340                           
   341  0678  0064               	clrwdt	;clear the watchdog before getting into this loop
   342  0679                     clrloop0:	
   343  0679  0180               	clrf	0	;clear RAM location pointed to by FSR
   344  067A  0A84               	incf	4,f	;increment pointer
   345  067B  0604               	xorwf	4,w	;XOR with final address
   346  067C  1903               	btfsc	3,2	;have we reached the end yet?
   347  067D  3400               	retlw	0	;all done for this memory range, return
   348  067E  0604               	xorwf	4,w	;XOR again to restore value
   349  067F  2E79               	goto	clrloop0	;do the next byte
   350                           
   351                           	psect	cstackCOMMON
   352  0070                     __pcstackCOMMON:	
   353  0070                     ?_SPI_SLAVE_INIT:	
   354  0070                     ??_SPI_SLAVE_INIT:	
   355                           ; 1 bytes @ 0x0
   356                           
   357  0070                     ?_ADC:	
   358                           ; 1 bytes @ 0x0
   359                           
   360  0070                     ??_ADC:	
   361                           ; 1 bytes @ 0x0
   362                           
   363  0070                     ?_main:	
   364                           ; 1 bytes @ 0x0
   365                           
   366  0070                     ?___lwdiv:	
   367                           ; 1 bytes @ 0x0
   368                           
   369  0070                     ?___lwmod:	
   370                           ; 2 bytes @ 0x0
   371                           
   372  0070                     ___lwdiv@divisor:	
   373                           ; 2 bytes @ 0x0
   374                           
   375  0070                     ___lwmod@divisor:	
   376                           ; 2 bytes @ 0x0
   377                           
   378                           
   379                           ; 2 bytes @ 0x0
   380  0070                     	ds	2
   381  0072                     ___lwdiv@dividend:	
   382  0072                     ___lwmod@dividend:	
   383                           ; 2 bytes @ 0x2
   384                           
   385                           
   386                           ; 2 bytes @ 0x2
   387  0072                     	ds	2
   388  0074                     ??___lwdiv:	
   389  0074                     ??___lwmod:	
   390                           ; 1 bytes @ 0x4
   391                           
   392                           
   393                           ; 1 bytes @ 0x4
   394  0074                     	ds	1
   395  0075                     ___lwmod@counter:	
   396  0075                     ___lwdiv@quotient:	
   397                           ; 1 bytes @ 0x5
   398                           
   399                           
   400                           ; 2 bytes @ 0x5
   401  0075                     	ds	2
   402  0077                     ___lwdiv@counter:	
   403                           
   404                           ; 1 bytes @ 0x7
   405  0077                     	ds	1
   406  0078                     ?_utoa:	
   407  0078                     utoa@buf:	
   408                           ; 2 bytes @ 0x8
   409                           
   410                           
   411                           ; 2 bytes @ 0x8
   412  0078                     	ds	2
   413  007A                     utoa@val:	
   414                           
   415                           ; 2 bytes @ 0xA
   416  007A                     	ds	2
   417  007C                     utoa@base:	
   418                           
   419                           ; 2 bytes @ 0xC
   420  007C                     	ds	2
   421                           
   422                           	psect	cstackBANK0
   423  003E                     __pcstackBANK0:	
   424  003E                     ??_utoa:	
   425                           
   426                           ; 1 bytes @ 0x0
   427  003E                     	ds	1
   428  003F                     utoa@v:	
   429                           
   430                           ; 2 bytes @ 0x1
   431  003F                     	ds	2
   432  0041                     utoa@c:	
   433                           
   434                           ; 1 bytes @ 0x3
   435  0041                     	ds	1
   436  0042                     ?_itoa:	
   437  0042                     itoa@buf:	
   438                           ; 2 bytes @ 0x4
   439                           
   440                           
   441                           ; 2 bytes @ 0x4
   442  0042                     	ds	2
   443  0044                     itoa@val:	
   444                           
   445                           ; 2 bytes @ 0x6
   446  0044                     	ds	2
   447  0046                     itoa@base:	
   448                           
   449                           ; 2 bytes @ 0x8
   450  0046                     	ds	2
   451  0048                     ??_itoa:	
   452                           
   453                           ; 1 bytes @ 0xA
   454  0048                     	ds	3
   455  004B                     ??_main:	
   456                           
   457                           ; 1 bytes @ 0xD
   458  004B                     	ds	2
   459                           
   460                           	psect	maintext
   461  06A5                     __pmaintext:	
   462 ;;
   463 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   464 ;;
   465 ;; *************** function _main *****************
   466 ;; Defined at:
   467 ;;		line 30 in file "Laboratorio_4_Slave.c"
   468 ;; Parameters:    Size  Location     Type
   469 ;;		None
   470 ;; Auto vars:     Size  Location     Type
   471 ;;		None
   472 ;; Return value:  Size  Location     Type
   473 ;;                  1    wreg      void 
   474 ;; Registers used:
   475 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   476 ;; Tracked objects:
   477 ;;		On entry : B00/0
   478 ;;		On exit  : 0/0
   479 ;;		Unchanged: 0/0
   480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   481 ;;      Params:         0       0       0       0       0
   482 ;;      Locals:         0       0       0       0       0
   483 ;;      Temps:          0       2       0       0       0
   484 ;;      Totals:         0       2       0       0       0
   485 ;;Total ram usage:        2 bytes
   486 ;; Hardware stack levels required when called:    3
   487 ;; This function calls:
   488 ;;		_ADC
   489 ;;		_SPI_SLAVE_INIT
   490 ;;		_itoa
   491 ;; This function is called by:
   492 ;;		Startup code after reset
   493 ;; This function uses a non-reentrant model
   494 ;;
   495                           
   496                           
   497                           ;psect for function _main
   498  06A5                     _main:	
   499  06A5                     l1160:	
   500                           ;incstack = 0
   501                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   502                           
   503                           
   504                           ;Laboratorio_4_Slave.c: 32:     SPI_SLAVE_INIT();
   505  06A5  120A  118A  2692  120A  118A  	fcall	_SPI_SLAVE_INIT
   506  06AA                     l1162:	
   507                           
   508                           ;Laboratorio_4_Slave.c: 33:     ADC ();
   509  06AA  120A  118A  2680  120A  118A  	fcall	_ADC
   510  06AF                     l1164:	
   511                           
   512                           ;Laboratorio_4_Slave.c: 34:     itoa (valana,buffer,10);
   513  06AF  1283               	bcf	3,5	;RP0=0, select bank0
   514  06B0  1303               	bcf	3,6	;RP1=0, select bank0
   515  06B1  0829               	movf	_valana,w
   516  06B2  00CB               	movwf	??_main
   517  06B3  01CC               	clrf	??_main+1
   518  06B4  084B               	movf	??_main,w
   519  06B5  00C2               	movwf	itoa@buf
   520  06B6  084C               	movf	??_main+1,w
   521  06B7  00C3               	movwf	itoa@buf+1
   522  06B8  302A               	movlw	low (_buffer| 0)
   523  06B9  00C4               	movwf	itoa@val
   524  06BA  3000               	movlw	high (_buffer| 0)
   525  06BB  00C5               	movwf	itoa@val+1
   526  06BC  300A               	movlw	10
   527  06BD  00C6               	movwf	itoa@base
   528  06BE  3000               	movlw	0
   529  06BF  00C7               	movwf	itoa@base+1
   530  06C0  120A  118A  26C8  120A  118A  	fcall	_itoa
   531  06C5                     l27:	
   532  06C5  120A  118A  2800   	ljmp	start
   533  06C8                     __end_of_main:	
   534                           
   535                           	psect	text1
   536  06C8                     __ptext1:	
   537 ;; *************** function _itoa *****************
   538 ;; Defined at:
   539 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\itoa.c"
   540 ;; Parameters:    Size  Location     Type
   541 ;;  buf             2    4[BANK0 ] PTR unsigned char 
   542 ;;		 -> RAM(512), 
   543 ;;  val             2    6[BANK0 ] int 
   544 ;;  base            2    8[BANK0 ] int 
   545 ;; Auto vars:     Size  Location     Type
   546 ;;  cp              2    0        PTR unsigned char 
   547 ;;		 -> RAM(512), 
   548 ;; Return value:  Size  Location     Type
   549 ;;                  2    4[BANK0 ] PTR unsigned char 
   550 ;; Registers used:
   551 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   552 ;; Tracked objects:
   553 ;;		On entry : 0/0
   554 ;;		On exit  : 0/0
   555 ;;		Unchanged: 0/0
   556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   557 ;;      Params:         0       6       0       0       0
   558 ;;      Locals:         0       2       0       0       0
   559 ;;      Temps:          0       1       0       0       0
   560 ;;      Totals:         0       9       0       0       0
   561 ;;Total ram usage:        9 bytes
   562 ;; Hardware stack levels used:    1
   563 ;; Hardware stack levels required when called:    2
   564 ;; This function calls:
   565 ;;		_utoa
   566 ;; This function is called by:
   567 ;;		_main
   568 ;; This function uses a non-reentrant model
   569 ;;
   570                           
   571                           
   572                           ;psect for function _itoa
   573  06C8                     _itoa:	
   574  06C8                     l952:	
   575                           ;incstack = 0
   576                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   577                           
   578  06C8                     l954:	
   579  06C8  1283               	bcf	3,5	;RP0=0, select bank0
   580  06C9  1303               	bcf	3,6	;RP1=0, select bank0
   581  06CA  1FC5               	btfss	itoa@val+1,7
   582  06CB  2ECD               	goto	u381
   583  06CC  2ECE               	goto	u380
   584  06CD                     u381:	
   585  06CD  2EE2               	goto	l962
   586  06CE                     u380:	
   587  06CE                     l956:	
   588  06CE  302D               	movlw	45
   589  06CF  00C8               	movwf	??_itoa
   590  06D0  0842               	movf	itoa@buf,w
   591  06D1  0084               	movwf	4
   592  06D2  1783               	bsf	3,7
   593  06D3  1C43               	btfss	itoa@buf+1,0
   594  06D4  1383               	bcf	3,7
   595  06D5  0848               	movf	??_itoa,w
   596  06D6  0080               	movwf	0
   597  06D7                     l958:	
   598  06D7  3001               	movlw	1
   599  06D8  07C2               	addwf	itoa@buf,f
   600  06D9  1803               	skipnc
   601  06DA  0AC3               	incf	itoa@buf+1,f
   602  06DB  3000               	movlw	0
   603  06DC  07C3               	addwf	itoa@buf+1,f
   604  06DD                     l960:	
   605  06DD  09C4               	comf	itoa@val,f
   606  06DE  09C5               	comf	itoa@val+1,f
   607  06DF  0AC4               	incf	itoa@val,f
   608  06E0  1903               	skipnz
   609  06E1  0AC5               	incf	itoa@val+1,f
   610  06E2                     l962:	
   611  06E2  0842               	movf	itoa@buf,w
   612  06E3  00F8               	movwf	utoa@buf
   613  06E4  0843               	movf	itoa@buf+1,w
   614  06E5  00F9               	movwf	utoa@buf+1
   615  06E6  0845               	movf	itoa@val+1,w
   616  06E7  00FB               	movwf	utoa@val+1
   617  06E8  0844               	movf	itoa@val,w
   618  06E9  00FA               	movwf	utoa@val
   619  06EA  0847               	movf	itoa@base+1,w
   620  06EB  00FD               	movwf	utoa@base+1
   621  06EC  0846               	movf	itoa@base,w
   622  06ED  00FC               	movwf	utoa@base
   623  06EE  120A  118A  2772  120A  118A  	fcall	_utoa
   624  06F3                     l632:	
   625  06F3  0008               	return
   626  06F4                     __end_of_itoa:	
   627                           
   628                           	psect	text2
   629  0772                     __ptext2:	
   630 ;; *************** function _utoa *****************
   631 ;; Defined at:
   632 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\itoa.c"
   633 ;; Parameters:    Size  Location     Type
   634 ;;  buf             2    8[COMMON] PTR unsigned char 
   635 ;;		 -> RAM(512), 
   636 ;;  val             2   10[COMMON] unsigned int 
   637 ;;  base            2   12[COMMON] int 
   638 ;; Auto vars:     Size  Location     Type
   639 ;;  v               2    1[BANK0 ] unsigned int 
   640 ;;  c               1    3[BANK0 ] unsigned char 
   641 ;; Return value:  Size  Location     Type
   642 ;;                  2    8[COMMON] PTR unsigned char 
   643 ;; Registers used:
   644 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   645 ;; Tracked objects:
   646 ;;		On entry : 0/0
   647 ;;		On exit  : 0/0
   648 ;;		Unchanged: 0/0
   649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   650 ;;      Params:         6       0       0       0       0
   651 ;;      Locals:         0       3       0       0       0
   652 ;;      Temps:          0       1       0       0       0
   653 ;;      Totals:         6       4       0       0       0
   654 ;;Total ram usage:       10 bytes
   655 ;; Hardware stack levels used:    1
   656 ;; Hardware stack levels required when called:    1
   657 ;; This function calls:
   658 ;;		___lwdiv
   659 ;;		___lwmod
   660 ;; This function is called by:
   661 ;;		_itoa
   662 ;; This function uses a non-reentrant model
   663 ;;
   664                           
   665                           
   666                           ;psect for function _utoa
   667  0772                     _utoa:	
   668  0772                     l910:	
   669                           ;incstack = 0
   670                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   671                           
   672  0772  087B               	movf	utoa@val+1,w
   673  0773  1283               	bcf	3,5	;RP0=0, select bank0
   674  0774  1303               	bcf	3,6	;RP1=0, select bank0
   675  0775  00C0               	movwf	utoa@v+1
   676  0776  087A               	movf	utoa@val,w
   677  0777  00BF               	movwf	utoa@v
   678  0778                     l912:	
   679  0778  087D               	movf	utoa@base+1,w
   680  0779  00F1               	movwf	___lwdiv@divisor+1
   681  077A  087C               	movf	utoa@base,w
   682  077B  00F0               	movwf	___lwdiv@divisor
   683  077C  0840               	movf	utoa@v+1,w
   684  077D  00F3               	movwf	___lwdiv@dividend+1
   685  077E  083F               	movf	utoa@v,w
   686  077F  00F2               	movwf	___lwdiv@dividend
   687  0780  120A  118A  272E  120A  118A  	fcall	___lwdiv
   688  0785  0871               	movf	?___lwdiv+1,w
   689  0786  1283               	bcf	3,5	;RP0=0, select bank0
   690  0787  1303               	bcf	3,6	;RP1=0, select bank0
   691  0788  00C0               	movwf	utoa@v+1
   692  0789  0870               	movf	?___lwdiv,w
   693  078A  00BF               	movwf	utoa@v
   694  078B                     l914:	
   695  078B  3001               	movlw	1
   696  078C  07F8               	addwf	utoa@buf,f
   697  078D  1803               	skipnc
   698  078E  0AF9               	incf	utoa@buf+1,f
   699  078F  3000               	movlw	0
   700  0790  07F9               	addwf	utoa@buf+1,f
   701  0791                     l916:	
   702  0791  083F               	movf	utoa@v,w
   703  0792  0440               	iorwf	utoa@v+1,w
   704  0793  1D03               	btfss	3,2
   705  0794  2F96               	goto	u351
   706  0795  2F97               	goto	u350
   707  0796                     u351:	
   708  0796  2F78               	goto	l912
   709  0797                     u350:	
   710  0797                     l918:	
   711  0797  0878               	movf	utoa@buf,w
   712  0798  0084               	movwf	4
   713  0799  1783               	bsf	3,7
   714  079A  1C79               	btfss	utoa@buf+1,0
   715  079B  1383               	bcf	3,7
   716  079C  0180               	clrf	0
   717  079D                     l920:	
   718  079D  3001               	movlw	1
   719  079E  02F8               	subwf	utoa@buf,f
   720  079F  3000               	movlw	0
   721  07A0  1C03               	skipc
   722  07A1  03F9               	decf	utoa@buf+1,f
   723  07A2  02F9               	subwf	utoa@buf+1,f
   724  07A3                     l922:	
   725  07A3  087D               	movf	utoa@base+1,w
   726  07A4  00F1               	movwf	___lwmod@divisor+1
   727  07A5  087C               	movf	utoa@base,w
   728  07A6  00F0               	movwf	___lwmod@divisor
   729  07A7  087B               	movf	utoa@val+1,w
   730  07A8  00F3               	movwf	___lwmod@dividend+1
   731  07A9  087A               	movf	utoa@val,w
   732  07AA  00F2               	movwf	___lwmod@dividend
   733  07AB  120A  118A  26F4  120A  118A  	fcall	___lwmod
   734  07B0  0870               	movf	?___lwmod,w
   735  07B1  1283               	bcf	3,5	;RP0=0, select bank0
   736  07B2  1303               	bcf	3,6	;RP1=0, select bank0
   737  07B3  00BE               	movwf	??_utoa
   738  07B4  083E               	movf	??_utoa,w
   739  07B5  00C1               	movwf	utoa@c
   740  07B6                     l924:	
   741  07B6  087D               	movf	utoa@base+1,w
   742  07B7  00F1               	movwf	___lwdiv@divisor+1
   743  07B8  087C               	movf	utoa@base,w
   744  07B9  00F0               	movwf	___lwdiv@divisor
   745  07BA  087B               	movf	utoa@val+1,w
   746  07BB  00F3               	movwf	___lwdiv@dividend+1
   747  07BC  087A               	movf	utoa@val,w
   748  07BD  00F2               	movwf	___lwdiv@dividend
   749  07BE  120A  118A  272E  120A  118A  	fcall	___lwdiv
   750  07C3  0871               	movf	?___lwdiv+1,w
   751  07C4  00FB               	movwf	utoa@val+1
   752  07C5  0870               	movf	?___lwdiv,w
   753  07C6  00FA               	movwf	utoa@val
   754  07C7                     l926:	
   755  07C7  300A               	movlw	10
   756  07C8  1283               	bcf	3,5	;RP0=0, select bank0
   757  07C9  1303               	bcf	3,6	;RP1=0, select bank0
   758  07CA  0241               	subwf	utoa@c,w
   759  07CB  1C03               	skipc
   760  07CC  2FCE               	goto	u361
   761  07CD  2FCF               	goto	u360
   762  07CE                     u361:	
   763  07CE  2FD3               	goto	l638
   764  07CF                     u360:	
   765  07CF                     l928:	
   766  07CF  3007               	movlw	7
   767  07D0  00BE               	movwf	??_utoa
   768  07D1  083E               	movf	??_utoa,w
   769  07D2  07C1               	addwf	utoa@c,f
   770  07D3                     l638:	
   771  07D3  3030               	movlw	48
   772  07D4  00BE               	movwf	??_utoa
   773  07D5  083E               	movf	??_utoa,w
   774  07D6  07C1               	addwf	utoa@c,f
   775  07D7                     l930:	
   776  07D7  0841               	movf	utoa@c,w
   777  07D8  00BE               	movwf	??_utoa
   778  07D9  0878               	movf	utoa@buf,w
   779  07DA  0084               	movwf	4
   780  07DB  1783               	bsf	3,7
   781  07DC  1C79               	btfss	utoa@buf+1,0
   782  07DD  1383               	bcf	3,7
   783  07DE  083E               	movf	??_utoa,w
   784  07DF  0080               	movwf	0
   785  07E0                     l932:	
   786  07E0  3001               	movlw	1
   787  07E1  02F8               	subwf	utoa@buf,f
   788  07E2  3000               	movlw	0
   789  07E3  1C03               	skipc
   790  07E4  03F9               	decf	utoa@buf+1,f
   791  07E5  02F9               	subwf	utoa@buf+1,f
   792  07E6                     l934:	
   793  07E6  087A               	movf	utoa@val,w
   794  07E7  047B               	iorwf	utoa@val+1,w
   795  07E8  1D03               	btfss	3,2
   796  07E9  2FEB               	goto	u371
   797  07EA  2FEC               	goto	u370
   798  07EB                     u371:	
   799  07EB  2FA3               	goto	l922
   800  07EC                     u370:	
   801  07EC                     l936:	
   802                           
   803                           ;	Return value of _utoa is never used
   804  07EC  3001               	movlw	1
   805  07ED  07F8               	addwf	utoa@buf,f
   806  07EE  1803               	skipnc
   807  07EF  0AF9               	incf	utoa@buf+1,f
   808  07F0  3000               	movlw	0
   809  07F1  07F9               	addwf	utoa@buf+1,f
   810  07F2                     l640:	
   811  07F2  0008               	return
   812  07F3                     __end_of_utoa:	
   813                           
   814                           	psect	text3
   815  06F4                     __ptext3:	
   816 ;; *************** function ___lwmod *****************
   817 ;; Defined at:
   818 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
   819 ;; Parameters:    Size  Location     Type
   820 ;;  divisor         2    0[COMMON] unsigned int 
   821 ;;  dividend        2    2[COMMON] unsigned int 
   822 ;; Auto vars:     Size  Location     Type
   823 ;;  counter         1    5[COMMON] unsigned char 
   824 ;; Return value:  Size  Location     Type
   825 ;;                  2    0[COMMON] unsigned int 
   826 ;; Registers used:
   827 ;;		wreg, status,2, status,0
   828 ;; Tracked objects:
   829 ;;		On entry : 0/0
   830 ;;		On exit  : 0/0
   831 ;;		Unchanged: 0/0
   832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   833 ;;      Params:         4       0       0       0       0
   834 ;;      Locals:         1       0       0       0       0
   835 ;;      Temps:          1       0       0       0       0
   836 ;;      Totals:         6       0       0       0       0
   837 ;;Total ram usage:        6 bytes
   838 ;; Hardware stack levels used:    1
   839 ;; This function calls:
   840 ;;		Nothing
   841 ;; This function is called by:
   842 ;;		_utoa
   843 ;; This function uses a non-reentrant model
   844 ;;
   845                           
   846                           
   847                           ;psect for function ___lwmod
   848  06F4                     ___lwmod:	
   849  06F4                     l888:	
   850                           ;incstack = 0
   851                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
   852                           
   853  06F4  0870               	movf	___lwmod@divisor,w
   854  06F5  0471               	iorwf	___lwmod@divisor+1,w
   855  06F6  1903               	btfsc	3,2
   856  06F7  2EF9               	goto	u291
   857  06F8  2EFA               	goto	u290
   858  06F9                     u291:	
   859  06F9  2F29               	goto	l906
   860  06FA                     u290:	
   861  06FA                     l890:	
   862  06FA  01F5               	clrf	___lwmod@counter
   863  06FB  0AF5               	incf	___lwmod@counter,f
   864  06FC  2F08               	goto	l896
   865  06FD                     l892:	
   866  06FD  3001               	movlw	1
   867  06FE                     u305:	
   868  06FE  1003               	clrc
   869  06FF  0DF0               	rlf	___lwmod@divisor,f
   870  0700  0DF1               	rlf	___lwmod@divisor+1,f
   871  0701  3EFF               	addlw	-1
   872  0702  1D03               	skipz
   873  0703  2EFE               	goto	u305
   874  0704                     l894:	
   875  0704  3001               	movlw	1
   876  0705  00F4               	movwf	??___lwmod
   877  0706  0874               	movf	??___lwmod,w
   878  0707  07F5               	addwf	___lwmod@counter,f
   879  0708                     l896:	
   880  0708  1FF1               	btfss	___lwmod@divisor+1,7
   881  0709  2F0B               	goto	u311
   882  070A  2F0C               	goto	u310
   883  070B                     u311:	
   884  070B  2EFD               	goto	l892
   885  070C                     u310:	
   886  070C                     l898:	
   887  070C  0871               	movf	___lwmod@divisor+1,w
   888  070D  0273               	subwf	___lwmod@dividend+1,w
   889  070E  1D03               	skipz
   890  070F  2F12               	goto	u325
   891  0710  0870               	movf	___lwmod@divisor,w
   892  0711  0272               	subwf	___lwmod@dividend,w
   893  0712                     u325:	
   894  0712  1C03               	skipc
   895  0713  2F15               	goto	u321
   896  0714  2F16               	goto	u320
   897  0715                     u321:	
   898  0715  2F1C               	goto	l902
   899  0716                     u320:	
   900  0716                     l900:	
   901  0716  0870               	movf	___lwmod@divisor,w
   902  0717  02F2               	subwf	___lwmod@dividend,f
   903  0718  0871               	movf	___lwmod@divisor+1,w
   904  0719  1C03               	skipc
   905  071A  03F3               	decf	___lwmod@dividend+1,f
   906  071B  02F3               	subwf	___lwmod@dividend+1,f
   907  071C                     l902:	
   908  071C  3001               	movlw	1
   909  071D                     u335:	
   910  071D  1003               	clrc
   911  071E  0CF1               	rrf	___lwmod@divisor+1,f
   912  071F  0CF0               	rrf	___lwmod@divisor,f
   913  0720  3EFF               	addlw	-1
   914  0721  1D03               	skipz
   915  0722  2F1D               	goto	u335
   916  0723                     l904:	
   917  0723  3001               	movlw	1
   918  0724  02F5               	subwf	___lwmod@counter,f
   919  0725  1D03               	btfss	3,2
   920  0726  2F28               	goto	u341
   921  0727  2F29               	goto	u340
   922  0728                     u341:	
   923  0728  2F0C               	goto	l898
   924  0729                     u340:	
   925  0729                     l906:	
   926  0729  0873               	movf	___lwmod@dividend+1,w
   927  072A  00F1               	movwf	?___lwmod+1
   928  072B  0872               	movf	___lwmod@dividend,w
   929  072C  00F0               	movwf	?___lwmod
   930  072D                     l466:	
   931  072D  0008               	return
   932  072E                     __end_of___lwmod:	
   933                           
   934                           	psect	text4
   935  072E                     __ptext4:	
   936 ;; *************** function ___lwdiv *****************
   937 ;; Defined at:
   938 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
   939 ;; Parameters:    Size  Location     Type
   940 ;;  divisor         2    0[COMMON] unsigned int 
   941 ;;  dividend        2    2[COMMON] unsigned int 
   942 ;; Auto vars:     Size  Location     Type
   943 ;;  quotient        2    5[COMMON] unsigned int 
   944 ;;  counter         1    7[COMMON] unsigned char 
   945 ;; Return value:  Size  Location     Type
   946 ;;                  2    0[COMMON] unsigned int 
   947 ;; Registers used:
   948 ;;		wreg, status,2, status,0
   949 ;; Tracked objects:
   950 ;;		On entry : 0/0
   951 ;;		On exit  : 0/0
   952 ;;		Unchanged: 0/0
   953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   954 ;;      Params:         4       0       0       0       0
   955 ;;      Locals:         3       0       0       0       0
   956 ;;      Temps:          1       0       0       0       0
   957 ;;      Totals:         8       0       0       0       0
   958 ;;Total ram usage:        8 bytes
   959 ;; Hardware stack levels used:    1
   960 ;; This function calls:
   961 ;;		Nothing
   962 ;; This function is called by:
   963 ;;		_utoa
   964 ;; This function uses a non-reentrant model
   965 ;;
   966                           
   967                           
   968                           ;psect for function ___lwdiv
   969  072E                     ___lwdiv:	
   970  072E                     l862:	
   971                           ;incstack = 0
   972                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
   973                           
   974  072E  01F5               	clrf	___lwdiv@quotient
   975  072F  01F6               	clrf	___lwdiv@quotient+1
   976  0730                     l864:	
   977  0730  0870               	movf	___lwdiv@divisor,w
   978  0731  0471               	iorwf	___lwdiv@divisor+1,w
   979  0732  1903               	btfsc	3,2
   980  0733  2F35               	goto	u221
   981  0734  2F36               	goto	u220
   982  0735                     u221:	
   983  0735  2F6D               	goto	l884
   984  0736                     u220:	
   985  0736                     l866:	
   986  0736  01F7               	clrf	___lwdiv@counter
   987  0737  0AF7               	incf	___lwdiv@counter,f
   988  0738  2F44               	goto	l872
   989  0739                     l868:	
   990  0739  3001               	movlw	1
   991  073A                     u235:	
   992  073A  1003               	clrc
   993  073B  0DF0               	rlf	___lwdiv@divisor,f
   994  073C  0DF1               	rlf	___lwdiv@divisor+1,f
   995  073D  3EFF               	addlw	-1
   996  073E  1D03               	skipz
   997  073F  2F3A               	goto	u235
   998  0740                     l870:	
   999  0740  3001               	movlw	1
  1000  0741  00F4               	movwf	??___lwdiv
  1001  0742  0874               	movf	??___lwdiv,w
  1002  0743  07F7               	addwf	___lwdiv@counter,f
  1003  0744                     l872:	
  1004  0744  1FF1               	btfss	___lwdiv@divisor+1,7
  1005  0745  2F47               	goto	u241
  1006  0746  2F48               	goto	u240
  1007  0747                     u241:	
  1008  0747  2F39               	goto	l868
  1009  0748                     u240:	
  1010  0748                     l874:	
  1011  0748  3001               	movlw	1
  1012  0749                     u255:	
  1013  0749  1003               	clrc
  1014  074A  0DF5               	rlf	___lwdiv@quotient,f
  1015  074B  0DF6               	rlf	___lwdiv@quotient+1,f
  1016  074C  3EFF               	addlw	-1
  1017  074D  1D03               	skipz
  1018  074E  2F49               	goto	u255
  1019  074F  0871               	movf	___lwdiv@divisor+1,w
  1020  0750  0273               	subwf	___lwdiv@dividend+1,w
  1021  0751  1D03               	skipz
  1022  0752  2F55               	goto	u265
  1023  0753  0870               	movf	___lwdiv@divisor,w
  1024  0754  0272               	subwf	___lwdiv@dividend,w
  1025  0755                     u265:	
  1026  0755  1C03               	skipc
  1027  0756  2F58               	goto	u261
  1028  0757  2F59               	goto	u260
  1029  0758                     u261:	
  1030  0758  2F60               	goto	l880
  1031  0759                     u260:	
  1032  0759                     l876:	
  1033  0759  0870               	movf	___lwdiv@divisor,w
  1034  075A  02F2               	subwf	___lwdiv@dividend,f
  1035  075B  0871               	movf	___lwdiv@divisor+1,w
  1036  075C  1C03               	skipc
  1037  075D  03F3               	decf	___lwdiv@dividend+1,f
  1038  075E  02F3               	subwf	___lwdiv@dividend+1,f
  1039  075F                     l878:	
  1040  075F  1475               	bsf	___lwdiv@quotient,0
  1041  0760                     l880:	
  1042  0760  3001               	movlw	1
  1043  0761                     u275:	
  1044  0761  1003               	clrc
  1045  0762  0CF1               	rrf	___lwdiv@divisor+1,f
  1046  0763  0CF0               	rrf	___lwdiv@divisor,f
  1047  0764  3EFF               	addlw	-1
  1048  0765  1D03               	skipz
  1049  0766  2F61               	goto	u275
  1050  0767                     l882:	
  1051  0767  3001               	movlw	1
  1052  0768  02F7               	subwf	___lwdiv@counter,f
  1053  0769  1D03               	btfss	3,2
  1054  076A  2F6C               	goto	u281
  1055  076B  2F6D               	goto	u280
  1056  076C                     u281:	
  1057  076C  2F48               	goto	l874
  1058  076D                     u280:	
  1059  076D                     l884:	
  1060  076D  0876               	movf	___lwdiv@quotient+1,w
  1061  076E  00F1               	movwf	?___lwdiv+1
  1062  076F  0875               	movf	___lwdiv@quotient,w
  1063  0770  00F0               	movwf	?___lwdiv
  1064  0771                     l456:	
  1065  0771  0008               	return
  1066  0772                     __end_of___lwdiv:	
  1067                           
  1068                           	psect	text5
  1069  0692                     __ptext5:	
  1070 ;; *************** function _SPI_SLAVE_INIT *****************
  1071 ;; Defined at:
  1072 ;;		line 11 in file "Labor4Slave.c"
  1073 ;; Parameters:    Size  Location     Type
  1074 ;;		None
  1075 ;; Auto vars:     Size  Location     Type
  1076 ;;		None
  1077 ;; Return value:  Size  Location     Type
  1078 ;;                  1    wreg      void 
  1079 ;; Registers used:
  1080 ;;		None
  1081 ;; Tracked objects:
  1082 ;;		On entry : 0/0
  1083 ;;		On exit  : 0/0
  1084 ;;		Unchanged: 0/0
  1085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1086 ;;      Params:         0       0       0       0       0
  1087 ;;      Locals:         0       0       0       0       0
  1088 ;;      Temps:          0       0       0       0       0
  1089 ;;      Totals:         0       0       0       0       0
  1090 ;;Total ram usage:        0 bytes
  1091 ;; Hardware stack levels used:    1
  1092 ;; This function calls:
  1093 ;;		Nothing
  1094 ;; This function is called by:
  1095 ;;		_main
  1096 ;; This function uses a non-reentrant model
  1097 ;;
  1098                           
  1099                           
  1100                           ;psect for function _SPI_SLAVE_INIT
  1101  0692                     _SPI_SLAVE_INIT:	
  1102  0692                     l940:	
  1103                           ;incstack = 0
  1104                           ; Regs used in _SPI_SLAVE_INIT: []
  1105                           
  1106                           
  1107                           ;Labor4Slave.c: 12:     SSPSTATbits.SMP = 0;
  1108  0692  1683               	bsf	3,5	;RP0=1, select bank1
  1109  0693  1303               	bcf	3,6	;RP1=0, select bank1
  1110  0694  1394               	bcf	20,7	;volatile
  1111                           
  1112                           ;Labor4Slave.c: 13:     SSPCONbits.CKP = 0;
  1113  0695  1283               	bcf	3,5	;RP0=0, select bank0
  1114  0696  1303               	bcf	3,6	;RP1=0, select bank0
  1115  0697  1214               	bcf	20,4	;volatile
  1116                           
  1117                           ;Labor4Slave.c: 14:     SSPCONbits.SSPM0 = 0;
  1118  0698  1014               	bcf	20,0	;volatile
  1119                           
  1120                           ;Labor4Slave.c: 15:     SSPCONbits.SSPM1 = 0;
  1121  0699  1094               	bcf	20,1	;volatile
  1122                           
  1123                           ;Labor4Slave.c: 16:     SSPCONbits.SSPM2 = 1;
  1124  069A  1514               	bsf	20,2	;volatile
  1125                           
  1126                           ;Labor4Slave.c: 17:     SSPCONbits.SSPM3 = 0;
  1127  069B  1194               	bcf	20,3	;volatile
  1128                           
  1129                           ;Labor4Slave.c: 18:     SSPSTATbits.CKE = 0;
  1130  069C  1683               	bsf	3,5	;RP0=1, select bank1
  1131  069D  1303               	bcf	3,6	;RP1=0, select bank1
  1132  069E  1314               	bcf	20,6	;volatile
  1133                           
  1134                           ;Labor4Slave.c: 20:     TRISCbits.TRISC5 = 0;
  1135  069F  1287               	bcf	7,5	;volatile
  1136                           
  1137                           ;Labor4Slave.c: 21:     TRISCbits.TRISC3 = 1;
  1138  06A0  1587               	bsf	7,3	;volatile
  1139                           
  1140                           ;Labor4Slave.c: 23:     SSPCONbits.SSPEN = 1;
  1141  06A1  1283               	bcf	3,5	;RP0=0, select bank0
  1142  06A2  1303               	bcf	3,6	;RP1=0, select bank0
  1143  06A3  1694               	bsf	20,5	;volatile
  1144  06A4                     l68:	
  1145  06A4  0008               	return
  1146  06A5                     __end_of_SPI_SLAVE_INIT:	
  1147                           
  1148                           	psect	text6
  1149  0680                     __ptext6:	
  1150 ;; *************** function _ADC *****************
  1151 ;; Defined at:
  1152 ;;		line 26 in file "Labor4Slave.c"
  1153 ;; Parameters:    Size  Location     Type
  1154 ;;		None
  1155 ;; Auto vars:     Size  Location     Type
  1156 ;;		None
  1157 ;; Return value:  Size  Location     Type
  1158 ;;                  1    wreg      void 
  1159 ;; Registers used:
  1160 ;;		wreg, status,2, status,0
  1161 ;; Tracked objects:
  1162 ;;		On entry : 0/0
  1163 ;;		On exit  : 0/0
  1164 ;;		Unchanged: 0/0
  1165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1166 ;;      Params:         0       0       0       0       0
  1167 ;;      Locals:         0       0       0       0       0
  1168 ;;      Temps:          0       0       0       0       0
  1169 ;;      Totals:         0       0       0       0       0
  1170 ;;Total ram usage:        0 bytes
  1171 ;; Hardware stack levels used:    1
  1172 ;; This function calls:
  1173 ;;		Nothing
  1174 ;; This function is called by:
  1175 ;;		_main
  1176 ;; This function uses a non-reentrant model
  1177 ;;
  1178                           
  1179                           
  1180                           ;psect for function _ADC
  1181  0680                     _ADC:	
  1182  0680                     l942:	
  1183                           ;incstack = 0
  1184                           ; Regs used in _ADC: [wreg+status,2+status,0]
  1185                           
  1186                           
  1187                           ;Labor4Slave.c: 27:     ADCON1bits.ADFM =0;
  1188  0680  1683               	bsf	3,5	;RP0=1, select bank1
  1189  0681  1303               	bcf	3,6	;RP1=0, select bank1
  1190  0682  139F               	bcf	31,7	;volatile
  1191                           
  1192                           ;Labor4Slave.c: 28:     ADCON1bits.VCFG0 =0;
  1193  0683  121F               	bcf	31,4	;volatile
  1194                           
  1195                           ;Labor4Slave.c: 29:     ADCON1bits.VCFG1 =0;
  1196  0684  129F               	bcf	31,5	;volatile
  1197                           
  1198                           ;Labor4Slave.c: 30:     ADCON0bits.ADCS0 =1;
  1199  0685  1283               	bcf	3,5	;RP0=0, select bank0
  1200  0686  1303               	bcf	3,6	;RP1=0, select bank0
  1201  0687  171F               	bsf	31,6	;volatile
  1202                           
  1203                           ;Labor4Slave.c: 31:     ADCON0bits.ADCS1 =0;
  1204  0688  139F               	bcf	31,7	;volatile
  1205  0689                     l944:	
  1206                           
  1207                           ;Labor4Slave.c: 32:     ADCON0bits.CHS = 0;
  1208  0689  30C3               	movlw	-61
  1209  068A  059F               	andwf	31,f	;volatile
  1210  068B                     l946:	
  1211                           
  1212                           ;Labor4Slave.c: 33:     ADCON0bits.ADON = 1;
  1213  068B  141F               	bsf	31,0	;volatile
  1214  068C                     l948:	
  1215                           
  1216                           ;Labor4Slave.c: 34:     ANSEL = 0b01000011;
  1217  068C  3043               	movlw	67
  1218  068D  1683               	bsf	3,5	;RP0=1, select bank3
  1219  068E  1703               	bsf	3,6	;RP1=1, select bank3
  1220  068F  0088               	movwf	8	;volatile
  1221  0690                     l950:	
  1222                           
  1223                           ;Labor4Slave.c: 35:     ANSELH = 0b00000000;
  1224  0690  0189               	clrf	9	;volatile
  1225  0691                     l71:	
  1226  0691  0008               	return
  1227  0692                     __end_of_ADC:	
  1228  007E                     btemp	set	126	;btemp
  1229  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         30
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     15      45
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    _doprnt$2	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMMON[1]), 

    _doprnt$1	PTR const unsigned char  size(2) Largest target is 8192
		 -> ROM(CODE[8192]), 

    _doprnt$0	PTR struct __prbuf size(1) Largest target is 3
		 -> printf@pb(COMMON[2]), 

    S783__prbuf$func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> putch(), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> putch(), 

    S783__prbuf$ptr	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 


Critical Paths under _main in COMMON

    _itoa->_utoa
    _utoa->___lwdiv

Critical Paths under _main in BANK0

    _main->_itoa
    _itoa->_utoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1698
                                             13 BANK0      2     2      0
                                _ADC
                     _SPI_SLAVE_INIT
                               _itoa
 ---------------------------------------------------------------------------------
 (1) _itoa                                                 9     3      6    1698
                                              4 BANK0      9     3      6
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _utoa                                                10     4      6    1307
                                              8 COMMON     6     0      6
                                              0 BANK0      4     4      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _SPI_SLAVE_INIT                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC
   _SPI_SLAVE_INIT
   _itoa
     _utoa
       ___lwdiv
       ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      3B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      F      2D       5       56.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      3B      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Feb 15 21:12:04 2020

                       _m 0028               __CFG_CP$OFF 0000               _SSPSTATbits 0094  
                      l27 06C5                        l71 0691                        l68 06A4  
                      fsr 0004                       _ADC 0680                       l456 0771  
                     l640 07F2                       l632 06F3                       l466 072D  
                     l900 0716                       l902 071C                       l638 07D3  
                     l910 0772                       l904 0723                       l920 079D  
                     l912 0778                       l906 0729                       l930 07D7  
                     l922 07A3                       l914 078B                       l940 0692  
                     l932 07E0                       l924 07B6                       l916 0791  
                     l950 0690                       l942 0680                       l870 0740  
                     l862 072E                       l934 07E6                       l926 07C7  
                     l918 0797                       l944 0689                       l880 0760  
                     l872 0744                       l864 0730                       l936 07EC  
                     l928 07CF                       l960 06DD                       l952 06C8  
                     l946 068B                       l882 0767                       l874 0748  
                     l866 0736                       l890 06FA                       l962 06E2  
                     l954 06C8                       l948 068C                       l876 0759  
                     l868 0739                       l884 076D                       l892 06FD  
                     l956 06CE                       l878 075F                       l894 0704  
                     l958 06D7                       l896 0708                       l888 06F4  
                     l898 070C                       u220 0736                       u221 0735  
                     u310 070C                       u311 070B                       u240 0748  
                     u320 0716                       u241 0747                       u321 0715  
                     u305 06FE                       u235 073A                       u260 0759  
                     u340 0729                       u261 0758                       u341 0728  
                     u325 0712                       u350 0797                       u255 0749  
                     u335 071D                       u351 0796                       u280 076D  
                     u360 07CF                       u281 076C                       u265 0755  
                     u361 07CE                       u290 06FA                       u370 07EC  
            __CFG_CPD$OFF 0000                       u275 0761                       u291 06F9  
                     u371 07EB                       u380 06CE                       u381 06CD  
                     fsr0 0004                       indf 0000                      ?_ADC 0070  
            __CFG_LVP$OFF 0000                      l1160 06A5                      l1162 06AA  
                    l1164 06AF              __CFG_WRT$OFF 0000                      _main 06A5  
                    _num1 0026                      _num2 0025                      _num3 0024  
                    _pot1 0027                      _itoa 06C8                      btemp 007E  
                    _utoa 0772                      start 0000             __CFG_IESO$OFF 0000  
                   ??_ADC 0070                     ?_main 0070                     ?_itoa 0042  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188                     ?_utoa 0078  
         __end_of___lwdiv 0772           __end_of___lwmod 072E             __CFG_PWRTE$ON 0000  
          __CFG_FCMEN$OFF 0000                     _putch 0000            __CFG_BOREN$OFF 0000  
                   utoa@c 0041                     utoa@v 003F                     status 0003  
                   wtemp0 007E            __CFG_MCLRE$OFF 0000           __initialization 07F3  
            __end_of_main 06C8              __end_of_itoa 06F4              __end_of_utoa 07F3  
                  ??_main 004B                    ??_itoa 0048                    ??_utoa 003E  
                  _ADRESH 001E                    _ANSELH 0189          ??_SPI_SLAVE_INIT 0070  
                  _SSPBUF 0013                 ??___lwdiv 0074                 ??___lwmod 0074  
                  _buffer 002A                    _valana 0029                    _number 0020  
 __end_of__initialization 07FC            __pcstackCOMMON 0070                __pbssBANK0 0020  
              __pmaintext 06A5                   ___lwdiv 072E                   ___lwmod 06F4  
                 __ptext1 06C8                   __ptext2 0772                   __ptext3 06F4  
                 __ptext4 072E                   __ptext5 0692                   __ptext6 0680  
            __size_of_ADC 0012                   clrloop0 0679      end_of_initialization 07FC  
                 itoa@buf 0042                   itoa@val 0044                   utoa@buf 0078  
                 utoa@val 007A                 _TRISCbits 0087       start_initialization 07F3  
             __end_of_ADC 0692  __CFG_FOSC$INTRC_NOCLKOUT 0000   __size_of_SPI_SLAVE_INIT 0013  
               ___latbits 0002             __pcstackBANK0 003E          ___lwdiv@dividend 0072  
                ?___lwdiv 0070                  ?___lwmod 0070          ___lwdiv@quotient 0075  
               clear_ram0 0678                _ADCON0bits 001F                _ADCON1bits 009F  
          _SPI_SLAVE_INIT 0692          __size_of___lwdiv 0044          __size_of___lwmod 003A  
         ___lwdiv@divisor 0070           ___lwdiv@counter 0077         __CFG_BOR4V$BOR40V 0000  
           __size_of_main 0023             __size_of_itoa 002C             __size_of_utoa 0081  
  __end_of_SPI_SLAVE_INIT 06A5                  itoa@base 0046          ___lwmod@dividend 0072  
         ?_SPI_SLAVE_INIT 0070                  utoa@base 007C           ___lwmod@divisor 0070  
         ___lwmod@counter 0075                _SSPCONbits 0014  
