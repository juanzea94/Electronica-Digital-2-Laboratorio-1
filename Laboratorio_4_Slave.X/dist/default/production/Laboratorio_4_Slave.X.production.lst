

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Feb 19 00:45:04 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.10
    15                           ; Generated 31/07/2019 GMT
    16                           ; 
    17                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  0105                     	;# 
   190  0107                     	;# 
   191  0108                     	;# 
   192  0109                     	;# 
   193  010C                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  0185                     	;# 
   199  0187                     	;# 
   200  0188                     	;# 
   201  0189                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0000                     	;# 
   205  0001                     	;# 
   206  0002                     	;# 
   207  0003                     	;# 
   208  0004                     	;# 
   209  0005                     	;# 
   210  0006                     	;# 
   211  0007                     	;# 
   212  0008                     	;# 
   213  0009                     	;# 
   214  000A                     	;# 
   215  000B                     	;# 
   216  000C                     	;# 
   217  000D                     	;# 
   218  000E                     	;# 
   219  000E                     	;# 
   220  000F                     	;# 
   221  0010                     	;# 
   222  0011                     	;# 
   223  0012                     	;# 
   224  0013                     	;# 
   225  0014                     	;# 
   226  0015                     	;# 
   227  0015                     	;# 
   228  0016                     	;# 
   229  0017                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  001B                     	;# 
   234  001B                     	;# 
   235  001C                     	;# 
   236  001D                     	;# 
   237  001E                     	;# 
   238  001F                     	;# 
   239  0081                     	;# 
   240  0085                     	;# 
   241  0086                     	;# 
   242  0087                     	;# 
   243  0088                     	;# 
   244  0089                     	;# 
   245  008C                     	;# 
   246  008D                     	;# 
   247  008E                     	;# 
   248  008F                     	;# 
   249  0090                     	;# 
   250  0091                     	;# 
   251  0092                     	;# 
   252  0093                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0094                     	;# 
   256  0095                     	;# 
   257  0096                     	;# 
   258  0097                     	;# 
   259  0098                     	;# 
   260  0099                     	;# 
   261  009A                     	;# 
   262  009B                     	;# 
   263  009C                     	;# 
   264  009D                     	;# 
   265  009E                     	;# 
   266  009F                     	;# 
   267  0105                     	;# 
   268  0107                     	;# 
   269  0108                     	;# 
   270  0109                     	;# 
   271  010C                     	;# 
   272  010C                     	;# 
   273  010D                     	;# 
   274  010E                     	;# 
   275  010F                     	;# 
   276  0185                     	;# 
   277  0187                     	;# 
   278  0188                     	;# 
   279  0189                     	;# 
   280  018C                     	;# 
   281  018D                     	;# 
   282  0013                     _SSPBUF	set	19
   283  0005                     _PORTAbits	set	5
   284  0014                     _SSPCONbits	set	20
   285  001E                     _ADRESH	set	30
   286  001F                     _ADCON0bits	set	31
   287  0009                     _PORTE	set	9
   288  0008                     _PORTD	set	8
   289  0007                     _PORTC	set	7
   290  0006                     _PORTB	set	6
   291  0005                     _PORTA	set	5
   292  0094                     _SSPSTATbits	set	148
   293  009F                     _ADCON1bits	set	159
   294  0086                     _TRISB	set	134
   295  0085                     _TRISA	set	133
   296  0085                     _TRISAbits	set	133
   297  0087                     _TRISCbits	set	135
   298  008F                     _OSCCONbits	set	143
   299  0189                     _ANSELH	set	393
   300  0188                     _ANSEL	set	392
   301                           
   302                           ; #config settings
   303  0000                     
   304                           	psect	cinit
   305  07EB                     start_initialization:	
   306  07EB                     __initialization:	
   307                           
   308                           ; Clear objects allocated to COMMON
   309  07EB  3070               	movlw	low __pbssCOMMON
   310  07EC  0084               	movwf	4
   311  07ED  307C               	movlw	low (__pbssCOMMON+12)
   312  07EE  120A  118A  277C  120A  118A  	fcall	clear_ram0
   313                           
   314                           ; Clear objects allocated to BANK0
   315  07F3  1383               	bcf	3,7	;select IRP bank0
   316  07F4  3020               	movlw	low __pbssBANK0
   317  07F5  0084               	movwf	4
   318  07F6  3034               	movlw	low (__pbssBANK0+20)
   319  07F7  120A  118A  277C  120A  118A  	fcall	clear_ram0
   320  07FC                     end_of_initialization:	
   321                           ;End of C runtime variable initialization code
   322                           
   323  07FC                     __end_of__initialization:	
   324  07FC  0183               	clrf	3
   325  07FD  120A  118A  2FC0   	ljmp	_main	;jump to C main() function
   326                           
   327                           	psect	bssCOMMON
   328  0070                     __pbssCOMMON:	
   329  0070                     _number:	
   330  0070                     	ds	4
   331  0074                     _slaveOut:	
   332  0074                     	ds	1
   333  0075                     _slaveIn:	
   334  0075                     	ds	1
   335  0076                     _num3:	
   336  0076                     	ds	1
   337  0077                     _num2:	
   338  0077                     	ds	1
   339  0078                     _num1:	
   340  0078                     	ds	1
   341  0079                     _pot1:	
   342  0079                     	ds	1
   343  007A                     _m:	
   344  007A                     	ds	1
   345  007B                     _valana:	
   346  007B                     	ds	1
   347                           
   348                           	psect	bssBANK0
   349  0020                     __pbssBANK0:	
   350  0020                     _buffer:	
   351  0020                     	ds	20
   352                           
   353                           	psect	clrtext
   354  077C                     clear_ram0:	
   355                           ;	Called with FSR containing the base address, and
   356                           ;	W with the last address+1
   357                           
   358  077C  0064               	clrwdt	;clear the watchdog before getting into this loop
   359  077D                     clrloop0:	
   360  077D  0180               	clrf	0	;clear RAM location pointed to by FSR
   361  077E  0A84               	incf	4,f	;increment pointer
   362  077F  0604               	xorwf	4,w	;XOR with final address
   363  0780  1903               	btfsc	3,2	;have we reached the end yet?
   364  0781  3400               	retlw	0	;all done for this memory range, return
   365  0782  0604               	xorwf	4,w	;XOR again to restore value
   366  0783  2F7D               	goto	clrloop0	;do the next byte
   367                           
   368                           	psect	cstackCOMMON
   369  007C                     __pcstackCOMMON:	
   370  007C                     ?_adcInit:	
   371  007C                     ??_adcInit:	
   372                           ; 1 bytes @ 0x0
   373                           
   374  007C                     ?_POT:	
   375                           ; 1 bytes @ 0x0
   376                           
   377  007C                     ??_POT:	
   378                           ; 1 bytes @ 0x0
   379                           
   380  007C                     ?_main:	
   381                           ; 1 bytes @ 0x0
   382                           
   383                           
   384                           ; 1 bytes @ 0x0
   385  007C                     	ds	2
   386  007E                     ??_main:	
   387                           
   388                           	psect	maintext
   389  07C0                     __pmaintext:	
   390                           ; 1 bytes @ 0x2
   391 ;;
   392 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   393 ;;
   394 ;; *************** function _main *****************
   395 ;; Defined at:
   396 ;;		line 30 in file "Laboratorio_4_Slave.c"
   397 ;; Parameters:    Size  Location     Type
   398 ;;		None
   399 ;; Auto vars:     Size  Location     Type
   400 ;;		None
   401 ;; Return value:  Size  Location     Type
   402 ;;                  1    wreg      void 
   403 ;; Registers used:
   404 ;;		wreg, status,2, status,0, pclath, cstack
   405 ;; Tracked objects:
   406 ;;		On entry : B00/0
   407 ;;		On exit  : 0/0
   408 ;;		Unchanged: 0/0
   409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   410 ;;      Params:         0       0       0       0       0
   411 ;;      Locals:         0       0       0       0       0
   412 ;;      Temps:          0       0       0       0       0
   413 ;;      Totals:         0       0       0       0       0
   414 ;;Total ram usage:        0 bytes
   415 ;; Hardware stack levels required when called:    1
   416 ;; This function calls:
   417 ;;		_POT
   418 ;;		_adcInit
   419 ;; This function is called by:
   420 ;;		Startup code after reset
   421 ;; This function uses a non-reentrant model
   422 ;;
   423                           
   424                           
   425                           ;psect for function _main
   426  07C0                     _main:	
   427  07C0                     l768:	
   428                           ;incstack = 0
   429                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   430                           
   431                           
   432                           ;Laboratorio_4_Slave.c: 32:     OSCCONbits.IRCF =0b110;
   433  07C0  1683               	bsf	3,5	;RP0=1, select bank1
   434  07C1  1303               	bcf	3,6	;RP1=0, select bank1
   435  07C2  080F               	movf	15,w	;volatile
   436  07C3  398F               	andlw	-113
   437  07C4  3860               	iorlw	96
   438  07C5  008F               	movwf	15	;volatile
   439  07C6                     l770:	
   440                           
   441                           ;Laboratorio_4_Slave.c: 33:     OSCCONbits.OSTS= 0;
   442  07C6  118F               	bcf	15,3	;volatile
   443  07C7                     l772:	
   444                           
   445                           ;Laboratorio_4_Slave.c: 34:     OSCCONbits.HTS = 0;
   446  07C7  110F               	bcf	15,2	;volatile
   447  07C8                     l774:	
   448                           
   449                           ;Laboratorio_4_Slave.c: 35:     OSCCONbits.LTS = 0;
   450  07C8  108F               	bcf	15,1	;volatile
   451  07C9                     l776:	
   452                           
   453                           ;Laboratorio_4_Slave.c: 36:     OSCCONbits.SCS = 1;
   454  07C9  140F               	bsf	15,0	;volatile
   455  07CA                     l778:	
   456                           
   457                           ;Laboratorio_4_Slave.c: 40:     TRISCbits.TRISC5 = 0;
   458  07CA  1287               	bcf	7,5	;volatile
   459  07CB                     l780:	
   460                           
   461                           ;Laboratorio_4_Slave.c: 41:     TRISCbits.TRISC4 = 1;
   462  07CB  1607               	bsf	7,4	;volatile
   463  07CC                     l782:	
   464                           
   465                           ;Laboratorio_4_Slave.c: 42:     TRISCbits.TRISC3 = 1;
   466  07CC  1587               	bsf	7,3	;volatile
   467  07CD                     l784:	
   468                           
   469                           ;Laboratorio_4_Slave.c: 43:     TRISAbits.TRISA5 = 1;
   470  07CD  1685               	bsf	5,5	;volatile
   471  07CE                     l786:	
   472                           
   473                           ;Laboratorio_4_Slave.c: 45:     TRISA = 0b00000111;
   474  07CE  3007               	movlw	7
   475  07CF  0085               	movwf	5	;volatile
   476  07D0                     l788:	
   477                           
   478                           ;Laboratorio_4_Slave.c: 46:     TRISB = 0;
   479  07D0  0186               	clrf	6	;volatile
   480  07D1                     l790:	
   481                           
   482                           ;Laboratorio_4_Slave.c: 47:     PORTA = 0b00000000;
   483  07D1  1283               	bcf	3,5	;RP0=0, select bank0
   484  07D2  1303               	bcf	3,6	;RP1=0, select bank0
   485  07D3  0185               	clrf	5	;volatile
   486  07D4                     l792:	
   487                           
   488                           ;Laboratorio_4_Slave.c: 48:     PORTB = 0b00000000;
   489  07D4  0186               	clrf	6	;volatile
   490  07D5                     l794:	
   491                           
   492                           ;Laboratorio_4_Slave.c: 49:     PORTC = 0b00000000;
   493  07D5  0187               	clrf	7	;volatile
   494  07D6                     l796:	
   495                           
   496                           ;Laboratorio_4_Slave.c: 50:     PORTD = 0b00000000;
   497  07D6  0188               	clrf	8	;volatile
   498  07D7                     l798:	
   499                           
   500                           ;Laboratorio_4_Slave.c: 51:     PORTE = 0b0000;
   501  07D7  0189               	clrf	9	;volatile
   502  07D8                     l800:	
   503                           
   504                           ;Laboratorio_4_Slave.c: 53:     ANSEL = 0b01000111;
   505  07D8  3047               	movlw	71
   506  07D9  1683               	bsf	3,5	;RP0=1, select bank3
   507  07DA  1703               	bsf	3,6	;RP1=1, select bank3
   508  07DB  0088               	movwf	8	;volatile
   509  07DC                     l802:	
   510                           
   511                           ;Laboratorio_4_Slave.c: 54:     ANSELH = 0b00000000;
   512  07DC  0189               	clrf	9	;volatile
   513  07DD                     l804:	
   514                           
   515                           ;Laboratorio_4_Slave.c: 57:     adcInit();
   516  07DD  120A  118A  2784  120A  118A  	fcall	_adcInit
   517  07E2                     l806:	
   518                           
   519                           ;Laboratorio_4_Slave.c: 62:         POT();
   520  07E2  120A  118A  2796  120A  118A  	fcall	_POT
   521  07E7  2FE2               	goto	l806
   522  07E8  120A  118A  2800   	ljmp	start
   523  07EB                     __end_of_main:	
   524                           
   525                           	psect	text1
   526  0784                     __ptext1:	
   527 ;; *************** function _adcInit *****************
   528 ;; Defined at:
   529 ;;		line 15 in file "Labor4Slave.c"
   530 ;; Parameters:    Size  Location     Type
   531 ;;		None
   532 ;; Auto vars:     Size  Location     Type
   533 ;;		None
   534 ;; Return value:  Size  Location     Type
   535 ;;                  1    wreg      void 
   536 ;; Registers used:
   537 ;;		wreg, status,2, status,0
   538 ;; Tracked objects:
   539 ;;		On entry : 0/0
   540 ;;		On exit  : 0/0
   541 ;;		Unchanged: 0/0
   542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   543 ;;      Params:         0       0       0       0       0
   544 ;;      Locals:         0       0       0       0       0
   545 ;;      Temps:          0       0       0       0       0
   546 ;;      Totals:         0       0       0       0       0
   547 ;;Total ram usage:        0 bytes
   548 ;; Hardware stack levels used:    1
   549 ;; This function calls:
   550 ;;		Nothing
   551 ;; This function is called by:
   552 ;;		_main
   553 ;; This function uses a non-reentrant model
   554 ;;
   555                           
   556                           
   557                           ;psect for function _adcInit
   558  0784                     _adcInit:	
   559  0784                     l734:	
   560                           ;incstack = 0
   561                           ; Regs used in _adcInit: [wreg+status,2+status,0]
   562                           
   563                           
   564                           ;Labor4Slave.c: 16:     ANSEL = 0b01000111;
   565  0784  3047               	movlw	71
   566  0785  1683               	bsf	3,5	;RP0=1, select bank3
   567  0786  1703               	bsf	3,6	;RP1=1, select bank3
   568  0787  0088               	movwf	8	;volatile
   569  0788                     l736:	
   570                           
   571                           ;Labor4Slave.c: 17:     ANSELH = 0b00000000;
   572  0788  0189               	clrf	9	;volatile
   573  0789                     l738:	
   574                           
   575                           ;Labor4Slave.c: 18:     ADCON1bits.ADFM =0;
   576  0789  1683               	bsf	3,5	;RP0=1, select bank1
   577  078A  1303               	bcf	3,6	;RP1=0, select bank1
   578  078B  139F               	bcf	31,7	;volatile
   579  078C                     l740:	
   580                           
   581                           ;Labor4Slave.c: 19:     ADCON1bits.VCFG0 =0;
   582  078C  121F               	bcf	31,4	;volatile
   583  078D                     l742:	
   584                           
   585                           ;Labor4Slave.c: 20:     ADCON1bits.VCFG1 =0;
   586  078D  129F               	bcf	31,5	;volatile
   587  078E                     l744:	
   588                           
   589                           ;Labor4Slave.c: 21:     ADCON0bits.ADCS0 =1;
   590  078E  1283               	bcf	3,5	;RP0=0, select bank0
   591  078F  1303               	bcf	3,6	;RP1=0, select bank0
   592  0790  171F               	bsf	31,6	;volatile
   593  0791                     l746:	
   594                           
   595                           ;Labor4Slave.c: 22:     ADCON0bits.ADCS1 =0;
   596  0791  139F               	bcf	31,7	;volatile
   597  0792                     l748:	
   598                           
   599                           ;Labor4Slave.c: 23:     ADCON0bits.CHS = 0;
   600  0792  30C3               	movlw	-61
   601  0793  059F               	andwf	31,f	;volatile
   602  0794                     l750:	
   603                           
   604                           ;Labor4Slave.c: 24:     ADCON0bits.ADON = 1;
   605  0794  141F               	bsf	31,0	;volatile
   606  0795                     l109:	
   607  0795  0008               	return
   608  0796                     __end_of_adcInit:	
   609                           
   610                           	psect	text2
   611  0796                     __ptext2:	
   612 ;; *************** function _POT *****************
   613 ;; Defined at:
   614 ;;		line 27 in file "Labor4Slave.c"
   615 ;; Parameters:    Size  Location     Type
   616 ;;		None
   617 ;; Auto vars:     Size  Location     Type
   618 ;;		None
   619 ;; Return value:  Size  Location     Type
   620 ;;                  1    wreg      void 
   621 ;; Registers used:
   622 ;;		wreg, status,2, status,0
   623 ;; Tracked objects:
   624 ;;		On entry : 0/0
   625 ;;		On exit  : 0/0
   626 ;;		Unchanged: 0/0
   627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   628 ;;      Params:         0       0       0       0       0
   629 ;;      Locals:         0       0       0       0       0
   630 ;;      Temps:          2       0       0       0       0
   631 ;;      Totals:         2       0       0       0       0
   632 ;;Total ram usage:        2 bytes
   633 ;; Hardware stack levels used:    1
   634 ;; This function calls:
   635 ;;		Nothing
   636 ;; This function is called by:
   637 ;;		_main
   638 ;; This function uses a non-reentrant model
   639 ;;
   640                           
   641                           
   642                           ;psect for function _POT
   643  0796                     _POT:	
   644  0796                     l752:	
   645                           ;incstack = 0
   646                           ; Regs used in _POT: [wreg+status,2+status,0]
   647                           
   648                           
   649                           ;Labor4Slave.c: 28:     _delay((unsigned long)((10)*(4000000/4000.0)));
   650  0796  300D               	movlw	13
   651  0797  00FD               	movwf	??_POT+1
   652  0798  30FB               	movlw	251
   653  0799  00FC               	movwf	??_POT
   654  079A                     u57:	
   655  079A  0BFC               	decfsz	??_POT,f
   656  079B  2F9A               	goto	u57
   657  079C  0BFD               	decfsz	??_POT+1,f
   658  079D  2F9A               	goto	u57
   659  079E  2F9F               	nop2
   660  079F                     l754:	
   661                           
   662                           ;Labor4Slave.c: 29:     ADCON0bits.CHS = 1;
   663  079F  1283               	bcf	3,5	;RP0=0, select bank0
   664  07A0  1303               	bcf	3,6	;RP1=0, select bank0
   665  07A1  081F               	movf	31,w	;volatile
   666  07A2  39C3               	andlw	-61
   667  07A3  3804               	iorlw	4
   668  07A4  009F               	movwf	31	;volatile
   669  07A5                     l756:	
   670                           
   671                           ;Labor4Slave.c: 30:     ADCON0bits.ADON =1;
   672  07A5  141F               	bsf	31,0	;volatile
   673  07A6                     l758:	
   674                           
   675                           ;Labor4Slave.c: 31:     _delay((unsigned long)((1)*(4000000/4000.0)));
   676  07A6  30C7               	movlw	199
   677  07A7  00FC               	movwf	??_POT
   678  07A8                     u67:	
   679  07A8  2FA9               	nop2
   680  07A9  0BFC               	decfsz	??_POT,f
   681  07AA  2FA8               	goto	u67
   682  07AB  2FAC               	nop2
   683  07AC  2FAD               	nop2
   684  07AD                     l760:	
   685                           
   686                           ;Labor4Slave.c: 32:     ADCON0bits.GO_DONE=1;
   687  07AD  1283               	bcf	3,5	;RP0=0, select bank0
   688  07AE  1303               	bcf	3,6	;RP1=0, select bank0
   689  07AF  149F               	bsf	31,1	;volatile
   690  07B0                     l112:	
   691                           ;Labor4Slave.c: 33:     while(ADCON0bits.GO_DONE);
   692                           
   693  07B0  189F               	btfsc	31,1	;volatile
   694  07B1  2FB3               	goto	u11
   695  07B2  2FB4               	goto	u10
   696  07B3                     u11:	
   697  07B3  2FB0               	goto	l112
   698  07B4                     u10:	
   699  07B4                     l762:	
   700                           
   701                           ;Labor4Slave.c: 34:         PORTB=ADRESH;
   702  07B4  081E               	movf	30,w	;volatile
   703  07B5  0086               	movwf	6	;volatile
   704                           
   705                           ;Labor4Slave.c: 37:         _delay((unsigned long)((5)*(4000000/4000.0)));
   706  07B6  3007               	movlw	7
   707  07B7  00FD               	movwf	??_POT+1
   708  07B8  307D               	movlw	125
   709  07B9  00FC               	movwf	??_POT
   710  07BA                     u77:	
   711  07BA  0BFC               	decfsz	??_POT,f
   712  07BB  2FBA               	goto	u77
   713  07BC  0BFD               	decfsz	??_POT+1,f
   714  07BD  2FBA               	goto	u77
   715  07BE                     l764:	
   716                           
   717                           ;Labor4Slave.c: 38:         valana =0;
   718  07BE  01FB               	clrf	_valana
   719  07BF                     l115:	
   720  07BF  0008               	return
   721  07C0                     __end_of_POT:	
   722  007E                     btemp	set	126	;btemp
   723  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         32
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2      14
    BANK0            80      0      20
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_POT

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                                _POT
                            _adcInit
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POT                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _POT
   _adcInit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      22       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0      14       5       25.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      22      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Feb 19 00:45:04 2020

                       _m 007A               __CFG_CP$OFF 0000               _SSPSTATbits 0094  
                      u10 07B4                        u11 07B3                        u57 079A  
                      u67 07A8                        u77 07BA                        fsr 0004  
                     l112 07B0                       l115 07BF                       l109 0795  
                     l800 07D8                       l802 07DC                       l740 078C  
                     l804 07DD                       l750 0794                       l742 078D  
                     l734 0784                       l806 07E2                       l760 07AD  
                     l752 0796                       l744 078E                       l736 0788  
                     l762 07B4                       l754 079F                       l746 0791  
                     l738 0789                       l770 07C6                       l764 07BE  
                     l756 07A5                       l748 0792                       l780 07CB  
                     l772 07C7                       l758 07A6                       l790 07D1  
                     l782 07CC                       l774 07C8                       l792 07D4  
                     l784 07CD                       l776 07C9                       l768 07C0  
                     l794 07D5                       l786 07CE                       l778 07CA  
                     l796 07D6                       l788 07D0                       l798 07D7  
            __CFG_CPD$OFF 0000                       _POT 0796                       indf 0000  
            __CFG_LVP$OFF 0000                      ?_POT 007C              __CFG_WRT$OFF 0000  
                    _main 07C0                      _num1 0078                      _num2 0077  
                    _num3 0076                      _pot1 0079                      btemp 007E  
                    start 0000             __CFG_IESO$OFF 0000                     ??_POT 007C  
                   ?_main 007C           __end_of_adcInit 0796             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188                     _PORTA 0005                     _PORTB 0006  
                   _PORTC 0007                     _PORTD 0008                     _PORTE 0009  
                   _TRISA 0085                     _TRISB 0086             __CFG_PWRTE$ON 0000  
          __CFG_FCMEN$OFF 0000            __CFG_BOREN$OFF 0000                     status 0003  
                   wtemp0 007E            __CFG_MCLRE$OFF 0000           __initialization 07EB  
            __end_of_main 07EB                    ??_main 007E                    _ADRESH 001E  
                  _ANSELH 0189                    _SSPBUF 0013                 ??_adcInit 007C  
                  _buffer 0020                    _valana 007B                    _number 0070  
 __end_of__initialization 07FC            __pcstackCOMMON 007C                __pbssBANK0 0020  
              __pmaintext 07C0                   _adcInit 0784                   __ptext1 0784  
                 __ptext2 0796              __size_of_POT 002A                   _slaveIn 0075  
                 clrloop0 077D      end_of_initialization 07FC                 _PORTAbits 0005  
               _TRISAbits 0085                 _TRISCbits 0087       start_initialization 07EB  
             __end_of_POT 07C0  __CFG_FOSC$INTRC_NOCLKOUT 0000               __pbssCOMMON 0070  
               ___latbits 0002                  ?_adcInit 007C                 clear_ram0 077C  
              _ADCON0bits 001F                _ADCON1bits 009F          __size_of_adcInit 0012  
       __CFG_BOR4V$BOR40V 0000             __size_of_main 002B                  _slaveOut 0074  
              _OSCCONbits 008F                _SSPCONbits 0014  
