

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Feb 20 01:12:27 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.10
    19                           ; Generated 31/07/2019 GMT
    20                           ; 
    21                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  0000                     	;# 
   209  0001                     	;# 
   210  0002                     	;# 
   211  0003                     	;# 
   212  0004                     	;# 
   213  0005                     	;# 
   214  0006                     	;# 
   215  0007                     	;# 
   216  0008                     	;# 
   217  0009                     	;# 
   218  000A                     	;# 
   219  000B                     	;# 
   220  000C                     	;# 
   221  000D                     	;# 
   222  000E                     	;# 
   223  000E                     	;# 
   224  000F                     	;# 
   225  0010                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0013                     	;# 
   229  0014                     	;# 
   230  0015                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0017                     	;# 
   234  0018                     	;# 
   235  0019                     	;# 
   236  001A                     	;# 
   237  001B                     	;# 
   238  001B                     	;# 
   239  001C                     	;# 
   240  001D                     	;# 
   241  001E                     	;# 
   242  001F                     	;# 
   243  0081                     	;# 
   244  0085                     	;# 
   245  0086                     	;# 
   246  0087                     	;# 
   247  0088                     	;# 
   248  0089                     	;# 
   249  008C                     	;# 
   250  008D                     	;# 
   251  008E                     	;# 
   252  008F                     	;# 
   253  0090                     	;# 
   254  0091                     	;# 
   255  0092                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0094                     	;# 
   260  0095                     	;# 
   261  0096                     	;# 
   262  0097                     	;# 
   263  0098                     	;# 
   264  0099                     	;# 
   265  009A                     	;# 
   266  009B                     	;# 
   267  009C                     	;# 
   268  009D                     	;# 
   269  009E                     	;# 
   270  009F                     	;# 
   271  0105                     	;# 
   272  0107                     	;# 
   273  0108                     	;# 
   274  0109                     	;# 
   275  010C                     	;# 
   276  010C                     	;# 
   277  010D                     	;# 
   278  010E                     	;# 
   279  010F                     	;# 
   280  0185                     	;# 
   281  0187                     	;# 
   282  0188                     	;# 
   283  0189                     	;# 
   284  018C                     	;# 
   285  018D                     	;# 
   286  0013                     _SSPBUF	set	19
   287  0014                     _SSPCONbits	set	20
   288  001E                     _ADRESH	set	30
   289  001F                     _ADCON0bits	set	31
   290  0009                     _PORTE	set	9
   291  0008                     _PORTD	set	8
   292  0007                     _PORTC	set	7
   293  0006                     _PORTB	set	6
   294  0005                     _PORTA	set	5
   295  0094                     _SSPSTATbits	set	148
   296  009F                     _ADCON1bits	set	159
   297  0089                     _TRISE	set	137
   298  0086                     _TRISB	set	134
   299  0085                     _TRISA	set	133
   300  0087                     _TRISCbits	set	135
   301  008F                     _OSCCONbits	set	143
   302  0189                     _ANSELH	set	393
   303  0188                     _ANSEL	set	392
   304                           
   305                           ; #config settings
   306  0000                     
   307                           	psect	cinit
   308  07EB                     start_initialization:	
   309  07EB                     __initialization:	
   310                           
   311                           ; Clear objects allocated to COMMON
   312  07EB  3070               	movlw	low __pbssCOMMON
   313  07EC  0084               	movwf	4
   314  07ED  307A               	movlw	low (__pbssCOMMON+10)
   315  07EE  120A  118A  26EC  120A  118A  	fcall	clear_ram0
   316                           
   317                           ; Clear objects allocated to BANK0
   318  07F3  1383               	bcf	3,7	;select IRP bank0
   319  07F4  3020               	movlw	low __pbssBANK0
   320  07F5  0084               	movwf	4
   321  07F6  3038               	movlw	low (__pbssBANK0+24)
   322  07F7  120A  118A  26EC  120A  118A  	fcall	clear_ram0
   323  07FC                     end_of_initialization:	
   324                           ;End of C runtime variable initialization code
   325                           
   326  07FC                     __end_of__initialization:	
   327  07FC  0183               	clrf	3
   328  07FD  120A  118A  2F87   	ljmp	_main	;jump to C main() function
   329                           
   330                           	psect	bssCOMMON
   331  0070                     __pbssCOMMON:	
   332  0070                     _bande:	
   333  0070                     	ds	1
   334  0071                     _variableValeVerga:	
   335  0071                     	ds	1
   336  0072                     _slaveOut:	
   337  0072                     	ds	1
   338  0073                     _slaveIn:	
   339  0073                     	ds	1
   340  0074                     _num3:	
   341  0074                     	ds	1
   342  0075                     _num2:	
   343  0075                     	ds	1
   344  0076                     _num1:	
   345  0076                     	ds	1
   346  0077                     _pot1:	
   347  0077                     	ds	1
   348  0078                     _m:	
   349  0078                     	ds	1
   350  0079                     _valana:	
   351  0079                     	ds	1
   352                           
   353                           	psect	bssBANK0
   354  0020                     __pbssBANK0:	
   355  0020                     _number:	
   356  0020                     	ds	4
   357  0024                     _buffer:	
   358  0024                     	ds	20
   359                           
   360                           	psect	clrtext
   361  06EC                     clear_ram0:	
   362                           ;	Called with FSR containing the base address, and
   363                           ;	W with the last address+1
   364                           
   365  06EC  0064               	clrwdt	;clear the watchdog before getting into this loop
   366  06ED                     clrloop0:	
   367  06ED  0180               	clrf	0	;clear RAM location pointed to by FSR
   368  06EE  0A84               	incf	4,f	;increment pointer
   369  06EF  0604               	xorwf	4,w	;XOR with final address
   370  06F0  1903               	btfsc	3,2	;have we reached the end yet?
   371  06F1  3400               	retlw	0	;all done for this memory range, return
   372  06F2  0604               	xorwf	4,w	;XOR again to restore value
   373  06F3  2EED               	goto	clrloop0	;do the next byte
   374                           
   375                           	psect	cstackCOMMON
   376  007A                     __pcstackCOMMON:	
   377  007A                     ?_spiSlaveInit:	
   378  007A                     ??_spiSlaveInit:	
   379                           ; 1 bytes @ 0x0
   380                           
   381  007A                     ?_adcInit:	
   382                           ; 1 bytes @ 0x0
   383                           
   384  007A                     ??_adcInit:	
   385                           ; 1 bytes @ 0x0
   386                           
   387  007A                     ?_spiFunctionReadMaster:	
   388                           ; 1 bytes @ 0x0
   389                           
   390  007A                     ??_spiFunctionReadMaster:	
   391                           ; 1 bytes @ 0x0
   392                           
   393  007A                     ?_spiFunctionWriteMaster:	
   394                           ; 1 bytes @ 0x0
   395                           
   396  007A                     ?_POT:	
   397                           ; 1 bytes @ 0x0
   398                           
   399  007A                     ??_POT:	
   400                           ; 1 bytes @ 0x0
   401                           
   402  007A                     ?_spiWrite:	
   403                           ; 1 bytes @ 0x0
   404                           
   405  007A                     ??_spiWrite:	
   406                           ; 1 bytes @ 0x0
   407                           
   408  007A                     ?_main:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  007A                     spiWrite@dat:	
   412                           ; 1 bytes @ 0x0
   413                           
   414                           
   415                           ; 1 bytes @ 0x0
   416  007A                     	ds	1
   417  007B                     ??_spiFunctionWriteMaster:	
   418                           
   419                           ; 1 bytes @ 0x1
   420  007B                     	ds	1
   421  007C                     POT@m:	
   422                           
   423                           ; 1 bytes @ 0x2
   424  007C                     	ds	1
   425  007D                     spiFunctionWriteMaster@bande:	
   426                           
   427                           ; 1 bytes @ 0x3
   428  007D                     	ds	1
   429  007E                     ??_main:	
   430                           
   431                           	psect	maintext
   432  0787                     __pmaintext:	
   433                           ; 1 bytes @ 0x4
   434 ;;
   435 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   436 ;;
   437 ;; *************** function _main *****************
   438 ;; Defined at:
   439 ;;		line 30 in file "Laboratorio_4_Slave.c"
   440 ;; Parameters:    Size  Location     Type
   441 ;;		None
   442 ;; Auto vars:     Size  Location     Type
   443 ;;		None
   444 ;; Return value:  Size  Location     Type
   445 ;;                  1    wreg      void 
   446 ;; Registers used:
   447 ;;		wreg, status,2, status,0, pclath, cstack
   448 ;; Tracked objects:
   449 ;;		On entry : B00/0
   450 ;;		On exit  : 0/0
   451 ;;		Unchanged: 0/0
   452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   453 ;;      Params:         0       0       0       0       0
   454 ;;      Locals:         0       0       0       0       0
   455 ;;      Temps:          0       0       0       0       0
   456 ;;      Totals:         0       0       0       0       0
   457 ;;Total ram usage:        0 bytes
   458 ;; Hardware stack levels required when called:    2
   459 ;; This function calls:
   460 ;;		_POT
   461 ;;		_adcInit
   462 ;;		_spiFunctionReadMaster
   463 ;;		_spiFunctionWriteMaster
   464 ;;		_spiSlaveInit
   465 ;; This function is called by:
   466 ;;		Startup code after reset
   467 ;; This function uses a non-reentrant model
   468 ;;
   469                           
   470                           
   471                           ;psect for function _main
   472  0787                     _main:	
   473  0787                     l796:	
   474                           ;incstack = 0
   475                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   476                           
   477                           
   478                           ;Laboratorio_4_Slave.c: 32:     OSCCONbits.IRCF =0b110;
   479  0787  1683               	bsf	3,5	;RP0=1, select bank1
   480  0788  1303               	bcf	3,6	;RP1=0, select bank1
   481  0789  080F               	movf	15,w	;volatile
   482  078A  398F               	andlw	-113
   483  078B  3860               	iorlw	96
   484  078C  008F               	movwf	15	;volatile
   485  078D                     l798:	
   486                           
   487                           ;Laboratorio_4_Slave.c: 33:     OSCCONbits.OSTS= 0;
   488  078D  118F               	bcf	15,3	;volatile
   489  078E                     l800:	
   490                           
   491                           ;Laboratorio_4_Slave.c: 34:     OSCCONbits.HTS = 0;
   492  078E  110F               	bcf	15,2	;volatile
   493  078F                     l802:	
   494                           
   495                           ;Laboratorio_4_Slave.c: 35:     OSCCONbits.LTS = 0;
   496  078F  108F               	bcf	15,1	;volatile
   497  0790                     l804:	
   498                           
   499                           ;Laboratorio_4_Slave.c: 36:     OSCCONbits.SCS = 1;
   500  0790  140F               	bsf	15,0	;volatile
   501  0791                     l806:	
   502                           
   503                           ;Laboratorio_4_Slave.c: 40:     TRISCbits.TRISC5 = 0;
   504  0791  1287               	bcf	7,5	;volatile
   505  0792                     l808:	
   506                           
   507                           ;Laboratorio_4_Slave.c: 41:     TRISCbits.TRISC4 = 1;
   508  0792  1607               	bsf	7,4	;volatile
   509  0793                     l810:	
   510                           
   511                           ;Laboratorio_4_Slave.c: 42:     TRISCbits.TRISC3 = 1;
   512  0793  1587               	bsf	7,3	;volatile
   513  0794                     l812:	
   514                           
   515                           ;Laboratorio_4_Slave.c: 45:     TRISA = 0b00000111;
   516  0794  3007               	movlw	7
   517  0795  0085               	movwf	5	;volatile
   518  0796                     l814:	
   519                           
   520                           ;Laboratorio_4_Slave.c: 46:     TRISB = 0;
   521  0796  0186               	clrf	6	;volatile
   522  0797                     l816:	
   523                           
   524                           ;Laboratorio_4_Slave.c: 47:     TRISE = 0b0100;
   525  0797  3004               	movlw	4
   526  0798  0089               	movwf	9	;volatile
   527  0799                     l818:	
   528                           
   529                           ;Laboratorio_4_Slave.c: 48:     PORTA = 0b00000000;
   530  0799  1283               	bcf	3,5	;RP0=0, select bank0
   531  079A  1303               	bcf	3,6	;RP1=0, select bank0
   532  079B  0185               	clrf	5	;volatile
   533  079C                     l820:	
   534                           
   535                           ;Laboratorio_4_Slave.c: 49:     PORTB = 0b00000000;
   536  079C  0186               	clrf	6	;volatile
   537  079D                     l822:	
   538                           
   539                           ;Laboratorio_4_Slave.c: 50:     PORTC = 0b00000000;
   540  079D  0187               	clrf	7	;volatile
   541  079E                     l824:	
   542                           
   543                           ;Laboratorio_4_Slave.c: 51:     PORTD = 0b00000000;
   544  079E  0188               	clrf	8	;volatile
   545  079F                     l826:	
   546                           
   547                           ;Laboratorio_4_Slave.c: 52:     PORTE = 0b0000;
   548  079F  0189               	clrf	9	;volatile
   549  07A0                     l828:	
   550                           
   551                           ;Laboratorio_4_Slave.c: 54:     ANSEL = 0b11000111;
   552  07A0  30C7               	movlw	199
   553  07A1  1683               	bsf	3,5	;RP0=1, select bank3
   554  07A2  1703               	bsf	3,6	;RP1=1, select bank3
   555  07A3  0088               	movwf	8	;volatile
   556  07A4                     l830:	
   557                           
   558                           ;Laboratorio_4_Slave.c: 55:     ANSELH = 0b00000000;
   559  07A4  0189               	clrf	9	;volatile
   560  07A5                     l832:	
   561                           
   562                           ;Laboratorio_4_Slave.c: 57:     spiSlaveInit();
   563  07A5  120A  118A  2706  120A  118A  	fcall	_spiSlaveInit
   564  07AA                     l834:	
   565                           
   566                           ;Laboratorio_4_Slave.c: 58:     adcInit();
   567  07AA  120A  118A  26F4  120A  118A  	fcall	_adcInit
   568  07AF                     l836:	
   569                           
   570                           ;Laboratorio_4_Slave.c: 66:         spiFunctionReadMaster();
   571  07AF  120A  118A  2733  120A  118A  	fcall	_spiFunctionReadMaster
   572  07B4                     l838:	
   573                           
   574                           ;Laboratorio_4_Slave.c: 71:         spiFunctionWriteMaster(1);
   575  07B4  3001               	movlw	1
   576  07B5  120A  118A  271B  120A  118A  	fcall	_spiFunctionWriteMaster
   577  07BA                     l840:	
   578                           
   579                           ;Laboratorio_4_Slave.c: 72:         POT(1);
   580  07BA  3001               	movlw	1
   581  07BB  120A  118A  2755  120A  118A  	fcall	_POT
   582  07C0                     l842:	
   583                           
   584                           ;Laboratorio_4_Slave.c: 73:         spiFunctionReadMaster();
   585  07C0  120A  118A  2733  120A  118A  	fcall	_spiFunctionReadMaster
   586  07C5                     l844:	
   587                           
   588                           ;Laboratorio_4_Slave.c: 74:         spiFunctionWriteMaster(slaveOut);
   589  07C5  0872               	movf	_slaveOut,w
   590  07C6  120A  118A  271B  120A  118A  	fcall	_spiFunctionWriteMaster
   591  07CB                     l846:	
   592                           
   593                           ;Laboratorio_4_Slave.c: 76:         spiFunctionReadMaster();
   594  07CB  120A  118A  2733  120A  118A  	fcall	_spiFunctionReadMaster
   595  07D0                     l848:	
   596                           
   597                           ;Laboratorio_4_Slave.c: 81:         spiFunctionWriteMaster(2);
   598  07D0  3002               	movlw	2
   599  07D1  120A  118A  271B  120A  118A  	fcall	_spiFunctionWriteMaster
   600  07D6                     l850:	
   601                           
   602                           ;Laboratorio_4_Slave.c: 82:         POT(7);
   603  07D6  3007               	movlw	7
   604  07D7  120A  118A  2755  120A  118A  	fcall	_POT
   605  07DC                     l852:	
   606                           
   607                           ;Laboratorio_4_Slave.c: 83:         spiFunctionReadMaster();
   608  07DC  120A  118A  2733  120A  118A  	fcall	_spiFunctionReadMaster
   609  07E1                     l854:	
   610                           
   611                           ;Laboratorio_4_Slave.c: 84:         spiFunctionWriteMaster(slaveOut);
   612  07E1  0872               	movf	_slaveOut,w
   613  07E2  120A  118A  271B  120A  118A  	fcall	_spiFunctionWriteMaster
   614  07E7  2FAF               	goto	l836
   615  07E8  120A  118A  2800   	ljmp	start
   616  07EB                     __end_of_main:	
   617                           
   618                           	psect	text1
   619  0706                     __ptext1:	
   620 ;; *************** function _spiSlaveInit *****************
   621 ;; Defined at:
   622 ;;		line 58 in file "Labor4Slave.c"
   623 ;; Parameters:    Size  Location     Type
   624 ;;		None
   625 ;; Auto vars:     Size  Location     Type
   626 ;;		None
   627 ;; Return value:  Size  Location     Type
   628 ;;                  1    wreg      void 
   629 ;; Registers used:
   630 ;;		wreg, status,2, status,0
   631 ;; Tracked objects:
   632 ;;		On entry : 0/0
   633 ;;		On exit  : 0/0
   634 ;;		Unchanged: 0/0
   635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   636 ;;      Params:         0       0       0       0       0
   637 ;;      Locals:         0       0       0       0       0
   638 ;;      Temps:          0       0       0       0       0
   639 ;;      Totals:         0       0       0       0       0
   640 ;;Total ram usage:        0 bytes
   641 ;; Hardware stack levels used:    1
   642 ;; This function calls:
   643 ;;		Nothing
   644 ;; This function is called by:
   645 ;;		_main
   646 ;; This function uses a non-reentrant model
   647 ;;
   648                           
   649                           
   650                           ;psect for function _spiSlaveInit
   651  0706                     _spiSlaveInit:	
   652  0706                     l742:	
   653                           ;incstack = 0
   654                           ; Regs used in _spiSlaveInit: [wreg+status,2+status,0]
   655                           
   656                           
   657                           ;Labor4Slave.c: 59:     SSPSTATbits.SMP = 0;
   658  0706  1683               	bsf	3,5	;RP0=1, select bank1
   659  0707  1303               	bcf	3,6	;RP1=0, select bank1
   660  0708  1394               	bcf	20,7	;volatile
   661                           
   662                           ;Labor4Slave.c: 60:     SSPCONbits.CKP = 1;
   663  0709  1283               	bcf	3,5	;RP0=0, select bank0
   664  070A  1303               	bcf	3,6	;RP1=0, select bank0
   665  070B  1614               	bsf	20,4	;volatile
   666                           
   667                           ;Labor4Slave.c: 61:     SSPSTATbits.CKE = 0;
   668  070C  1683               	bsf	3,5	;RP0=1, select bank1
   669  070D  1303               	bcf	3,6	;RP1=0, select bank1
   670  070E  1314               	bcf	20,6	;volatile
   671  070F                     l744:	
   672                           
   673                           ;Labor4Slave.c: 62:     SSPCONbits.SSPM = 0b0101;
   674  070F  1283               	bcf	3,5	;RP0=0, select bank0
   675  0710  1303               	bcf	3,6	;RP1=0, select bank0
   676  0711  0814               	movf	20,w	;volatile
   677  0712  39F0               	andlw	-16
   678  0713  3805               	iorlw	5
   679  0714  0094               	movwf	20	;volatile
   680  0715                     l746:	
   681                           
   682                           ;Labor4Slave.c: 63:     SSPCONbits.SSPEN = 1;
   683  0715  1694               	bsf	20,5	;volatile
   684  0716                     l748:	
   685                           
   686                           ;Labor4Slave.c: 65:     TRISCbits.TRISC5 = 0;
   687  0716  1683               	bsf	3,5	;RP0=1, select bank1
   688  0717  1303               	bcf	3,6	;RP1=0, select bank1
   689  0718  1287               	bcf	7,5	;volatile
   690  0719                     l750:	
   691                           
   692                           ;Labor4Slave.c: 66:     TRISCbits.TRISC3 = 1;
   693  0719  1587               	bsf	7,3	;volatile
   694  071A                     l124:	
   695  071A  0008               	return
   696  071B                     __end_of_spiSlaveInit:	
   697                           
   698                           	psect	text2
   699  071B                     __ptext2:	
   700 ;; *************** function _spiFunctionWriteMaster *****************
   701 ;; Defined at:
   702 ;;		line 85 in file "Labor4Slave.c"
   703 ;; Parameters:    Size  Location     Type
   704 ;;  bande           1    wreg     unsigned char 
   705 ;; Auto vars:     Size  Location     Type
   706 ;;  bande           1    3[COMMON] unsigned char 
   707 ;; Return value:  Size  Location     Type
   708 ;;                  1    wreg      void 
   709 ;; Registers used:
   710 ;;		wreg, status,2, status,0, pclath, cstack
   711 ;; Tracked objects:
   712 ;;		On entry : 0/0
   713 ;;		On exit  : 0/0
   714 ;;		Unchanged: 0/0
   715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   716 ;;      Params:         0       0       0       0       0
   717 ;;      Locals:         1       0       0       0       0
   718 ;;      Temps:          2       0       0       0       0
   719 ;;      Totals:         3       0       0       0       0
   720 ;;Total ram usage:        3 bytes
   721 ;; Hardware stack levels used:    1
   722 ;; Hardware stack levels required when called:    1
   723 ;; This function calls:
   724 ;;		_spiWrite
   725 ;; This function is called by:
   726 ;;		_main
   727 ;; This function uses a non-reentrant model
   728 ;;
   729                           
   730                           
   731                           ;psect for function _spiFunctionWriteMaster
   732  071B                     _spiFunctionWriteMaster:	
   733                           
   734                           ;incstack = 0
   735                           ; Regs used in _spiFunctionWriteMaster: [wreg+status,2+status,0+pclath+cstack]
   736                           ;spiFunctionWriteMaster@bande stored from wreg
   737  071B  00FD               	movwf	spiFunctionWriteMaster@bande
   738  071C                     l774:	
   739                           
   740                           ;Labor4Slave.c: 86:     _delay((unsigned long)((5)*(4000000/4000.0)));
   741  071C  3007               	movlw	7
   742  071D  00FC               	movwf	??_spiFunctionWriteMaster+1
   743  071E  307D               	movlw	125
   744  071F  00FB               	movwf	??_spiFunctionWriteMaster
   745  0720                     u47:	
   746  0720  0BFB               	decfsz	??_spiFunctionWriteMaster,f
   747  0721  2F20               	goto	u47
   748  0722  0BFC               	decfsz	??_spiFunctionWriteMaster+1,f
   749  0723  2F20               	goto	u47
   750  0724                     l776:	
   751                           
   752                           ;Labor4Slave.c: 87:     spiWrite(bande);
   753  0724  087D               	movf	spiFunctionWriteMaster@bande,w
   754  0725  120A  118A  26E6  120A  118A  	fcall	_spiWrite
   755  072A                     l778:	
   756                           
   757                           ;Labor4Slave.c: 89:     _delay((unsigned long)((5)*(4000000/4000.0)));
   758  072A  3007               	movlw	7
   759  072B  00FC               	movwf	??_spiFunctionWriteMaster+1
   760  072C  307D               	movlw	125
   761  072D  00FB               	movwf	??_spiFunctionWriteMaster
   762  072E                     u57:	
   763  072E  0BFB               	decfsz	??_spiFunctionWriteMaster,f
   764  072F  2F2E               	goto	u57
   765  0730  0BFC               	decfsz	??_spiFunctionWriteMaster+1,f
   766  0731  2F2E               	goto	u57
   767  0732                     l134:	
   768  0732  0008               	return
   769  0733                     __end_of_spiFunctionWriteMaster:	
   770                           
   771                           	psect	text3
   772  06E6                     __ptext3:	
   773 ;; *************** function _spiWrite *****************
   774 ;; Defined at:
   775 ;;		line 92 in file "Labor4Slave.c"
   776 ;; Parameters:    Size  Location     Type
   777 ;;  dat             1    wreg     unsigned char 
   778 ;; Auto vars:     Size  Location     Type
   779 ;;  dat             1    0[COMMON] unsigned char 
   780 ;; Return value:  Size  Location     Type
   781 ;;                  1    wreg      void 
   782 ;; Registers used:
   783 ;;		wreg
   784 ;; Tracked objects:
   785 ;;		On entry : 0/0
   786 ;;		On exit  : 0/0
   787 ;;		Unchanged: 0/0
   788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   789 ;;      Params:         0       0       0       0       0
   790 ;;      Locals:         1       0       0       0       0
   791 ;;      Temps:          0       0       0       0       0
   792 ;;      Totals:         1       0       0       0       0
   793 ;;Total ram usage:        1 bytes
   794 ;; Hardware stack levels used:    1
   795 ;; This function calls:
   796 ;;		Nothing
   797 ;; This function is called by:
   798 ;;		_spiFunctionWriteMaster
   799 ;; This function uses a non-reentrant model
   800 ;;
   801                           
   802                           
   803                           ;psect for function _spiWrite
   804  06E6                     _spiWrite:	
   805                           
   806                           ;incstack = 0
   807                           ; Regs used in _spiWrite: [wreg]
   808                           ;spiWrite@dat stored from wreg
   809  06E6  00FA               	movwf	spiWrite@dat
   810  06E7                     l740:	
   811                           
   812                           ;Labor4Slave.c: 94:     SSPBUF = dat;
   813  06E7  087A               	movf	spiWrite@dat,w
   814  06E8  1283               	bcf	3,5	;RP0=0, select bank0
   815  06E9  1303               	bcf	3,6	;RP1=0, select bank0
   816  06EA  0093               	movwf	19	;volatile
   817  06EB                     l137:	
   818  06EB  0008               	return
   819  06EC                     __end_of_spiWrite:	
   820                           
   821                           	psect	text4
   822  0733                     __ptext4:	
   823 ;; *************** function _spiFunctionReadMaster *****************
   824 ;; Defined at:
   825 ;;		line 69 in file "Labor4Slave.c"
   826 ;; Parameters:    Size  Location     Type
   827 ;;		None
   828 ;; Auto vars:     Size  Location     Type
   829 ;;		None
   830 ;; Return value:  Size  Location     Type
   831 ;;                  1    wreg      void 
   832 ;; Registers used:
   833 ;;		wreg
   834 ;; Tracked objects:
   835 ;;		On entry : 0/0
   836 ;;		On exit  : 0/0
   837 ;;		Unchanged: 0/0
   838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   839 ;;      Params:         0       0       0       0       0
   840 ;;      Locals:         0       0       0       0       0
   841 ;;      Temps:          2       0       0       0       0
   842 ;;      Totals:         2       0       0       0       0
   843 ;;Total ram usage:        2 bytes
   844 ;; Hardware stack levels used:    1
   845 ;; This function calls:
   846 ;;		Nothing
   847 ;; This function is called by:
   848 ;;		_main
   849 ;; This function uses a non-reentrant model
   850 ;;
   851                           
   852                           
   853                           ;psect for function _spiFunctionReadMaster
   854  0733                     _spiFunctionReadMaster:	
   855  0733                     l127:	
   856                           ;incstack = 0
   857                           ; Regs used in _spiFunctionReadMaster: [wreg]
   858                           ;Labor4Slave.c: 70:     while(1){
   859                           
   860                           
   861                           ;Labor4Slave.c: 71:         if(SSPSTATbits.BF ==1){
   862  0733  1683               	bsf	3,5	;RP0=1, select bank1
   863  0734  1303               	bcf	3,6	;RP1=0, select bank1
   864  0735  1C14               	btfss	20,0	;volatile
   865  0736  2F38               	goto	u11
   866  0737  2F39               	goto	u10
   867  0738                     u11:	
   868  0738  2F33               	goto	l127
   869  0739                     u10:	
   870  0739                     l770:	
   871                           
   872                           ;Labor4Slave.c: 73:             _delay((unsigned long)((10)*(4000000/4000.0)));
   873  0739  300D               	movlw	13
   874  073A  00FB               	movwf	??_spiFunctionReadMaster+1
   875  073B  30FB               	movlw	251
   876  073C  00FA               	movwf	??_spiFunctionReadMaster
   877  073D                     u67:	
   878  073D  0BFA               	decfsz	??_spiFunctionReadMaster,f
   879  073E  2F3D               	goto	u67
   880  073F  0BFB               	decfsz	??_spiFunctionReadMaster+1,f
   881  0740  2F3D               	goto	u67
   882  0741  2F42               	nop2
   883                           
   884                           ;Labor4Slave.c: 74:             slaveIn = SSPBUF;
   885  0742  1283               	bcf	3,5	;RP0=0, select bank0
   886  0743  1303               	bcf	3,6	;RP1=0, select bank0
   887  0744  0813               	movf	19,w	;volatile
   888  0745  00FA               	movwf	??_spiFunctionReadMaster
   889  0746  087A               	movf	??_spiFunctionReadMaster,w
   890  0747  00F3               	movwf	_slaveIn
   891  0748                     l772:	
   892                           
   893                           ;Labor4Slave.c: 75:             SSPSTATbits.BF=0;
   894  0748  1683               	bsf	3,5	;RP0=1, select bank1
   895  0749  1303               	bcf	3,6	;RP1=0, select bank1
   896  074A  1014               	bcf	20,0	;volatile
   897                           
   898                           ;Labor4Slave.c: 78:             _delay((unsigned long)((20)*(4000000/4000.0)));
   899  074B  301A               	movlw	26
   900  074C  00FB               	movwf	??_spiFunctionReadMaster+1
   901  074D  30F8               	movlw	248
   902  074E  00FA               	movwf	??_spiFunctionReadMaster
   903  074F                     u77:	
   904  074F  0BFA               	decfsz	??_spiFunctionReadMaster,f
   905  0750  2F4F               	goto	u77
   906  0751  0BFB               	decfsz	??_spiFunctionReadMaster+1,f
   907  0752  2F4F               	goto	u77
   908  0753  0000               	nop
   909  0754                     l131:	
   910                           ;Labor4Slave.c: 79:             break;
   911                           
   912  0754  0008               	return
   913  0755                     __end_of_spiFunctionReadMaster:	
   914                           
   915                           	psect	text5
   916  06F4                     __ptext5:	
   917 ;; *************** function _adcInit *****************
   918 ;; Defined at:
   919 ;;		line 15 in file "Labor4Slave.c"
   920 ;; Parameters:    Size  Location     Type
   921 ;;		None
   922 ;; Auto vars:     Size  Location     Type
   923 ;;		None
   924 ;; Return value:  Size  Location     Type
   925 ;;                  1    wreg      void 
   926 ;; Registers used:
   927 ;;		wreg, status,2, status,0
   928 ;; Tracked objects:
   929 ;;		On entry : 0/0
   930 ;;		On exit  : 0/0
   931 ;;		Unchanged: 0/0
   932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   933 ;;      Params:         0       0       0       0       0
   934 ;;      Locals:         0       0       0       0       0
   935 ;;      Temps:          0       0       0       0       0
   936 ;;      Totals:         0       0       0       0       0
   937 ;;Total ram usage:        0 bytes
   938 ;; Hardware stack levels used:    1
   939 ;; This function calls:
   940 ;;		Nothing
   941 ;; This function is called by:
   942 ;;		_main
   943 ;; This function uses a non-reentrant model
   944 ;;
   945                           
   946                           
   947                           ;psect for function _adcInit
   948  06F4                     _adcInit:	
   949  06F4                     l752:	
   950                           ;incstack = 0
   951                           ; Regs used in _adcInit: [wreg+status,2+status,0]
   952                           
   953                           
   954                           ;Labor4Slave.c: 16:     ANSEL = 0b01000111;
   955  06F4  3047               	movlw	71
   956  06F5  1683               	bsf	3,5	;RP0=1, select bank3
   957  06F6  1703               	bsf	3,6	;RP1=1, select bank3
   958  06F7  0088               	movwf	8	;volatile
   959  06F8                     l754:	
   960                           
   961                           ;Labor4Slave.c: 17:     ANSELH = 0b00000000;
   962  06F8  0189               	clrf	9	;volatile
   963  06F9                     l756:	
   964                           
   965                           ;Labor4Slave.c: 18:     ADCON1bits.ADFM =0;
   966  06F9  1683               	bsf	3,5	;RP0=1, select bank1
   967  06FA  1303               	bcf	3,6	;RP1=0, select bank1
   968  06FB  139F               	bcf	31,7	;volatile
   969  06FC                     l758:	
   970                           
   971                           ;Labor4Slave.c: 19:     ADCON1bits.VCFG0 =0;
   972  06FC  121F               	bcf	31,4	;volatile
   973  06FD                     l760:	
   974                           
   975                           ;Labor4Slave.c: 20:     ADCON1bits.VCFG1 =0;
   976  06FD  129F               	bcf	31,5	;volatile
   977  06FE                     l762:	
   978                           
   979                           ;Labor4Slave.c: 21:     ADCON0bits.ADCS0 =1;
   980  06FE  1283               	bcf	3,5	;RP0=0, select bank0
   981  06FF  1303               	bcf	3,6	;RP1=0, select bank0
   982  0700  171F               	bsf	31,6	;volatile
   983  0701                     l764:	
   984                           
   985                           ;Labor4Slave.c: 22:     ADCON0bits.ADCS1 =0;
   986  0701  139F               	bcf	31,7	;volatile
   987  0702                     l766:	
   988                           
   989                           ;Labor4Slave.c: 23:     ADCON0bits.CHS = 0;
   990  0702  30C3               	movlw	-61
   991  0703  059F               	andwf	31,f	;volatile
   992  0704                     l768:	
   993                           
   994                           ;Labor4Slave.c: 24:     ADCON0bits.ADON = 1;
   995  0704  141F               	bsf	31,0	;volatile
   996  0705                     l115:	
   997  0705  0008               	return
   998  0706                     __end_of_adcInit:	
   999                           
  1000                           	psect	text6
  1001  0755                     __ptext6:	
  1002 ;; *************** function _POT *****************
  1003 ;; Defined at:
  1004 ;;		line 27 in file "Labor4Slave.c"
  1005 ;; Parameters:    Size  Location     Type
  1006 ;;  m               1    wreg     unsigned char 
  1007 ;; Auto vars:     Size  Location     Type
  1008 ;;  m               1    2[COMMON] unsigned char 
  1009 ;; Return value:  Size  Location     Type
  1010 ;;                  1    wreg      void 
  1011 ;; Registers used:
  1012 ;;		wreg, status,2, status,0
  1013 ;; Tracked objects:
  1014 ;;		On entry : 0/0
  1015 ;;		On exit  : 0/0
  1016 ;;		Unchanged: 0/0
  1017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1018 ;;      Params:         0       0       0       0       0
  1019 ;;      Locals:         1       0       0       0       0
  1020 ;;      Temps:          2       0       0       0       0
  1021 ;;      Totals:         3       0       0       0       0
  1022 ;;Total ram usage:        3 bytes
  1023 ;; Hardware stack levels used:    1
  1024 ;; This function calls:
  1025 ;;		Nothing
  1026 ;; This function is called by:
  1027 ;;		_main
  1028 ;; This function uses a non-reentrant model
  1029 ;;
  1030                           
  1031                           
  1032                           ;psect for function _POT
  1033  0755                     _POT:	
  1034                           
  1035                           ;incstack = 0
  1036                           ; Regs used in _POT: [wreg+status,2+status,0]
  1037                           ;POT@m stored from wreg
  1038  0755  00FC               	movwf	POT@m
  1039  0756                     l780:	
  1040                           
  1041                           ;Labor4Slave.c: 28:     slaveOut =0;
  1042  0756  01F2               	clrf	_slaveOut
  1043  0757                     l782:	
  1044                           
  1045                           ;Labor4Slave.c: 29:     _delay((unsigned long)((10)*(4000000/4000.0)));
  1046  0757  300D               	movlw	13
  1047  0758  00FB               	movwf	??_POT+1
  1048  0759  30FB               	movlw	251
  1049  075A  00FA               	movwf	??_POT
  1050  075B                     u87:	
  1051  075B  0BFA               	decfsz	??_POT,f
  1052  075C  2F5B               	goto	u87
  1053  075D  0BFB               	decfsz	??_POT+1,f
  1054  075E  2F5B               	goto	u87
  1055  075F  2F60               	nop2
  1056  0760                     l784:	
  1057                           
  1058                           ;Labor4Slave.c: 30:     ADCON0bits.CHS = m;
  1059  0760  087C               	movf	POT@m,w
  1060  0761  00FA               	movwf	??_POT
  1061  0762  0DFA               	rlf	??_POT,f
  1062  0763  0DFA               	rlf	??_POT,f
  1063  0764  1283               	bcf	3,5	;RP0=0, select bank0
  1064  0765  1303               	bcf	3,6	;RP1=0, select bank0
  1065  0766  081F               	movf	31,w	;volatile
  1066  0767  067A               	xorwf	??_POT,w
  1067  0768  39C3               	andlw	-61
  1068  0769  067A               	xorwf	??_POT,w
  1069  076A  009F               	movwf	31	;volatile
  1070  076B                     l786:	
  1071                           
  1072                           ;Labor4Slave.c: 31:     ADCON0bits.ADON =1;
  1073  076B  141F               	bsf	31,0	;volatile
  1074  076C                     l788:	
  1075                           
  1076                           ;Labor4Slave.c: 32:     _delay((unsigned long)((1)*(4000000/4000.0)));
  1077  076C  30C7               	movlw	199
  1078  076D  00FA               	movwf	??_POT
  1079  076E                     u97:	
  1080  076E  2F6F               	nop2
  1081  076F  0BFA               	decfsz	??_POT,f
  1082  0770  2F6E               	goto	u97
  1083  0771  2F72               	nop2
  1084  0772  2F73               	nop2
  1085  0773                     l790:	
  1086                           
  1087                           ;Labor4Slave.c: 33:     ADCON0bits.GO_DONE=1;
  1088  0773  1283               	bcf	3,5	;RP0=0, select bank0
  1089  0774  1303               	bcf	3,6	;RP1=0, select bank0
  1090  0775  149F               	bsf	31,1	;volatile
  1091  0776                     l118:	
  1092                           ;Labor4Slave.c: 34:     while(ADCON0bits.GO_DONE);
  1093                           
  1094  0776  189F               	btfsc	31,1	;volatile
  1095  0777  2F79               	goto	u21
  1096  0778  2F7A               	goto	u20
  1097  0779                     u21:	
  1098  0779  2F76               	goto	l118
  1099  077A                     u20:	
  1100  077A                     l792:	
  1101                           
  1102                           ;Labor4Slave.c: 35:         slaveOut = ADRESH;
  1103  077A  081E               	movf	30,w	;volatile
  1104  077B  00FA               	movwf	??_POT
  1105  077C  087A               	movf	??_POT,w
  1106  077D  00F2               	movwf	_slaveOut
  1107                           
  1108                           ;Labor4Slave.c: 40:         _delay((unsigned long)((5)*(4000000/4000.0)));
  1109  077E  3007               	movlw	7
  1110  077F  00FB               	movwf	??_POT+1
  1111  0780  307D               	movlw	125
  1112  0781  00FA               	movwf	??_POT
  1113  0782                     u107:	
  1114  0782  0BFA               	decfsz	??_POT,f
  1115  0783  2F82               	goto	u107
  1116  0784  0BFB               	decfsz	??_POT+1,f
  1117  0785  2F82               	goto	u107
  1118  0786                     l121:	
  1119  0786  0008               	return
  1120  0787                     __end_of_POT:	
  1121  007E                     btemp	set	126	;btemp
  1122  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         34
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4      14
    BANK0            80      0      24
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_spiFunctionWriteMaster
    _spiFunctionWriteMaster->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      45
                                _POT
                            _adcInit
              _spiFunctionReadMaster
             _spiFunctionWriteMaster
                       _spiSlaveInit
 ---------------------------------------------------------------------------------
 (1) _spiSlaveInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spiFunctionWriteMaster                               3     3      0      30
                                              1 COMMON     3     3      0
                           _spiWrite
 ---------------------------------------------------------------------------------
 (2) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiFunctionReadMaster                                2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POT                                                  3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _POT
   _adcInit
   _spiFunctionReadMaster
   _spiFunctionWriteMaster
     _spiWrite
   _spiSlaveInit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      26       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0      18       5       30.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      26      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Feb 20 01:12:27 2020

                              _m 0078                      __CFG_CP$OFF 0000                      _SSPSTATbits 0094  
                             u10 0739                               u11 0738                               u20 077A  
                             u21 0779                               u47 0720                               u57 072E  
                             u67 073D                               u77 074F                               u87 075B  
                             u97 076E                               fsr 0004                              l121 0786  
                            l115 0705                              l131 0754                              l124 071A  
                            l118 0776                              l134 0732                              l127 0733  
                            l137 06EB                              l800 078E                              l810 0793  
                            l802 078F                              l740 06E7                              l820 079C  
                            l812 0794                              l804 0790                              l750 0719  
                            l742 0706                              l830 07A4                              l822 079D  
                            l814 0796                              l806 0791                              l760 06FD  
                            l752 06F4                              l744 070F                              l840 07BA  
                            l832 07A5                              l824 079E                              l816 0797  
                            l808 0792                              l762 06FE                              l754 06F8  
                            l770 0739                              l746 0715                              l850 07D6  
                            l842 07C0                              l834 07AA                              l826 079F  
                            l818 0799                              l780 0756                              l764 0701  
                            l756 06F9                              l772 0748                              l748 0716  
                            l852 07DC                              l844 07C5                              l836 07AF  
                            l828 07A0                              l790 0773                              l782 0757  
                            l766 0702                              l758 06FC                              l774 071C  
                            l854 07E1                              l846 07CB                              l838 07B4  
                            l792 077A                              l784 0760                              l768 0704  
                            l776 0724                              l848 07D0                              l786 076B  
                            l778 072A                              l788 076C                              l796 0787  
                            l798 078D                              u107 0782                     __CFG_CPD$OFF 0000  
                            _POT 0755                              indf 0000                     __CFG_LVP$OFF 0000  
                           ?_POT 007A                             POT@m 007C                     __CFG_WRT$OFF 0000  
                           _main 0787                             _num1 0076                             _num2 0075  
                           _num3 0074                             _pot1 0077                             btemp 007E  
                           start 0000                    __CFG_IESO$OFF 0000                            ??_POT 007A  
                          ?_main 007A                  __end_of_adcInit 0706                    __CFG_WDTE$OFF 0000  
                          _ANSEL 0188                            _PORTA 0005                            _PORTB 0006  
                          _PORTC 0007                            _PORTD 0008                            _PORTE 0009  
                          _TRISA 0085                            _TRISB 0086                            _TRISE 0089  
                  __CFG_PWRTE$ON 0000                   __CFG_FCMEN$OFF 0000                            _bande 0070  
                 __CFG_BOREN$OFF 0000                            status 0003                            wtemp0 007E  
                 __CFG_MCLRE$OFF 0000                  __initialization 07EB                     __end_of_main 07EB  
                         ??_main 007E          ?_spiFunctionWriteMaster 007A                           _ADRESH 001E  
                         _ANSELH 0189                           _SSPBUF 0013                        ??_adcInit 007A  
                         _buffer 0024                           _valana 0079                           _number 0020  
 __end_of_spiFunctionWriteMaster 0733                 __end_of_spiWrite 06EC          __end_of__initialization 07FC  
                 __pcstackCOMMON 007A                       __pbssBANK0 0020            _spiFunctionReadMaster 0733  
                     __pmaintext 0787                        ?_spiWrite 007A                          _adcInit 06F4  
                        __ptext1 0706                          __ptext2 071B                          __ptext3 06E6  
                        __ptext4 0733                          __ptext5 06F4                          __ptext6 0755  
                   __size_of_POT 0032                          _slaveIn 0073                    ?_spiSlaveInit 007A  
                        clrloop0 06ED             end_of_initialization 07FC           ?_spiFunctionReadMaster 007A  
                     ??_spiWrite 007A                        _TRISCbits 0087                   ??_spiSlaveInit 007A  
                    spiWrite@dat 007A              start_initialization 07EB                      __end_of_POT 0787  
       __CFG_FOSC$INTRC_NOCLKOUT 0000                      __pbssCOMMON 0070                        ___latbits 0002  
           __end_of_spiSlaveInit 071B                _variableValeVerga 0071                         ?_adcInit 007A  
       ??_spiFunctionWriteMaster 007B                __size_of_spiWrite 0006          ??_spiFunctionReadMaster 007A  
                      clear_ram0 06EC                       _ADCON0bits 001F                       _ADCON1bits 009F  
               __size_of_adcInit 0012  __size_of_spiFunctionWriteMaster 0018                __CFG_BOR4V$BOR40V 0000  
                  __size_of_main 0064            __size_of_spiSlaveInit 0015                         _slaveOut 0072  
                       _spiWrite 06E6                     _spiSlaveInit 0706           _spiFunctionWriteMaster 071B  
                     _OSCCONbits 008F      spiFunctionWriteMaster@bande 007D   __size_of_spiFunctionReadMaster 0022  
  __end_of_spiFunctionReadMaster 0755                       _SSPCONbits 0014  
